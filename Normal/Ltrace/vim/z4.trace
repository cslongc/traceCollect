[0x4027b9] __libc_start_main(0x4305d8, 4, 0x7ffff30fcad8, 0x47f2a0, 0x47f330 <unfinished ...>
[0x4305fd] setlocale(6, "")                      = "en_US.UTF-8"
[0x443652] malloc(1025)                          = 0x021cffe0
[0x443652] malloc(1024)                          = 0x021d03f0
[0x458205] isatty(1)                             = 1
[0x443652] malloc(2376)                          = 0x021d0800
[0x44371c] memset(0x021d0800, '\000', 2376)      = 0x021d0800
[0x443652] malloc(16)                            = 0x021d1150
[0x443652] malloc(2)                             = 0x021d1170
[0x443652] malloc(1544)                          = 0x021d1190
[0x44371c] memset(0x021d1190, '\000', 1544)      = 0x021d1190
[0x443652] malloc(40)                            = 0x021d17a0
[0x4401da] getenv("HOME")                        = "/home/almohri"
[0x458644] getcwd(0x021d03f0, 1024)              = "/home/almohri/Downloads/vim/scri"...
[0x4401f5] chdir("/home/almohri")                = 0
[0x458644] getcwd(0x021cffe0, 1025)              = "/home/almohri"
[0x440221] chdir("/home/almohri/Downloads/vim/scri"...) = 0
[0x443652] malloc(14)                            = 0x021d17d0
[0x44378b] memmove(0x21d17d0, 0x21cffe0, 14, 8, 3) = 0x21d17d0
[0x45370f] getenv("SHELL")                       = "/bin/bash"
[0x443652] malloc(10)                            = 0x021d17f0
[0x44378b] memmove(0x21d17f0, 0x7ffff30fd1c7, 10, 8, 3) = 0x21d17f0
[0x4521b8] strcmp("sh", "scroll")                = 5
[0x4521b8] strcmp("sh", "scrollbind")            = 5
[0x4521b8] strcmp("sh", "scrolljump")            = 5
[0x4521b8] strcmp("sh", "scrolloff")             = 5
[0x4521b8] strcmp("sh", "scrollopt")             = 5
[0x4521b8] strcmp("sh", "sections")              = 3
[0x4521b8] strcmp("sh", "secure")                = 3
[0x4521b8] strcmp("sh", "selection")             = 3
[0x4521b8] strcmp("sh", "selectmode")            = 3
[0x4521b8] strcmp("sh", "sessionoptions")        = 3
[0x4521b8] strcmp("sh", "shell")                 = -101
[0x4521b8] strcmp("sh", "shellcmdflag")          = -101
[0x4521b8] strcmp("sh", "shellpipe")             = -101
[0x4521b8] strcmp("sh", "shellquote")            = -101
[0x4521b8] strcmp("sh", "shellredir")            = -101
[0x4521b8] strcmp("sh", "shellslash")            = -101
[0x4521b8] strcmp("sh", "shelltype")             = -101
[0x4521b8] strcmp("sh", "shellxquote")           = -101
[0x4521b8] strcmp("sh", "shiftround")            = -105
[0x4521b8] strcmp("sh", "shiftwidth")            = -105
[0x4521b8] strcmp("sh", "shortmess")             = -111
[0x4521b8] strcmp("sh", "shortname")             = -111
[0x4521b8] strcmp("sh", "showbreak")             = -111
[0x4521b8] strcmp("sh", "showcmd")               = -111
[0x4521b8] strcmp("sh", "showfulltag")           = -111
[0x4521b8] strcmp("sh", "showmatch")             = -111
[0x4521b8] strcmp("sh", "showmode")              = -111
[0x4521b8] strcmp("sh", "sidescroll")            = -1
[0x4521b8] strcmp("sh", "slowopen")              = -4
[0x4521b8] strcmp("sh", "smartcase")             = -5
[0x4521b8] strcmp("sh", "smartindent")           = -5
[0x4521b8] strcmp("sh", "smarttab")              = -5
[0x4521b8] strcmp("sh", "softtabstop")           = -7
[0x4521b8] strcmp("sh", "sourceany")             = -7
[0x4521b8] strcmp("sh", "splitbelow")            = -8
[0x4521b8] strcmp("sh", "startofline")           = -12
[0x4521b8] strcmp("sh", "statusline")            = -12
[0x4521b8] strcmp("sh", "suffixes")              = -13
[0x4521b8] strcmp("sh", "swapfile")              = -15
[0x4521b8] strcmp("sh", "swapsync")              = -15
[0x4521b8] strcmp("sh", "switchbuf")             = -15
[0x4521b8] strcmp("sh", "syntax")                = -17
[0x4521b8] strcmp("sh", "tabstop")               = -1
[0x4521b8] strcmp("sh", "tagbsearch")            = -1
[0x4521b8] strcmp("sh", "taglength")             = -1
[0x4521b8] strcmp("sh", "tagrelative")           = -1
[0x4521b8] strcmp("sh", "tags")                  = -1
[0x4521b8] strcmp("sh", "tagstack")              = -1
[0x4521b8] strcmp("sh", "term")                  = -1
[0x4521b8] strcmp("sh", "terse")                 = -1
[0x4521b8] strcmp("sh", "textauto")              = -1
[0x4521b8] strcmp("sh", "textmode")              = -1
[0x4521b8] strcmp("sh", "textwidth")             = -1
[0x4521b8] strcmp("sh", "tildeop")               = -1
[0x4521b8] strcmp("sh", "timeout")               = -1
[0x4521b8] strcmp("sh", "timeoutlen")            = -1
[0x4521b8] strcmp("sh", "title")                 = -1
[0x4521b8] strcmp("sh", "titlelen")              = -1
[0x4521b8] strcmp("sh", "titleold")              = -1
[0x4521b8] strcmp("sh", "titlestring")           = -1
[0x4521b8] strcmp("sh", "ttimeout")              = -1
[0x4521b8] strcmp("sh", "ttimeoutlen")           = -1
[0x4521b8] strcmp("sh", "ttybuiltin")            = -1
[0x4521b8] strcmp("sh", "ttyfast")               = -1
[0x4521b8] strcmp("sh", "ttymouse")              = -1
[0x4521b8] strcmp("sh", "ttyscroll")             = -1
[0x4521b8] strcmp("sh", "ttytype")               = -1
[0x4521b8] strcmp("sh", "undolevels")            = -2
[0x4521b8] strcmp("sh", "updatecount")           = -2
[0x4521b8] strcmp("sh", "updatetime")            = -2
[0x4521b8] strcmp("sh", "verbose")               = -3
[0x4521b8] strcmp("sh", "viminfo")               = -3
[0x4521b8] strcmp("sh", "visualbell")            = -3
[0x4521b8] strcmp("sh", "w300")                  = -4
[0x4521b8] strcmp("sh", "w1200")                 = -4
[0x4521b8] strcmp("sh", "w9600")                 = -4
[0x4521b8] strcmp("sh", "warn")                  = -4
[0x4521b8] strcmp("sh", "weirdinvert")           = -4
[0x4521b8] strcmp("sh", "whichwrap")             = -4
[0x4521b8] strcmp("sh", "wildchar")              = -4
[0x4521b8] strcmp("sh", "wildcharm")             = -4
[0x4521b8] strcmp("sh", "wildignore")            = -4
[0x4521b8] strcmp("sh", "wildmenu")              = -4
[0x4521b8] strcmp("sh", "wildmode")              = -4
[0x4521b8] strcmp("sh", "winaltkeys")            = -4
[0x4521b8] strcmp("sh", "window")                = -4
[0x4521b8] strcmp("sh", "winheight")             = -4
[0x4521b8] strcmp("sh", "winminheight")          = -4
[0x4521b8] strcmp("sh", "wrap")                  = -4
[0x4521b8] strcmp("sh", "wrapmargin")            = -4
[0x4521b8] strcmp("sh", "wrapscan")              = -4
[0x4521b8] strcmp("sh", "write")                 = -4
[0x4521b8] strcmp("sh", "writeany")              = -4
[0x4521b8] strcmp("sh", "writebackup")           = -4
[0x4521b8] strcmp("sh", "writedelay")            = -4
[0x4521b8] strcmp("sh", "t_AB")                  = -1
[0x4521b8] strcmp("sh", "t_AF")                  = -1
[0x4521b8] strcmp("sh", "t_AL")                  = -1
[0x4521b8] strcmp("sh", "t_al")                  = -1
[0x4521b8] strcmp("sh", "t_bc")                  = -1
[0x4521b8] strcmp("sh", "t_cd")                  = -1
[0x4521b8] strcmp("sh", "t_ce")                  = -1
[0x4521b8] strcmp("sh", "t_cl")                  = -1
[0x4521b8] strcmp("sh", "t_cm")                  = -1
[0x4521b8] strcmp("sh", "t_Co")                  = -1
[0x4521b8] strcmp("sh", "t_CS")                  = -1
[0x4521b8] strcmp("sh", "t_cs")                  = -1
[0x4521b8] strcmp("sh", "t_da")                  = -1
[0x4521b8] strcmp("sh", "t_db")                  = -1
[0x4521b8] strcmp("sh", "t_DL")                  = -1
[0x4521b8] strcmp("sh", "t_dl")                  = -1
[0x4521b8] strcmp("sh", "t_fs")                  = -1
[0x4521b8] strcmp("sh", "t_IE")                  = -1
[0x4521b8] strcmp("sh", "t_IS")                  = -1
[0x4521b8] strcmp("sh", "t_ke")                  = -1
[0x4521b8] strcmp("sh", "t_ks")                  = -1
[0x4521b8] strcmp("sh", "t_le")                  = -1
[0x4521b8] strcmp("sh", "t_mb")                  = -1
[0x4521b8] strcmp("sh", "t_md")                  = -1
[0x4521b8] strcmp("sh", "t_me")                  = -1
[0x4521b8] strcmp("sh", "t_mr")                  = -1
[0x4521b8] strcmp("sh", "t_ms")                  = -1
[0x4521b8] strcmp("sh", "t_nd")                  = -1
[0x4521b8] strcmp("sh", "t_op")                  = -1
[0x4521b8] strcmp("sh", "t_RI")                  = -1
[0x4521b8] strcmp("sh", "t_RV")                  = -1
[0x4521b8] strcmp("sh", "t_Sb")                  = -1
[0x4521b8] strcmp("sh", "t_Sf")                  = -1
[0x4521b8] strcmp("sh", "t_se")                  = -1
[0x4521b8] strcmp("sh", "t_so")                  = -1
[0x4521b8] strcmp("sh", "t_sr")                  = -1
[0x4521b8] strcmp("sh", "t_ts")                  = -1
[0x4521b8] strcmp("sh", "t_te")                  = -1
[0x4521b8] strcmp("sh", "t_ti")                  = -1
[0x4521b8] strcmp("sh", "t_ue")                  = -1
[0x4521b8] strcmp("sh", "t_us")                  = -1
[0x4521b8] strcmp("sh", "t_vb")                  = -1
[0x4521b8] strcmp("sh", "t_ve")                  = -1
[0x4521b8] strcmp("sh", "t_vi")                  = -1
[0x4521b8] strcmp("sh", "t_vs")                  = -1
[0x4521b8] strcmp("sh", "t_WP")                  = -1
[0x4521b8] strcmp("sh", "t_WS")                  = -1
[0x4521b8] strcmp("sh", "t_xs")                  = -1
[0x4521b8] strcmp("sh", "t_ZH")                  = -1
[0x4521b8] strcmp("sh", "t_ZR")                  = -1
[0x452229] strcmp("sh", "scr")                   = 5
[0x452229] strcmp("sh", "scb")                   = 5
[0x452229] strcmp("sh", "sj")                    = -2
[0x452229] strcmp("sh", "so")                    = -7
[0x452229] strcmp("sh", "sbo")                   = 6
[0x452229] strcmp("sh", "sect")                  = 3
[0x452229] strcmp("sh", "sel")                   = 3
[0x452229] strcmp("sh", "slm")                   = -4
[0x452229] strcmp("sh", "ssop")                  = -11
[0x452229] strcmp("sh", "sh")                    = 0
[0x4521b8] strcmp("maxmemtot", "magic")          = 17
[0x4521b8] strcmp("maxmemtot", "makeef")         = 13
[0x4521b8] strcmp("maxmemtot", "makeprg")        = 13
[0x4521b8] strcmp("maxmemtot", "matchpairs")     = 4
[0x4521b8] strcmp("maxmemtot", "matchtime")      = 4
[0x4521b8] strcmp("maxmemtot", "maxfuncdepth")   = 7
[0x4521b8] strcmp("maxmemtot", "maxmapdepth")    = 4
[0x4521b8] strcmp("maxmemtot", "maxmem")         = 116
[0x4521b8] strcmp("maxmemtot", "maxmemtot")      = 0
[0x443652] malloc(21)                            = 0x021d1810
[0x44378b] memmove(0x21d1810, 0x489af9, 21, 8, 3) = 0x21d1810
[0x443652] malloc(1)                             = 0x021d1830
[0x44378b] memmove(0x21d1830, 0x487d3b, 1, 8, 3) = 0x21d1830
[0x443652] malloc(28)                            = 0x021d1850
[0x44378b] memmove(0x21d1850, 0x489b2c, 28, 16, 3) = 0x21d1850
[0x443652] malloc(44)                            = 0x021d1880
[0x44378b] memmove(0x21d1880, 0x48a860, 44, 32, 3) = 0x21d1880
[0x443652] malloc(12)                            = 0x021d18c0
[0x44378b] memmove(0x21d18c0, 0x489b5d, 12, 8, 3) = 0x21d18c0
[0x443652] malloc(5)                             = 0x021d18e0
[0x44378b] memmove(0x21d18e0, 0x47faa9, 5, 8, 3) = 0x21d18e0
[0x443652] malloc(1)                             = 0x021d1900
[0x44378b] memmove(0x21d1900, 0x487d3b, 1, 8, 3) = 0x21d1900
[0x443652] malloc(3)                             = 0x021d1920
[0x44378b] memmove(0x21d1920, 0x48aa98, 3, 8, 3) = 0x21d1920
[0x443652] malloc(10)                            = 0x021d1940
[0x44378b] memmove(0x21d1940, 0x489e81, 10, 8, 3) = 0x21d1940
[0x443652] malloc(1)                             = 0x021d1960
[0x44378b] memmove(0x21d1960, 0x487d3b, 1, 8, 3) = 0x21d1960
[0x443652] malloc(12)                            = 0x021d1980
[0x44378b] memmove(0x21d1980, 0x489f1e, 12, 8, 3) = 0x21d1980
[0x443652] malloc(10)                            = 0x021d19a0
[0x44378b] memmove(0x21d19a0, 0x489fb1, 10, 8, 3) = 0x21d19a0
[0x443652] malloc(1)                             = 0x021d19c0
[0x44378b] memmove(0x21d19c0, 0x487d3b, 1, 8, 3) = 0x21d19c0
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e67, 0, 10, 52, 3)        = 48
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e6a, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 57
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e6f, 0, 10, 49, 0x7fc3b373a020) = 192
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e73, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 255
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e95, 0, 10, 49, 0x7fc3b373a020) = 161
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e99, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 255
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e43, 0, 10, 52, 0x7fc3b373a020) = 48
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e46, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 57
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x21d1942, 0, 10, 52, 0x7fc3b373a020) = 48
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x21d1945, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 57
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x440c1a] strcpy(0x021d03f2, "/home/almohri")   = 0x021d03f2
[0x440c1a] strcpy(0x021d0404, "/home/almohri")   = 0x021d0404
[0x452d71] strcmp(".,/home/almohri/tmp,/home/almohr"..., ".,~/tmp,~/") = -79
[0x443652] malloc(35)                            = 0x021d19e0
[0x44378b] memmove(0x21d19e0, 0x21d03f0, 35, 16, 3) = 0x21d19e0
[0x452d71] strcmp("", "")                        = 0
[0x440c1a] strcpy(0x021d03f2, "/home/almohri")   = 0x021d03f2
[0x452d71] strcmp(".,/home/almohri/tmp,/var/tmp,/tm"..., ".,~/tmp,/var/tmp,/tmp") = -79
[0x443652] malloc(34)                            = 0x021d1a10
[0x44378b] memmove(0x21d1a10, 0x21d03f0, 34, 16, 3) = 0x21d1a10
[0x452d71] strcmp("", "")                        = 0
[0x452d71] strcmp("errors.err", "errors.err")    = 0
[0x452d71] strcmp("", "")                        = 0
[0x452d71] strcmp("grep -n", "grep -n")          = 0
[0x440889] getenv("VIMRUNTIME")                  = NULL
[0x440911] getenv("VIM")                         = NULL
[0x443652] malloc(29)                            = 0x021d1a40
[0x4406bf] strcpy(0x021d1a40, "/vim/source/share/vim") = 0x021d1a40
[0x4406d7] strcat("/vim/source/share/vim/", "vim58") = "/vim/source/share/vim/vim58"
[0x45890d] __xstat(1, "/vim/source/share/vim/vim58", 0x7ffff30fc770) = -1
[0x443968] free(0x021d1a40)                      = <void>
[0x443652] malloc(31)                            = 0x021d1a40
[0x4406bf] strcpy(0x021d1a40, "/vim/source/share/vim") = 0x021d1a40
[0x4406d7] strcat("/vim/source/share/vim/", "runtime") = "/vim/source/share/vim/runtime"
[0x45890d] __xstat(1, "/vim/source/share/vim/runtime", 0x7ffff30fc770) = -1
[0x443968] free(0x021d1a40)                      = <void>
[0x44025f] setenv("VIMRUNTIME", "/vim/source/share/vim", 1) = 0
[0x440c1a] strcpy(0x021d03f0, "/vim/source/share/vim") = 0x021d03f0
[0x452d71] strcmp("/vim/source/share/vim/doc/help.t"..., "$VIMRUNTIME/doc/help.txt") = 11
[0x443652] malloc(35)                            = 0x021d1c50
[0x44378b] memmove(0x21d1c50, 0x21d03f0, 35, 16, 3) = 0x21d1c50
[0x452d71] strcmp("man -s", "man -s")            = 0
[0x452d71] strcmp("/tmp/vim##.err", "/tmp/vim##.err") = 0
[0x452d71] strcmp("make", "make")                = 0
[0x452d71] strcmp(".,/usr/include,,", ".,/usr/include,,") = 0
[0x452d71] strcmp("/bin/bash", "/bin/bash")      = 0
[0x452d71] strcmp("./tags,tags", "./tags,tags")  = 0
[0x452d71] strcmp("", "")                        = 0
[0x452d71] strcmp("", "")                        = 0
[0x4521b8] strcmp("hl", "hardtabs")              = 11
[0x4521b8] strcmp("hl", "helpfile")              = 7
[0x4521b8] strcmp("hl", "helpheight")            = 7
[0x4521b8] strcmp("hl", "hidden")                = 3
[0x4521b8] strcmp("hl", "highlight")             = 3
[0x4521b8] strcmp("hl", "history")               = 3
[0x4521b8] strcmp("hl", "hkmap")                 = 1
[0x4521b8] strcmp("hl", "hkmapp")                = 1
[0x4521b8] strcmp("hl", "hlsearch")              = -115
[0x4521b8] strcmp("hl", "icon")                  = -1
[0x4521b8] strcmp("hl", "iconstring")            = -1
[0x4521b8] strcmp("hl", "ignorecase")            = -1
[0x4521b8] strcmp("hl", "include")               = -1
[0x4521b8] strcmp("hl", "incsearch")             = -1
[0x4521b8] strcmp("hl", "infercase")             = -1
[0x4521b8] strcmp("hl", "insertmode")            = -1
[0x4521b8] strcmp("hl", "isfname")               = -1
[0x4521b8] strcmp("hl", "isident")               = -1
[0x4521b8] strcmp("hl", "iskeyword")             = -1
[0x4521b8] strcmp("hl", "isprint")               = -1
[0x4521b8] strcmp("hl", "joinspaces")            = -2
[0x4521b8] strcmp("hl", "key")                   = -3
[0x4521b8] strcmp("hl", "keymodel")              = -3
[0x4521b8] strcmp("hl", "keywordprg")            = -3
[0x4521b8] strcmp("hl", "langmap")               = -4
[0x4521b8] strcmp("hl", "laststatus")            = -4
[0x4521b8] strcmp("hl", "lazyredraw")            = -4
[0x4521b8] strcmp("hl", "linebreak")             = -4
[0x4521b8] strcmp("hl", "lines")                 = -4
[0x4521b8] strcmp("hl", "lisp")                  = -4
[0x4521b8] strcmp("hl", "list")                  = -4
[0x4521b8] strcmp("hl", "listchars")             = -4
[0x4521b8] strcmp("hl", "magic")                 = -5
[0x4521b8] strcmp("hl", "makeef")                = -5
[0x4521b8] strcmp("hl", "makeprg")               = -5
[0x4521b8] strcmp("hl", "matchpairs")            = -5
[0x4521b8] strcmp("hl", "matchtime")             = -5
[0x4521b8] strcmp("hl", "maxfuncdepth")          = -5
[0x4521b8] strcmp("hl", "maxmapdepth")           = -5
[0x4521b8] strcmp("hl", "maxmem")                = -5
[0x4521b8] strcmp("hl", "maxmemtot")             = -5
[0x4521b8] strcmp("hl", "mesg")                  = -5
[0x4521b8] strcmp("hl", "modeline")              = -5
[0x4521b8] strcmp("hl", "modelines")             = -5
[0x4521b8] strcmp("hl", "modified")              = -5
[0x4521b8] strcmp("hl", "more")                  = -5
[0x4521b8] strcmp("hl", "mouse")                 = -5
[0x4521b8] strcmp("hl", "mousefocus")            = -5
[0x4521b8] strcmp("hl", "mousehide")             = -5
[0x4521b8] strcmp("hl", "mousemodel")            = -5
[0x4521b8] strcmp("hl", "mousetime")             = -5
[0x4521b8] strcmp("hl", "novice")                = -6
[0x4521b8] strcmp("hl", "nrformats")             = -6
[0x4521b8] strcmp("hl", "number")                = -6
[0x4521b8] strcmp("hl", "open")                  = -7
[0x4521b8] strcmp("hl", "optimize")              = -7
[0x4521b8] strcmp("hl", "osfiletype")            = -7
[0x4521b8] strcmp("hl", "paragraphs")            = -8
[0x4521b8] strcmp("hl", "paste")                 = -8
[0x4521b8] strcmp("hl", "pastetoggle")           = -8
[0x4521b8] strcmp("hl", "patchmode")             = -8
[0x4521b8] strcmp("hl", "path")                  = -8
[0x4521b8] strcmp("hl", "previewheight")         = -8
[0x4521b8] strcmp("hl", "prompt")                = -8
[0x4521b8] strcmp("hl", "readonly")              = -10
[0x4521b8] strcmp("hl", "redraw")                = -10
[0x4521b8] strcmp("hl", "remap")                 = -10
[0x4521b8] strcmp("hl", "report")                = -10
[0x4521b8] strcmp("hl", "restorescreen")         = -10
[0x4521b8] strcmp("hl", "revins")                = -10
[0x4521b8] strcmp("hl", "rightleft")             = -10
[0x4521b8] strcmp("hl", "ruler")                 = -10
[0x4521b8] strcmp("hl", "rulerformat")           = -10
[0x4521b8] strcmp("hl", "scroll")                = -11
[0x4521b8] strcmp("hl", "scrollbind")            = -11
[0x4521b8] strcmp("hl", "scrolljump")            = -11
[0x4521b8] strcmp("hl", "scrolloff")             = -11
[0x4521b8] strcmp("hl", "scrollopt")             = -11
[0x4521b8] strcmp("hl", "sections")              = -11
[0x4521b8] strcmp("hl", "secure")                = -11
[0x4521b8] strcmp("hl", "selection")             = -11
[0x4521b8] strcmp("hl", "selectmode")            = -11
[0x4521b8] strcmp("hl", "sessionoptions")        = -11
[0x4521b8] strcmp("hl", "shell")                 = -11
[0x4521b8] strcmp("hl", "shellcmdflag")          = -11
[0x4521b8] strcmp("hl", "shellpipe")             = -11
[0x4521b8] strcmp("hl", "shellquote")            = -11
[0x4521b8] strcmp("hl", "shellredir")            = -11
[0x4521b8] strcmp("hl", "shellslash")            = -11
[0x4521b8] strcmp("hl", "shelltype")             = -11
[0x4521b8] strcmp("hl", "shellxquote")           = -11
[0x4521b8] strcmp("hl", "shiftround")            = -11
[0x4521b8] strcmp("hl", "shiftwidth")            = -11
[0x4521b8] strcmp("hl", "shortmess")             = -11
[0x4521b8] strcmp("hl", "shortname")             = -11
[0x4521b8] strcmp("hl", "showbreak")             = -11
[0x4521b8] strcmp("hl", "showcmd")               = -11
[0x4521b8] strcmp("hl", "showfulltag")           = -11
[0x4521b8] strcmp("hl", "showmatch")             = -11
[0x4521b8] strcmp("hl", "showmode")              = -11
[0x4521b8] strcmp("hl", "sidescroll")            = -11
[0x4521b8] strcmp("hl", "slowopen")              = -11
[0x4521b8] strcmp("hl", "smartcase")             = -11
[0x4521b8] strcmp("hl", "smartindent")           = -11
[0x4521b8] strcmp("hl", "smarttab")              = -11
[0x4521b8] strcmp("hl", "softtabstop")           = -11
[0x4521b8] strcmp("hl", "sourceany")             = -11
[0x4521b8] strcmp("hl", "splitbelow")            = -11
[0x4521b8] strcmp("hl", "startofline")           = -11
[0x4521b8] strcmp("hl", "statusline")            = -11
[0x4521b8] strcmp("hl", "suffixes")              = -11
[0x4521b8] strcmp("hl", "swapfile")              = -11
[0x4521b8] strcmp("hl", "swapsync")              = -11
[0x4521b8] strcmp("hl", "switchbuf")             = -11
[0x4521b8] strcmp("hl", "syntax")                = -11
[0x4521b8] strcmp("hl", "tabstop")               = -12
[0x4521b8] strcmp("hl", "tagbsearch")            = -12
[0x4521b8] strcmp("hl", "taglength")             = -12
[0x4521b8] strcmp("hl", "tagrelative")           = -12
[0x4521b8] strcmp("hl", "tags")                  = -12
[0x4521b8] strcmp("hl", "tagstack")              = -12
[0x4521b8] strcmp("hl", "term")                  = -12
[0x4521b8] strcmp("hl", "terse")                 = -12
[0x4521b8] strcmp("hl", "textauto")              = -12
[0x4521b8] strcmp("hl", "textmode")              = -12
[0x4521b8] strcmp("hl", "textwidth")             = -12
[0x4521b8] strcmp("hl", "tildeop")               = -12
[0x4521b8] strcmp("hl", "timeout")               = -12
[0x4521b8] strcmp("hl", "timeoutlen")            = -12
[0x4521b8] strcmp("hl", "title")                 = -12
[0x4521b8] strcmp("hl", "titlelen")              = -12
[0x4521b8] strcmp("hl", "titleold")              = -12
[0x4521b8] strcmp("hl", "titlestring")           = -12
[0x4521b8] strcmp("hl", "ttimeout")              = -12
[0x4521b8] strcmp("hl", "ttimeoutlen")           = -12
[0x4521b8] strcmp("hl", "ttybuiltin")            = -12
[0x4521b8] strcmp("hl", "ttyfast")               = -12
[0x4521b8] strcmp("hl", "ttymouse")              = -12
[0x4521b8] strcmp("hl", "ttyscroll")             = -12
[0x4521b8] strcmp("hl", "ttytype")               = -12
[0x4521b8] strcmp("hl", "undolevels")            = -13
[0x4521b8] strcmp("hl", "updatecount")           = -13
[0x4521b8] strcmp("hl", "updatetime")            = -13
[0x4521b8] strcmp("hl", "verbose")               = -14
[0x4521b8] strcmp("hl", "viminfo")               = -14
[0x4521b8] strcmp("hl", "visualbell")            = -14
[0x4521b8] strcmp("hl", "w300")                  = -15
[0x4521b8] strcmp("hl", "w1200")                 = -15
[0x4521b8] strcmp("hl", "w9600")                 = -15
[0x4521b8] strcmp("hl", "warn")                  = -15
[0x4521b8] strcmp("hl", "weirdinvert")           = -15
[0x4521b8] strcmp("hl", "whichwrap")             = -15
[0x4521b8] strcmp("hl", "wildchar")              = -15
[0x4521b8] strcmp("hl", "wildcharm")             = -15
[0x4521b8] strcmp("hl", "wildignore")            = -15
[0x4521b8] strcmp("hl", "wildmenu")              = -15
[0x4521b8] strcmp("hl", "wildmode")              = -15
[0x4521b8] strcmp("hl", "winaltkeys")            = -15
[0x4521b8] strcmp("hl", "window")                = -15
[0x4521b8] strcmp("hl", "winheight")             = -15
[0x4521b8] strcmp("hl", "winminheight")          = -15
[0x4521b8] strcmp("hl", "wrap")                  = -15
[0x4521b8] strcmp("hl", "wrapmargin")            = -15
[0x4521b8] strcmp("hl", "wrapscan")              = -15
[0x4521b8] strcmp("hl", "write")                 = -15
[0x4521b8] strcmp("hl", "writeany")              = -15
[0x4521b8] strcmp("hl", "writebackup")           = -15
[0x4521b8] strcmp("hl", "writedelay")            = -15
[0x4521b8] strcmp("hl", "t_AB")                  = -12
[0x4521b8] strcmp("hl", "t_AF")                  = -12
[0x4521b8] strcmp("hl", "t_AL")                  = -12
[0x4521b8] strcmp("hl", "t_al")                  = -12
[0x4521b8] strcmp("hl", "t_bc")                  = -12
[0x4521b8] strcmp("hl", "t_cd")                  = -12
[0x4521b8] strcmp("hl", "t_ce")                  = -12
[0x4521b8] strcmp("hl", "t_cl")                  = -12
[0x4521b8] strcmp("hl", "t_cm")                  = -12
[0x4521b8] strcmp("hl", "t_Co")                  = -12
[0x4521b8] strcmp("hl", "t_CS")                  = -12
[0x4521b8] strcmp("hl", "t_cs")                  = -12
[0x4521b8] strcmp("hl", "t_da")                  = -12
[0x4521b8] strcmp("hl", "t_db")                  = -12
[0x4521b8] strcmp("hl", "t_DL")                  = -12
[0x4521b8] strcmp("hl", "t_dl")                  = -12
[0x4521b8] strcmp("hl", "t_fs")                  = -12
[0x4521b8] strcmp("hl", "t_IE")                  = -12
[0x4521b8] strcmp("hl", "t_IS")                  = -12
[0x4521b8] strcmp("hl", "t_ke")                  = -12
[0x4521b8] strcmp("hl", "t_ks")                  = -12
[0x4521b8] strcmp("hl", "t_le")                  = -12
[0x4521b8] strcmp("hl", "t_mb")                  = -12
[0x4521b8] strcmp("hl", "t_md")                  = -12
[0x4521b8] strcmp("hl", "t_me")                  = -12
[0x4521b8] strcmp("hl", "t_mr")                  = -12
[0x4521b8] strcmp("hl", "t_ms")                  = -12
[0x4521b8] strcmp("hl", "t_nd")                  = -12
[0x4521b8] strcmp("hl", "t_op")                  = -12
[0x4521b8] strcmp("hl", "t_RI")                  = -12
[0x4521b8] strcmp("hl", "t_RV")                  = -12
[0x4521b8] strcmp("hl", "t_Sb")                  = -12
[0x4521b8] strcmp("hl", "t_Sf")                  = -12
[0x4521b8] strcmp("hl", "t_se")                  = -12
[0x4521b8] strcmp("hl", "t_so")                  = -12
[0x4521b8] strcmp("hl", "t_sr")                  = -12
[0x4521b8] strcmp("hl", "t_ts")                  = -12
[0x4521b8] strcmp("hl", "t_te")                  = -12
[0x4521b8] strcmp("hl", "t_ti")                  = -12
[0x4521b8] strcmp("hl", "t_ue")                  = -12
[0x4521b8] strcmp("hl", "t_us")                  = -12
[0x4521b8] strcmp("hl", "t_vb")                  = -12
[0x4521b8] strcmp("hl", "t_ve")                  = -12
[0x4521b8] strcmp("hl", "t_vi")                  = -12
[0x4521b8] strcmp("hl", "t_vs")                  = -12
[0x4521b8] strcmp("hl", "t_WP")                  = -12
[0x4521b8] strcmp("hl", "t_WS")                  = -12
[0x4521b8] strcmp("hl", "t_xs")                  = -12
[0x4521b8] strcmp("hl", "t_ZH")                  = -12
[0x4521b8] strcmp("hl", "t_ZR")                  = -12
[0x452229] strcmp("hl", "ht")                    = -8
[0x452229] strcmp("hl", "hf")                    = 6
[0x452229] strcmp("hl", "hh")                    = 4
[0x452229] strcmp("hl", "hid")                   = 3
[0x452229] strcmp("hl", "hl")                    = 0
[0x443652] malloc(11)                            = 0x021d1c80
[0x4437da] strncpy(0x021d1c80, "SpecialKey", 10) = 0x021d1c80
[0x443652] malloc(11)                            = 0x021d1ca0
[0x44378b] memmove(0x21d1ca0, 0x21d1c80, 11, 8, 3) = 0x21d1ca0
[0x443968] free(0x021d1ca0)                      = <void>
[0x443652] malloc(720)                           = 0x021d1cc0
[0x44371c] memset(0x021d1cc0, '\000', 720)       = 0x021d1cc0
[0x443652] malloc(11)                            = 0x021d1ca0
[0x44378b] memmove(0x21d1ca0, 0x21d1c80, 11, 0x7fc3b3739728, 0) = 0x21d1ca0
[0x443652] malloc(8)                             = 0x021d1fa0
[0x4437da] strncpy(0x021d1fa0, "NonText", 7)     = 0x021d1fa0
[0x443652] malloc(8)                             = 0x021d1fc0
[0x44378b] memmove(0x21d1fc0, 0x21d1fa0, 8, 8, 3) = 0x21d1fc0
[0x46fd29] strcmp("NONTEXT", "SPECIALKEY")       = -5
[0x443968] free(0x021d1fc0)                      = <void>
[0x443652] malloc(8)                             = 0x021d1fc0
[0x44378b] memmove(0x21d1fc0, 0x21d1fa0, 8, 0x7fc3b3739728, 0) = 0x21d1fc0
[0x443652] malloc(10)                            = 0x021d1fe0
[0x4437da] strncpy(0x021d1fe0, "Directory", 9)   = 0x021d1fe0
[0x443652] malloc(10)                            = 0x021d2000
[0x44378b] memmove(0x21d2000, 0x21d1fe0, 10, 8, 3) = 0x21d2000
[0x46fd29] strcmp("DIRECTORY", "NONTEXT")        = -10
[0x46fd29] strcmp("DIRECTORY", "SPECIALKEY")     = -15
[0x443968] free(0x021d2000)                      = <void>
[0x443652] malloc(10)                            = 0x021d2000
[0x44378b] memmove(0x21d2000, 0x21d1fe0, 10, 0x7fc3b3739728, 0) = 0x21d2000
[0x443652] malloc(9)                             = 0x021d2020
[0x4437da] strncpy(0x021d2020, "ErrorMsg", 8)    = 0x021d2020
[0x443652] malloc(9)                             = 0x021d2040
[0x44378b] memmove(0x21d2040, 0x21d2020, 9, 8, 3) = 0x21d2040
[0x46fd29] strcmp("ERRORMSG", "DIRECTORY")       = 1
[0x46fd29] strcmp("ERRORMSG", "NONTEXT")         = -9
[0x46fd29] strcmp("ERRORMSG", "SPECIALKEY")      = -14
[0x443968] free(0x021d2040)                      = <void>
[0x443652] malloc(9)                             = 0x021d2040
[0x44378b] memmove(0x21d2040, 0x21d2020, 9, 0x7fc3b3739728, 0) = 0x21d2040
[0x443652] malloc(10)                            = 0x021d2060
[0x4437da] strncpy(0x021d2060, "IncSearch", 9)   = 0x021d2060
[0x443652] malloc(10)                            = 0x021d2080
[0x44378b] memmove(0x21d2080, 0x21d2060, 10, 8, 3) = 0x21d2080
[0x46fd29] strcmp("INCSEARCH", "ERRORMSG")       = 4
[0x46fd29] strcmp("INCSEARCH", "DIRECTORY")      = 5
[0x46fd29] strcmp("INCSEARCH", "NONTEXT")        = -5
[0x46fd29] strcmp("INCSEARCH", "SPECIALKEY")     = -10
[0x443968] free(0x021d2080)                      = <void>
[0x443652] malloc(10)                            = 0x021d2080
[0x44378b] memmove(0x21d2080, 0x21d2060, 10, 0x7fc3b3739728, 0) = 0x21d2080
[0x443652] malloc(7)                             = 0x021d20a0
[0x4437da] strncpy(0x021d20a0, "Search", 6)      = 0x021d20a0
[0x443652] malloc(7)                             = 0x021d20c0
[0x44378b] memmove(0x21d20c0, 0x21d20a0, 7, 8, 3) = 0x21d20c0
[0x46fd29] strcmp("SEARCH", "INCSEARCH")         = 10
[0x46fd29] strcmp("SEARCH", "ERRORMSG")          = 14
[0x46fd29] strcmp("SEARCH", "DIRECTORY")         = 15
[0x46fd29] strcmp("SEARCH", "NONTEXT")           = 5
[0x46fd29] strcmp("SEARCH", "SPECIALKEY")        = -11
[0x443968] free(0x021d20c0)                      = <void>
[0x443652] malloc(7)                             = 0x021d20c0
[0x44378b] memmove(0x21d20c0, 0x21d20a0, 7, 0x7fc3b3739728, 0) = 0x21d20c0
[0x443652] malloc(8)                             = 0x021d20e0
[0x4437da] strncpy(0x021d20e0, "MoreMsg", 7)     = 0x021d20e0
[0x443652] malloc(8)                             = 0x021d2100
[0x44378b] memmove(0x21d2100, 0x21d20e0, 8, 8, 3) = 0x21d2100
[0x46fd29] strcmp("MOREMSG", "SEARCH")           = -6
[0x46fd29] strcmp("MOREMSG", "INCSEARCH")        = 4
[0x46fd29] strcmp("MOREMSG", "ERRORMSG")         = 8
[0x46fd29] strcmp("MOREMSG", "DIRECTORY")        = 9
[0x46fd29] strcmp("MOREMSG", "NONTEXT")          = -1
[0x46fd29] strcmp("MOREMSG", "SPECIALKEY")       = -6
[0x443968] free(0x021d2100)                      = <void>
[0x443652] malloc(8)                             = 0x021d2100
[0x44378b] memmove(0x21d2100, 0x21d20e0, 8, 0x7fc3b3739728, 0) = 0x21d2100
[0x443652] malloc(8)                             = 0x021d2120
[0x4437da] strncpy(0x021d2120, "ModeMsg", 7)     = 0x021d2120
[0x443652] malloc(8)                             = 0x021d2140
[0x44378b] memmove(0x21d2140, 0x21d2120, 8, 8, 3) = 0x21d2140
[0x46fd29] strcmp("MODEMSG", "MOREMSG")          = -14
[0x46fd29] strcmp("MODEMSG", "SEARCH")           = -6
[0x46fd29] strcmp("MODEMSG", "INCSEARCH")        = 4
[0x46fd29] strcmp("MODEMSG", "ERRORMSG")         = 8
[0x46fd29] strcmp("MODEMSG", "DIRECTORY")        = 9
[0x46fd29] strcmp("MODEMSG", "NONTEXT")          = -1
[0x46fd29] strcmp("MODEMSG", "SPECIALKEY")       = -6
[0x443968] free(0x021d2140)                      = <void>
[0x443652] malloc(8)                             = 0x021d2140
[0x44378b] memmove(0x21d2140, 0x21d2120, 8, 0x7fc3b3739728, 0) = 0x21d2140
[0x443652] malloc(7)                             = 0x021d2160
[0x4437da] strncpy(0x021d2160, "LineNr", 6)      = 0x021d2160
[0x443652] malloc(7)                             = 0x021d2180
[0x44378b] memmove(0x21d2180, 0x21d2160, 7, 8, 3) = 0x21d2180
[0x46fd29] strcmp("LINENR", "MODEMSG")           = -1
[0x46fd29] strcmp("LINENR", "MOREMSG")           = -1
[0x46fd29] strcmp("LINENR", "SEARCH")            = -7
[0x46fd29] strcmp("LINENR", "INCSEARCH")         = 3
[0x46fd29] strcmp("LINENR", "ERRORMSG")          = 7
[0x46fd29] strcmp("LINENR", "DIRECTORY")         = 8
[0x46fd29] strcmp("LINENR", "NONTEXT")           = -2
[0x46fd29] strcmp("LINENR", "SPECIALKEY")        = -7
[0x443968] free(0x021d2180)                      = <void>
[0x443652] malloc(7)                             = 0x021d2180
[0x44378b] memmove(0x21d2180, 0x21d2160, 7, 0x7fc3b3739728, 0) = 0x21d2180
[0x443652] malloc(9)                             = 0x021d21a0
[0x4437da] strncpy(0x021d21a0, "Question", 8)    = 0x021d21a0
[0x443652] malloc(9)                             = 0x021d21c0
[0x44378b] memmove(0x21d21c0, 0x21d21a0, 9, 8, 3) = 0x21d21c0
[0x46fd29] strcmp("QUESTION", "LINENR")          = 5
[0x46fd29] strcmp("QUESTION", "MODEMSG")         = 4
[0x46fd29] strcmp("QUESTION", "MOREMSG")         = 4
[0x46fd29] strcmp("QUESTION", "SEARCH")          = -2
[0x46fd29] strcmp("QUESTION", "INCSEARCH")       = 8
[0x46fd29] strcmp("QUESTION", "ERRORMSG")        = 12
[0x46fd29] strcmp("QUESTION", "DIRECTORY")       = 13
[0x46fd29] strcmp("QUESTION", "NONTEXT")         = 3
[0x46fd29] strcmp("QUESTION", "SPECIALKEY")      = -2
[0x443968] free(0x021d21c0)                      = <void>
[0x443652] malloc(9)                             = 0x021d21c0
[0x44378b] memmove(0x21d21c0, 0x21d21a0, 9, 0x7fc3b3739728, 0) = 0x21d21c0
[0x443652] malloc(11)                            = 0x021d21e0
[0x4437da] strncpy(0x021d21e0, "StatusLine", 10) = 0x021d21e0
[0x443652] malloc(11)                            = 0x021d2200
[0x44378b] memmove(0x21d2200, 0x21d21e0, 11, 8, 3) = 0x21d2200
[0x46fd29] strcmp("STATUSLINE", "QUESTION")      = 2
[0x46fd29] strcmp("STATUSLINE", "LINENR")        = 7
[0x46fd29] strcmp("STATUSLINE", "MODEMSG")       = 6
[0x46fd29] strcmp("STATUSLINE", "MOREMSG")       = 6
[0x46fd29] strcmp("STATUSLINE", "SEARCH")        = 15
[0x46fd29] strcmp("STATUSLINE", "INCSEARCH")     = 10
[0x46fd29] strcmp("STATUSLINE", "ERRORMSG")      = 14
[0x46fd29] strcmp("STATUSLINE", "DIRECTORY")     = 15
[0x46fd29] strcmp("STATUSLINE", "NONTEXT")       = 5
[0x46fd29] strcmp("STATUSLINE", "SPECIALKEY")    = 4
[0x443968] free(0x021d2200)                      = <void>
[0x443652] malloc(1440)                          = 0x021d2200
[0x44371c] memset(0x021d2200, '\000', 1440)      = 0x021d2200
[0x443c2d] memmove(0x21d2200, 0x21d1cc0, 720, -10, 32) = 0x21d2200
[0x443968] free(0x021d1cc0)                      = <void>
[0x443652] malloc(11)                            = 0x021d1cc0
[0x44378b] memmove(0x21d1cc0, 0x21d21e0, 11, 705, 1) = 0x21d1cc0
[0x443652] malloc(13)                            = 0x021d1ce0
[0x4437da] strncpy(0x021d1ce0, "StatusLineNC", 12) = 0x021d1ce0
[0x443652] malloc(13)                            = 0x021d1d00
[0x44378b] memmove(0x21d1d00, 0x21d1ce0, 13, 0x7fc3b3739778, 2) = 0x21d1d00
[0x46fd29] strcmp("STATUSLINENC", "STATUSLINE")  = 78
[0x46fd29] strcmp("STATUSLINENC", "QUESTION")    = 2
[0x46fd29] strcmp("STATUSLINENC", "LINENR")      = 7
[0x46fd29] strcmp("STATUSLINENC", "MODEMSG")     = 6
[0x46fd29] strcmp("STATUSLINENC", "MOREMSG")     = 6
[0x46fd29] strcmp("STATUSLINENC", "SEARCH")      = 15
[0x46fd29] strcmp("STATUSLINENC", "INCSEARCH")   = 10
[0x46fd29] strcmp("STATUSLINENC", "ERRORMSG")    = 14
[0x46fd29] strcmp("STATUSLINENC", "DIRECTORY")   = 15
[0x46fd29] strcmp("STATUSLINENC", "NONTEXT")     = 5
[0x46fd29] strcmp("STATUSLINENC", "SPECIALKEY")  = 4
[0x443968] free(0x021d1d00)                      = <void>
[0x443652] malloc(13)                            = 0x021d1d00
[0x44378b] memmove(0x21d1d00, 0x21d1ce0, 13, 0x7fc3b3739728, 0) = 0x21d1d00
[0x443652] malloc(6)                             = 0x021d1d20
[0x4437da] strncpy(0x021d1d20, "Title", 5)       = 0x021d1d20
[0x443652] malloc(6)                             = 0x021d1d40
[0x44378b] memmove(0x21d1d40, 0x21d1d20, 6, 0x7fc3b3739778, 2) = 0x21d1d40
[0x46fd29] strcmp("TITLE", "STATUSLINENC")       = 1
[0x46fd29] strcmp("TITLE", "STATUSLINE")         = 1
[0x46fd29] strcmp("TITLE", "QUESTION")           = 3
[0x46fd29] strcmp("TITLE", "LINENR")             = 8
[0x46fd29] strcmp("TITLE", "MODEMSG")            = 7
[0x46fd29] strcmp("TITLE", "MOREMSG")            = 7
[0x46fd29] strcmp("TITLE", "SEARCH")             = 1
[0x46fd29] strcmp("TITLE", "INCSEARCH")          = 11
[0x46fd29] strcmp("TITLE", "ERRORMSG")           = 15
[0x46fd29] strcmp("TITLE", "DIRECTORY")          = 16
[0x46fd29] strcmp("TITLE", "NONTEXT")            = 6
[0x46fd29] strcmp("TITLE", "SPECIALKEY")         = 1
[0x443968] free(0x021d1d40)                      = <void>
[0x443652] malloc(6)                             = 0x021d1d40
[0x44378b] memmove(0x21d1d40, 0x21d1d20, 6, 0x7fc3b3739728, 0) = 0x21d1d40
[0x443652] malloc(7)                             = 0x021d1d60
[0x4437da] strncpy(0x021d1d60, "Visual", 6)      = 0x021d1d60
[0x443652] malloc(7)                             = 0x021d1d80
[0x44378b] memmove(0x21d1d80, 0x21d1d60, 7, 0x7fc3b3739778, 2) = 0x21d1d80
[0x46fd29] strcmp("VISUAL", "TITLE")             = 2
[0x46fd29] strcmp("VISUAL", "STATUSLINENC")      = 3
[0x46fd29] strcmp("VISUAL", "STATUSLINE")        = 3
[0x46fd29] strcmp("VISUAL", "QUESTION")          = 5
[0x46fd29] strcmp("VISUAL", "LINENR")            = 10
[0x46fd29] strcmp("VISUAL", "MODEMSG")           = 9
[0x46fd29] strcmp("VISUAL", "MOREMSG")           = 9
[0x46fd29] strcmp("VISUAL", "SEARCH")            = 3
[0x46fd29] strcmp("VISUAL", "INCSEARCH")         = 13
[0x46fd29] strcmp("VISUAL", "ERRORMSG")          = 17
[0x46fd29] strcmp("VISUAL", "DIRECTORY")         = 18
[0x46fd29] strcmp("VISUAL", "NONTEXT")           = 8
[0x46fd29] strcmp("VISUAL", "SPECIALKEY")        = 3
[0x443968] free(0x021d1d80)                      = <void>
[0x443652] malloc(7)                             = 0x021d1d80
[0x44378b] memmove(0x21d1d80, 0x21d1d60, 7, 0x7fc3b3739728, 0) = 0x21d1d80
[0x443652] malloc(10)                            = 0x021d1da0
[0x4437da] strncpy(0x021d1da0, "VisualNOS", 9)   = 0x021d1da0
[0x443652] malloc(10)                            = 0x021d1dc0
[0x44378b] memmove(0x21d1dc0, 0x21d1da0, 10, 0x7fc3b3739778, 2) = 0x21d1dc0
[0x46fd29] strcmp("VISUALNOS", "VISUAL")         = 78
[0x46fd29] strcmp("VISUALNOS", "TITLE")          = 2
[0x46fd29] strcmp("VISUALNOS", "STATUSLINENC")   = 3
[0x46fd29] strcmp("VISUALNOS", "STATUSLINE")     = 3
[0x46fd29] strcmp("VISUALNOS", "QUESTION")       = 5
[0x46fd29] strcmp("VISUALNOS", "LINENR")         = 10
[0x46fd29] strcmp("VISUALNOS", "MODEMSG")        = 9
[0x46fd29] strcmp("VISUALNOS", "MOREMSG")        = 9
[0x46fd29] strcmp("VISUALNOS", "SEARCH")         = 3
[0x46fd29] strcmp("VISUALNOS", "INCSEARCH")      = 13
[0x46fd29] strcmp("VISUALNOS", "ERRORMSG")       = 17
[0x46fd29] strcmp("VISUALNOS", "DIRECTORY")      = 18
[0x46fd29] strcmp("VISUALNOS", "NONTEXT")        = 8
[0x46fd29] strcmp("VISUALNOS", "SPECIALKEY")     = 3
[0x443968] free(0x021d1dc0)                      = <void>
[0x443652] malloc(10)                            = 0x021d1dc0
[0x44378b] memmove(0x21d1dc0, 0x21d1da0, 10, 0x7fc3b3739728, 0) = 0x21d1dc0
[0x443652] malloc(11)                            = 0x021d1de0
[0x4437da] strncpy(0x021d1de0, "WarningMsg", 10) = 0x021d1de0
[0x443652] malloc(11)                            = 0x021d1e00
[0x44378b] memmove(0x21d1e00, 0x21d1de0, 11, 0x7fc3b3739778, 2) = 0x21d1e00
[0x46fd29] strcmp("WARNINGMSG", "VISUALNOS")     = 1
[0x46fd29] strcmp("WARNINGMSG", "VISUAL")        = 1
[0x46fd29] strcmp("WARNINGMSG", "TITLE")         = 3
[0x46fd29] strcmp("WARNINGMSG", "STATUSLINENC")  = 4
[0x46fd29] strcmp("WARNINGMSG", "STATUSLINE")    = 4
[0x46fd29] strcmp("WARNINGMSG", "QUESTION")      = 6
[0x46fd29] strcmp("WARNINGMSG", "LINENR")        = 11
[0x46fd29] strcmp("WARNINGMSG", "MODEMSG")       = 10
[0x46fd29] strcmp("WARNINGMSG", "MOREMSG")       = 10
[0x46fd29] strcmp("WARNINGMSG", "SEARCH")        = 4
[0x46fd29] strcmp("WARNINGMSG", "INCSEARCH")     = 14
[0x46fd29] strcmp("WARNINGMSG", "ERRORMSG")      = 18
[0x46fd29] strcmp("WARNINGMSG", "DIRECTORY")     = 19
[0x46fd29] strcmp("WARNINGMSG", "NONTEXT")       = 9
[0x46fd29] strcmp("WARNINGMSG", "SPECIALKEY")    = 4
[0x443968] free(0x021d1e00)                      = <void>
[0x443652] malloc(11)                            = 0x021d1e00
[0x44378b] memmove(0x21d1e00, 0x21d1de0, 11, 0x7fc3b3739728, 0) = 0x21d1e00
[0x443652] malloc(9)                             = 0x021d1e20
[0x4437da] strncpy(0x021d1e20, "WildMenu", 8)    = 0x021d1e20
[0x443652] malloc(9)                             = 0x021d1e40
[0x44378b] memmove(0x21d1e40, 0x21d1e20, 9, 0x7fc3b3739778, 2) = 0x21d1e40
[0x46fd29] strcmp("WILDMENU", "WARNINGMSG")      = 8
[0x46fd29] strcmp("WILDMENU", "VISUALNOS")       = 1
[0x46fd29] strcmp("WILDMENU", "VISUAL")          = 1
[0x46fd29] strcmp("WILDMENU", "TITLE")           = 3
[0x46fd29] strcmp("WILDMENU", "STATUSLINENC")    = 4
[0x46fd29] strcmp("WILDMENU", "STATUSLINE")      = 4
[0x46fd29] strcmp("WILDMENU", "QUESTION")        = 6
[0x46fd29] strcmp("WILDMENU", "LINENR")          = 11
[0x46fd29] strcmp("WILDMENU", "MODEMSG")         = 10
[0x46fd29] strcmp("WILDMENU", "MOREMSG")         = 10
[0x46fd29] strcmp("WILDMENU", "SEARCH")          = 4
[0x46fd29] strcmp("WILDMENU", "INCSEARCH")       = 14
[0x46fd29] strcmp("WILDMENU", "ERRORMSG")        = 18
[0x46fd29] strcmp("WILDMENU", "DIRECTORY")       = 19
[0x46fd29] strcmp("WILDMENU", "NONTEXT")         = 9
[0x46fd29] strcmp("WILDMENU", "SPECIALKEY")      = 4
[0x443968] free(0x021d1e40)                      = <void>
[0x443652] malloc(9)                             = 0x021d1e40
[0x44378b] memmove(0x21d1e40, 0x21d1e20, 9, 0x7fc3b3739728, 0) = 0x21d1e40
[0x443652] malloc(11)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "SpecialKey", 10) = 0x021d1e60
[0x443652] malloc(11)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 11, 0x7fc3b3739778, 2) = 0x21d1e80
[0x46fd29] strcmp("SPECIALKEY", "WILDMENU")      = -4
[0x46fd29] strcmp("SPECIALKEY", "WARNINGMSG")    = -4
[0x46fd29] strcmp("SPECIALKEY", "VISUALNOS")     = -3
[0x46fd29] strcmp("SPECIALKEY", "VISUAL")        = -3
[0x46fd29] strcmp("SPECIALKEY", "TITLE")         = -1
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINENC")  = -4
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINE")    = -4
[0x46fd29] strcmp("SPECIALKEY", "QUESTION")      = 2
[0x46fd29] strcmp("SPECIALKEY", "LINENR")        = 7
[0x46fd29] strcmp("SPECIALKEY", "MODEMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "MOREMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "SEARCH")        = 11
[0x46fd29] strcmp("SPECIALKEY", "INCSEARCH")     = 10
[0x46fd29] strcmp("SPECIALKEY", "ERRORMSG")      = 14
[0x46fd29] strcmp("SPECIALKEY", "DIRECTORY")     = 15
[0x46fd29] strcmp("SPECIALKEY", "NONTEXT")       = 5
[0x46fd29] strcmp("SPECIALKEY", "SPECIALKEY")    = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(8)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "NonText", 7)     = 0x021d1e60
[0x443652] malloc(8)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 8, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("NONTEXT", "WILDMENU")         = -9
[0x46fd29] strcmp("NONTEXT", "WARNINGMSG")       = -9
[0x46fd29] strcmp("NONTEXT", "VISUALNOS")        = -8
[0x46fd29] strcmp("NONTEXT", "VISUAL")           = -8
[0x46fd29] strcmp("NONTEXT", "TITLE")            = -6
[0x46fd29] strcmp("NONTEXT", "STATUSLINENC")     = -5
[0x46fd29] strcmp("NONTEXT", "STATUSLINE")       = -5
[0x46fd29] strcmp("NONTEXT", "QUESTION")         = -3
[0x46fd29] strcmp("NONTEXT", "LINENR")           = 2
[0x46fd29] strcmp("NONTEXT", "MODEMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "MOREMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "SEARCH")           = -5
[0x46fd29] strcmp("NONTEXT", "INCSEARCH")        = 5
[0x46fd29] strcmp("NONTEXT", "ERRORMSG")         = 9
[0x46fd29] strcmp("NONTEXT", "DIRECTORY")        = 10
[0x46fd29] strcmp("NONTEXT", "NONTEXT")          = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(10)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "Directory", 9)   = 0x021d1e60
[0x443652] malloc(10)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 10, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("DIRECTORY", "WILDMENU")       = -19
[0x46fd29] strcmp("DIRECTORY", "WARNINGMSG")     = -19
[0x46fd29] strcmp("DIRECTORY", "VISUALNOS")      = -18
[0x46fd29] strcmp("DIRECTORY", "VISUAL")         = -18
[0x46fd29] strcmp("DIRECTORY", "TITLE")          = -16
[0x46fd29] strcmp("DIRECTORY", "STATUSLINENC")   = -15
[0x46fd29] strcmp("DIRECTORY", "STATUSLINE")     = -15
[0x46fd29] strcmp("DIRECTORY", "QUESTION")       = -13
[0x46fd29] strcmp("DIRECTORY", "LINENR")         = -8
[0x46fd29] strcmp("DIRECTORY", "MODEMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "MOREMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "SEARCH")         = -15
[0x46fd29] strcmp("DIRECTORY", "INCSEARCH")      = -5
[0x46fd29] strcmp("DIRECTORY", "ERRORMSG")       = -1
[0x46fd29] strcmp("DIRECTORY", "DIRECTORY")      = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(9)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "ErrorMsg", 8)    = 0x021d1e60
[0x443652] malloc(9)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 9, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("ERRORMSG", "WILDMENU")        = -18
[0x46fd29] strcmp("ERRORMSG", "WARNINGMSG")      = -18
[0x46fd29] strcmp("ERRORMSG", "VISUALNOS")       = -17
[0x46fd29] strcmp("ERRORMSG", "VISUAL")          = -17
[0x46fd29] strcmp("ERRORMSG", "TITLE")           = -15
[0x46fd29] strcmp("ERRORMSG", "STATUSLINENC")    = -14
[0x46fd29] strcmp("ERRORMSG", "STATUSLINE")      = -14
[0x46fd29] strcmp("ERRORMSG", "QUESTION")        = -12
[0x46fd29] strcmp("ERRORMSG", "LINENR")          = -7
[0x46fd29] strcmp("ERRORMSG", "MODEMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "MOREMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "SEARCH")          = -14
[0x46fd29] strcmp("ERRORMSG", "INCSEARCH")       = -4
[0x46fd29] strcmp("ERRORMSG", "ERRORMSG")        = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(10)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "IncSearch", 9)   = 0x021d1e60
[0x443652] malloc(10)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 10, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("INCSEARCH", "WILDMENU")       = -14
[0x46fd29] strcmp("INCSEARCH", "WARNINGMSG")     = -14
[0x46fd29] strcmp("INCSEARCH", "VISUALNOS")      = -13
[0x46fd29] strcmp("INCSEARCH", "VISUAL")         = -13
[0x46fd29] strcmp("INCSEARCH", "TITLE")          = -11
[0x46fd29] strcmp("INCSEARCH", "STATUSLINENC")   = -10
[0x46fd29] strcmp("INCSEARCH", "STATUSLINE")     = -10
[0x46fd29] strcmp("INCSEARCH", "QUESTION")       = -8
[0x46fd29] strcmp("INCSEARCH", "LINENR")         = -3
[0x46fd29] strcmp("INCSEARCH", "MODEMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "MOREMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "SEARCH")         = -10
[0x46fd29] strcmp("INCSEARCH", "INCSEARCH")      = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(7)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "Search", 6)      = 0x021d1e60
[0x443652] malloc(7)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 7, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("SEARCH", "WILDMENU")          = -4
[0x46fd29] strcmp("SEARCH", "WARNINGMSG")        = -4
[0x46fd29] strcmp("SEARCH", "VISUALNOS")         = -3
[0x46fd29] strcmp("SEARCH", "VISUAL")            = -3
[0x46fd29] strcmp("SEARCH", "TITLE")             = -1
[0x46fd29] strcmp("SEARCH", "STATUSLINENC")      = -15
[0x46fd29] strcmp("SEARCH", "STATUSLINE")        = -15
[0x46fd29] strcmp("SEARCH", "QUESTION")          = 2
[0x46fd29] strcmp("SEARCH", "LINENR")            = 7
[0x46fd29] strcmp("SEARCH", "MODEMSG")           = 6
[0x46fd29] strcmp("SEARCH", "MOREMSG")           = 6
[0x46fd29] strcmp("SEARCH", "SEARCH")            = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(8)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "MoreMsg", 7)     = 0x021d1e60
[0x443652] malloc(8)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 8, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("MOREMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MOREMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MOREMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MOREMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MOREMSG", "TITLE")            = -7
[0x46fd29] strcmp("MOREMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MOREMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MOREMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MOREMSG", "LINENR")           = 1
[0x46fd29] strcmp("MOREMSG", "MODEMSG")          = 14
[0x46fd29] strcmp("MOREMSG", "MOREMSG")          = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(8)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "ModeMsg", 7)     = 0x021d1e60
[0x443652] malloc(8)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 8, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("MODEMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MODEMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MODEMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MODEMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MODEMSG", "TITLE")            = -7
[0x46fd29] strcmp("MODEMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MODEMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MODEMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MODEMSG", "LINENR")           = 1
[0x46fd29] strcmp("MODEMSG", "MODEMSG")          = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(7)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "LineNr", 6)      = 0x021d1e60
[0x443652] malloc(7)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 7, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("LINENR", "WILDMENU")          = -11
[0x46fd29] strcmp("LINENR", "WARNINGMSG")        = -11
[0x46fd29] strcmp("LINENR", "VISUALNOS")         = -10
[0x46fd29] strcmp("LINENR", "VISUAL")            = -10
[0x46fd29] strcmp("LINENR", "TITLE")             = -8
[0x46fd29] strcmp("LINENR", "STATUSLINENC")      = -7
[0x46fd29] strcmp("LINENR", "STATUSLINE")        = -7
[0x46fd29] strcmp("LINENR", "QUESTION")          = -5
[0x46fd29] strcmp("LINENR", "LINENR")            = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(9)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "Question", 8)    = 0x021d1e60
[0x443652] malloc(9)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 9, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("QUESTION", "WILDMENU")        = -6
[0x46fd29] strcmp("QUESTION", "WARNINGMSG")      = -6
[0x46fd29] strcmp("QUESTION", "VISUALNOS")       = -5
[0x46fd29] strcmp("QUESTION", "VISUAL")          = -5
[0x46fd29] strcmp("QUESTION", "TITLE")           = -3
[0x46fd29] strcmp("QUESTION", "STATUSLINENC")    = -2
[0x46fd29] strcmp("QUESTION", "STATUSLINE")      = -2
[0x46fd29] strcmp("QUESTION", "QUESTION")        = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(11)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "StatusLine", 10) = 0x021d1e60
[0x443652] malloc(11)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 11, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("STATUSLINE", "WILDMENU")      = -4
[0x46fd29] strcmp("STATUSLINE", "WARNINGMSG")    = -4
[0x46fd29] strcmp("STATUSLINE", "VISUALNOS")     = -3
[0x46fd29] strcmp("STATUSLINE", "VISUAL")        = -3
[0x46fd29] strcmp("STATUSLINE", "TITLE")         = -1
[0x46fd29] strcmp("STATUSLINE", "STATUSLINENC")  = -78
[0x46fd29] strcmp("STATUSLINE", "STATUSLINE")    = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(13)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "StatusLineNC", 12) = 0x021d1e60
[0x443652] malloc(13)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 13, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("STATUSLINENC", "WILDMENU")    = -4
[0x46fd29] strcmp("STATUSLINENC", "WARNINGMSG")  = -4
[0x46fd29] strcmp("STATUSLINENC", "VISUALNOS")   = -3
[0x46fd29] strcmp("STATUSLINENC", "VISUAL")      = -3
[0x46fd29] strcmp("STATUSLINENC", "TITLE")       = -1
[0x46fd29] strcmp("STATUSLINENC", "STATUSLINENC") = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(6)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "Title", 5)       = 0x021d1e60
[0x443652] malloc(6)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 6, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("TITLE", "WILDMENU")           = -3
[0x46fd29] strcmp("TITLE", "WARNINGMSG")         = -3
[0x46fd29] strcmp("TITLE", "VISUALNOS")          = -2
[0x46fd29] strcmp("TITLE", "VISUAL")             = -2
[0x46fd29] strcmp("TITLE", "TITLE")              = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(7)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "Visual", 6)      = 0x021d1e60
[0x443652] malloc(7)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 7, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("VISUAL", "WILDMENU")          = -1
[0x46fd29] strcmp("VISUAL", "WARNINGMSG")        = -1
[0x46fd29] strcmp("VISUAL", "VISUALNOS")         = -78
[0x46fd29] strcmp("VISUAL", "VISUAL")            = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(10)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "VisualNOS", 9)   = 0x021d1e60
[0x443652] malloc(10)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 10, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("VISUALNOS", "WILDMENU")       = -1
[0x46fd29] strcmp("VISUALNOS", "WARNINGMSG")     = -1
[0x46fd29] strcmp("VISUALNOS", "VISUALNOS")      = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(11)                            = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "WarningMsg", 10) = 0x021d1e60
[0x443652] malloc(11)                            = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 11, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("WARNINGMSG", "WILDMENU")      = -8
[0x46fd29] strcmp("WARNINGMSG", "WARNINGMSG")    = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(9)                             = 0x021d1e60
[0x4437da] strncpy(0x021d1e60, "WildMenu", 8)    = 0x021d1e60
[0x443652] malloc(9)                             = 0x021d1e80
[0x44378b] memmove(0x21d1e80, 0x21d1e60, 9, 0x7fc3b3739728, 0) = 0x21d1e80
[0x46fd29] strcmp("WILDMENU", "WILDMENU")        = 0
[0x443968] free(0x021d1e80)                      = <void>
[0x443968] free(0x021d1e60)                      = <void>
[0x443652] malloc(1944)                          = 0x021d27b0
[0x44371c] memset(0x021d27b0, '\000', 1944)      = 0x021d27b0
[0x443c2d] memmove(0x21d27b0, 0x21d2200, 1224, 579, 24) = 0x21d27b0
[0x443968] free(0x021d2200)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 1) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 289, 0) = 0x21d1e60
[0x46fd29] strcmp("USER1", "WILDMENU")           = -2
[0x46fd29] strcmp("USER1", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER1", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER1", "VISUAL")             = -1
[0x46fd29] strcmp("USER1", "TITLE")              = 1
[0x46fd29] strcmp("USER1", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER1", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER1", "QUESTION")           = 4
[0x46fd29] strcmp("USER1", "LINENR")             = 9
[0x46fd29] strcmp("USER1", "MODEMSG")            = 8
[0x46fd29] strcmp("USER1", "MOREMSG")            = 8
[0x46fd29] strcmp("USER1", "SEARCH")             = 2
[0x46fd29] strcmp("USER1", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER1", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER1", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER1", "NONTEXT")            = 7
[0x46fd29] strcmp("USER1", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 2) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER2", "WILDMENU")           = -2
[0x46fd29] strcmp("USER2", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER2", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER2", "VISUAL")             = -1
[0x46fd29] strcmp("USER2", "TITLE")              = 1
[0x46fd29] strcmp("USER2", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER2", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER2", "QUESTION")           = 4
[0x46fd29] strcmp("USER2", "LINENR")             = 9
[0x46fd29] strcmp("USER2", "MODEMSG")            = 8
[0x46fd29] strcmp("USER2", "MOREMSG")            = 8
[0x46fd29] strcmp("USER2", "SEARCH")             = 2
[0x46fd29] strcmp("USER2", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER2", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER2", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER2", "NONTEXT")            = 7
[0x46fd29] strcmp("USER2", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 3) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER3", "WILDMENU")           = -2
[0x46fd29] strcmp("USER3", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER3", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER3", "VISUAL")             = -1
[0x46fd29] strcmp("USER3", "TITLE")              = 1
[0x46fd29] strcmp("USER3", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER3", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER3", "QUESTION")           = 4
[0x46fd29] strcmp("USER3", "LINENR")             = 9
[0x46fd29] strcmp("USER3", "MODEMSG")            = 8
[0x46fd29] strcmp("USER3", "MOREMSG")            = 8
[0x46fd29] strcmp("USER3", "SEARCH")             = 2
[0x46fd29] strcmp("USER3", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER3", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER3", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER3", "NONTEXT")            = 7
[0x46fd29] strcmp("USER3", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 4) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER4", "WILDMENU")           = -2
[0x46fd29] strcmp("USER4", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER4", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER4", "VISUAL")             = -1
[0x46fd29] strcmp("USER4", "TITLE")              = 1
[0x46fd29] strcmp("USER4", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER4", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER4", "QUESTION")           = 4
[0x46fd29] strcmp("USER4", "LINENR")             = 9
[0x46fd29] strcmp("USER4", "MODEMSG")            = 8
[0x46fd29] strcmp("USER4", "MOREMSG")            = 8
[0x46fd29] strcmp("USER4", "SEARCH")             = 2
[0x46fd29] strcmp("USER4", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER4", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER4", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER4", "NONTEXT")            = 7
[0x46fd29] strcmp("USER4", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 5) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER5", "WILDMENU")           = -2
[0x46fd29] strcmp("USER5", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER5", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER5", "VISUAL")             = -1
[0x46fd29] strcmp("USER5", "TITLE")              = 1
[0x46fd29] strcmp("USER5", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER5", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER5", "QUESTION")           = 4
[0x46fd29] strcmp("USER5", "LINENR")             = 9
[0x46fd29] strcmp("USER5", "MODEMSG")            = 8
[0x46fd29] strcmp("USER5", "MOREMSG")            = 8
[0x46fd29] strcmp("USER5", "SEARCH")             = 2
[0x46fd29] strcmp("USER5", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER5", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER5", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER5", "NONTEXT")            = 7
[0x46fd29] strcmp("USER5", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 6) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER6", "WILDMENU")           = -2
[0x46fd29] strcmp("USER6", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER6", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER6", "VISUAL")             = -1
[0x46fd29] strcmp("USER6", "TITLE")              = 1
[0x46fd29] strcmp("USER6", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER6", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER6", "QUESTION")           = 4
[0x46fd29] strcmp("USER6", "LINENR")             = 9
[0x46fd29] strcmp("USER6", "MODEMSG")            = 8
[0x46fd29] strcmp("USER6", "MOREMSG")            = 8
[0x46fd29] strcmp("USER6", "SEARCH")             = 2
[0x46fd29] strcmp("USER6", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER6", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER6", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER6", "NONTEXT")            = 7
[0x46fd29] strcmp("USER6", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 7) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER7", "WILDMENU")           = -2
[0x46fd29] strcmp("USER7", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER7", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER7", "VISUAL")             = -1
[0x46fd29] strcmp("USER7", "TITLE")              = 1
[0x46fd29] strcmp("USER7", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER7", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER7", "QUESTION")           = 4
[0x46fd29] strcmp("USER7", "LINENR")             = 9
[0x46fd29] strcmp("USER7", "MODEMSG")            = 8
[0x46fd29] strcmp("USER7", "MOREMSG")            = 8
[0x46fd29] strcmp("USER7", "SEARCH")             = 2
[0x46fd29] strcmp("USER7", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER7", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER7", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER7", "NONTEXT")            = 7
[0x46fd29] strcmp("USER7", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 8) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER8", "WILDMENU")           = -2
[0x46fd29] strcmp("USER8", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER8", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER8", "VISUAL")             = -1
[0x46fd29] strcmp("USER8", "TITLE")              = 1
[0x46fd29] strcmp("USER8", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER8", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER8", "QUESTION")           = 4
[0x46fd29] strcmp("USER8", "LINENR")             = 9
[0x46fd29] strcmp("USER8", "MODEMSG")            = 8
[0x46fd29] strcmp("USER8", "MOREMSG")            = 8
[0x46fd29] strcmp("USER8", "SEARCH")             = 2
[0x46fd29] strcmp("USER8", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER8", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER8", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER8", "NONTEXT")            = 7
[0x46fd29] strcmp("USER8", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc850, 1, 10, 0x48c492, 9) = 5
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fc850, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x46fd29] strcmp("USER9", "WILDMENU")           = -2
[0x46fd29] strcmp("USER9", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER9", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER9", "VISUAL")             = -1
[0x46fd29] strcmp("USER9", "TITLE")              = 1
[0x46fd29] strcmp("USER9", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER9", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER9", "QUESTION")           = 4
[0x46fd29] strcmp("USER9", "LINENR")             = 9
[0x46fd29] strcmp("USER9", "MODEMSG")            = 8
[0x46fd29] strcmp("USER9", "MOREMSG")            = 8
[0x46fd29] strcmp("USER9", "SEARCH")             = 2
[0x46fd29] strcmp("USER9", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER9", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER9", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER9", "NONTEXT")            = 7
[0x46fd29] strcmp("USER9", "SPECIALKEY")         = 2
[0x443968] free(0x021d1e60)                      = <void>
[0x452785] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x443652] malloc(32)                            = 0x021d1e80
[0x443652] malloc(41)                            = 0x021d1eb0
[0x44378b] memmove(0x21d1eb0, 0x7ffff30fd118, 41, 0x7fc3b3739778, 4) = 0x21d1eb0
[0x457d24] sigset(28, 0x457da2, 1, 0, 0x6c612f656d6f682f) = 0
[0x457d3d] sigset(20, 0, 0x7ffff30fc7f0, -1, 0x7ffff30fc6d0) = 0
[0x457d4c] sigset(13, 1, 0x7ffff30fc7f0, -1, 0x7ffff30fc6d0) = 0
[0x457d5b] sigset(2, 0x457d80, 0x7ffff30fc7f0, -1, 0x7ffff30fc6d0) = 0
[0x457d6a] sigset(14, 1, 0x7ffff30fc7f0, -1, 0x7ffff30fc6d0) = 0
[0x457cf0] sigset(1, 0x45812c, 0x7ffff30fc7f0, -1, 0x7ffff30fc6d0) = 0
[0x457cf0] sigset(3, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(4, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(5, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(6, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(8, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(7, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(11, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(31, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(15, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(26, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(27, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(24, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(25, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(10, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x457cf0] sigset(12, 0x45812c, 0x7ffff30fc7d0, -1, 0x7ffff30fc6b0) = 0
[0x458221] isatty(0)                             = 1
[0x479da6] getenv("TERM")                        = "xterm"
[0x4521b8] strcmp("term", "tabstop")             = 4
[0x4521b8] strcmp("term", "tagbsearch")          = 4
[0x4521b8] strcmp("term", "taglength")           = 4
[0x4521b8] strcmp("term", "tagrelative")         = 4
[0x4521b8] strcmp("term", "tags")                = 4
[0x4521b8] strcmp("term", "tagstack")            = 4
[0x4521b8] strcmp("term", "term")                = 0
[0x443652] malloc(6)                             = 0x021d1e60
[0x44378b] memmove(0x21d1e60, 0x7ffff30fd1bb, 6, 0x7fc3b3739728, 0) = 0x21d1e60
[0x443652] malloc(6)                             = 0x021d1ef0
[0x44378b] memmove(0x21d1ef0, 0x7ffff30fd1bb, 6, 0x7fc3b3739778, 2) = 0x21d1ef0
[0x4521b8] strcmp("term", "tabstop")             = 4
[0x4521b8] strcmp("term", "tagbsearch")          = 4
[0x4521b8] strcmp("term", "taglength")           = 4
[0x4521b8] strcmp("term", "tagrelative")         = 4
[0x4521b8] strcmp("term", "tags")                = 4
[0x4521b8] strcmp("term", "tagstack")            = 4
[0x4521b8] strcmp("term", "term")                = 0
[0x443652] malloc(6)                             = 0x021d1f10
[0x44378b] memmove(0x21d1f10, 0x7ffff30fd1bb, 6, 0x7fc3b3739778, 2) = 0x21d1f10
[0x4521b8] strcmp("ttytype", "tabstop")          = 19
[0x4521b8] strcmp("ttytype", "tagbsearch")       = 19
[0x4521b8] strcmp("ttytype", "taglength")        = 19
[0x4521b8] strcmp("ttytype", "tagrelative")      = 19
[0x4521b8] strcmp("ttytype", "tags")             = 19
[0x4521b8] strcmp("ttytype", "tagstack")         = 19
[0x4521b8] strcmp("ttytype", "term")             = 15
[0x4521b8] strcmp("ttytype", "terse")            = 15
[0x4521b8] strcmp("ttytype", "textauto")         = 15
[0x4521b8] strcmp("ttytype", "textmode")         = 15
[0x4521b8] strcmp("ttytype", "textwidth")        = 15
[0x4521b8] strcmp("ttytype", "tildeop")          = 11
[0x4521b8] strcmp("ttytype", "timeout")          = 11
[0x4521b8] strcmp("ttytype", "timeoutlen")       = 11
[0x4521b8] strcmp("ttytype", "title")            = 11
[0x4521b8] strcmp("ttytype", "titlelen")         = 11
[0x4521b8] strcmp("ttytype", "titleold")         = 11
[0x4521b8] strcmp("ttytype", "titlestring")      = 11
[0x4521b8] strcmp("ttytype", "ttimeout")         = 16
[0x4521b8] strcmp("ttytype", "ttimeoutlen")      = 16
[0x4521b8] strcmp("ttytype", "ttybuiltin")       = 18
[0x4521b8] strcmp("ttytype", "ttyfast")          = 14
[0x4521b8] strcmp("ttytype", "ttymouse")         = 7
[0x4521b8] strcmp("ttytype", "ttyscroll")        = 1
[0x4521b8] strcmp("ttytype", "ttytype")          = 0
[0x47824e] strcmp("xterm", "ansi")               = 23
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 65535) = 0
[0x47824e] strcmp("xterm", "ansi")               = 23
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 65535) = 0
[0x478379] strstr("xterm", "8bit")               = NULL
[0x443652] malloc(4)                             = 0x021d1f30
[0x44378b] memmove(0x21d1f30, 0x48da52, 4, 0x7fc3b3739778, 2) = 0x21d1f30
[0x443652] malloc(480)                           = 0x021d2200
[0x443652] malloc(4)                             = 0x021d23f0
[0x44378b] memmove(0x21d23f0, 0x48da56, 4, 0x7fc3b3739778, 2) = 0x21d23f0
[0x443652] malloc(4)                             = 0x021d2410
[0x44378b] memmove(0x21d2410, 0x48da5a, 4, 0x7fc3b3739778, 2) = 0x21d2410
[0x443652] malloc(4)                             = 0x021d2430
[0x44378b] memmove(0x21d2430, 0x48da5e, 4, 0x7fc3b3739778, 2) = 0x21d2430
[0x443652] malloc(5)                             = 0x021d2450
[0x44378b] memmove(0x21d2450, 0x48da62, 5, 0x7fc3b3739778, 2) = 0x21d2450
[0x443652] malloc(5)                             = 0x021d2470
[0x44378b] memmove(0x21d2470, 0x48da67, 5, 0x7fc3b3739778, 2) = 0x21d2470
[0x443652] malloc(5)                             = 0x021d2490
[0x44378b] memmove(0x21d2490, 0x48da6c, 5, 0x7fc3b3739778, 2) = 0x21d2490
[0x443652] malloc(5)                             = 0x021d24b0
[0x44378b] memmove(0x21d24b0, 0x48da71, 5, 0x7fc3b3739778, 2) = 0x21d24b0
[0x443652] malloc(4)                             = 0x021d24d0
[0x44378b] memmove(0x21d24d0, 0x48da76, 4, 0x7fc3b3739778, 2) = 0x21d24d0
[0x443652] malloc(4)                             = 0x021d24f0
[0x44378b] memmove(0x21d24f0, 0x48da7a, 4, 0x7fc3b3739778, 2) = 0x21d24f0
[0x443652] malloc(4)                             = 0x021d2510
[0x44378b] memmove(0x21d2510, 0x48da7e, 4, 0x7fc3b3739778, 2) = 0x21d2510
[0x443652] malloc(4)                             = 0x021d2530
[0x44378b] memmove(0x21d2530, 0x48da82, 4, 0x7fc3b3739778, 2) = 0x21d2530
[0x443652] malloc(6)                             = 0x021d2550
[0x44378b] memmove(0x21d2550, 0x48da86, 6, 0x7fc3b3739778, 2) = 0x21d2550
[0x443652] malloc(6)                             = 0x021d2570
[0x44378b] memmove(0x21d2570, 0x48da8c, 6, 0x7fc3b3739778, 2) = 0x21d2570
[0x443652] malloc(6)                             = 0x021d2590
[0x44378b] memmove(0x21d2590, 0x48da92, 6, 0x7fc3b3739778, 2) = 0x21d2590
[0x443652] malloc(6)                             = 0x021d25b0
[0x44378b] memmove(0x21d25b0, 0x48da98, 6, 0x7fc3b3739778, 2) = 0x21d25b0
[0x443652] malloc(6)                             = 0x021d25d0
[0x44378b] memmove(0x21d25d0, 0x48da9e, 6, 0x7fc3b3739778, 2) = 0x21d25d0
[0x443652] malloc(6)                             = 0x021d25f0
[0x44378b] memmove(0x21d25f0, 0x48daa4, 6, 0x7fc3b3739778, 2) = 0x21d25f0
[0x443652] malloc(6)                             = 0x021d2610
[0x44378b] memmove(0x21d2610, 0x48daaa, 6, 0x7fc3b3739778, 2) = 0x21d2610
[0x443652] malloc(6)                             = 0x021d2630
[0x44378b] memmove(0x21d2630, 0x48dab0, 6, 0x7fc3b3739778, 2) = 0x21d2630
[0x443652] malloc(6)                             = 0x021d2650
[0x44378b] memmove(0x21d2650, 0x48dab6, 6, 0x7fc3b3739778, 2) = 0x21d2650
[0x443652] malloc(960)                           = 0x021d2f50
[0x443968] free(0x021d2200)                      = <void>
[0x443652] malloc(6)                             = 0x021d1f50
[0x44378b] memmove(0x21d1f50, 0x48dabc, 6, 49, 0) = 0x21d1f50
[0x443652] malloc(6)                             = 0x021d1f70
[0x44378b] memmove(0x21d1f70, 0x48dac2, 6, 0x7fc3b3739798, 0) = 0x21d1f70
[0x443652] malloc(6)                             = 0x021d2670
[0x44378b] memmove(0x21d2670, 0x48dac8, 6, 289, 0) = 0x21d2670
[0x443652] malloc(5)                             = 0x021d2690
[0x44378b] memmove(0x21d2690, 0x48dace, 5, 0x7fc3b3739778, 2) = 0x21d2690
[0x443652] malloc(5)                             = 0x021d26b0
[0x44378b] memmove(0x21d26b0, 0x48dad3, 5, 0x7fc3b3739778, 2) = 0x21d26b0
[0x443652] malloc(5)                             = 0x021d26d0
[0x44378b] memmove(0x21d26d0, 0x48dad8, 5, 0x7fc3b3739778, 2) = 0x21d26d0
[0x443652] malloc(5)                             = 0x021d26f0
[0x44378b] memmove(0x21d26f0, 0x48dadd, 5, 0x7fc3b3739778, 2) = 0x21d26f0
[0x443652] malloc(8)                             = 0x021d2710
[0x44378b] memmove(0x21d2710, 0x48dae2, 8, 0x7fc3b3739778, 2) = 0x21d2710
[0x443652] malloc(8)                             = 0x021d2730
[0x44378b] memmove(0x21d2730, 0x48daea, 8, 0x7fc3b3739778, 2) = 0x21d2730
[0x443652] malloc(8)                             = 0x021d2750
[0x44378b] memmove(0x21d2750, 0x48daf2, 8, 0x7fc3b3739778, 2) = 0x21d2750
[0x443652] malloc(8)                             = 0x021d2770
[0x44378b] memmove(0x21d2770, 0x48dafa, 8, 33, 0) = 0x21d2770
[0x443652] malloc(8)                             = 0x021d2790
[0x44378b] memmove(0x21d2790, 0x48db02, 8, 0x7fc3b3739778, 2) = 0x21d2790
[0x443652] malloc(8)                             = 0x021d2200
[0x44378b] memmove(0x21d2200, 0x48db0a, 8, 465, 0) = 0x21d2200
[0x443652] malloc(8)                             = 0x021d2220
[0x44378b] memmove(0x21d2220, 0x48db12, 8, 0x7fc3b3739778, 2) = 0x21d2220
[0x443652] malloc(8)                             = 0x021d2240
[0x44378b] memmove(0x21d2240, 0x48db1a, 8, 0x7fc3b3739778, 2) = 0x21d2240
[0x443652] malloc(8)                             = 0x021d2260
[0x44378b] memmove(0x21d2260, 0x48db22, 8, 0x7fc3b3739778, 2) = 0x21d2260
[0x443652] malloc(8)                             = 0x021d2280
[0x44378b] memmove(0x21d2280, 0x48db2a, 8, 0x7fc3b3739778, 2) = 0x21d2280
[0x443652] malloc(8)                             = 0x021d22a0
[0x44378b] memmove(0x21d22a0, 0x48db32, 8, 0x7fc3b3739778, 2) = 0x21d22a0
[0x443652] malloc(8)                             = 0x021d22c0
[0x44378b] memmove(0x21d22c0, 0x48db3a, 8, 0x7fc3b3739778, 2) = 0x21d22c0
[0x443652] malloc(6)                             = 0x021d22e0
[0x44378b] memmove(0x21d22e0, 0x48db42, 6, 0x7fc3b3739778, 2) = 0x21d22e0
[0x443652] malloc(1440)                          = 0x021d3320
[0x443968] free(0x021d2f50)                      = <void>
[0x443652] malloc(6)                             = 0x021d2300
[0x44378b] memmove(0x21d2300, 0x48db48, 6, 209, 0) = 0x21d2300
[0x443652] malloc(5)                             = 0x021d2320
[0x44378b] memmove(0x21d2320, 0x48db4e, 5, 0x7fc3b3739778, 2) = 0x21d2320
[0x443652] malloc(5)                             = 0x021d2340
[0x44378b] memmove(0x21d2340, 0x48db53, 5, 0x7fc3b3739778, 2) = 0x21d2340
[0x443652] malloc(5)                             = 0x021d2360
[0x44378b] memmove(0x21d2360, 0x48db58, 5, 0x7fc3b3739778, 2) = 0x21d2360
[0x443652] malloc(5)                             = 0x021d2380
[0x44378b] memmove(0x21d2380, 0x48db5d, 5, 0x7fc3b3739778, 2) = 0x21d2380
[0x443652] malloc(4)                             = 0x021d23a0
[0x44378b] memmove(0x21d23a0, 0x48db62, 4, 0x7fc3b3739778, 2) = 0x21d23a0
[0x443652] malloc(5)                             = 0x021d23c0
[0x44378b] memmove(0x21d23c0, 0x48db66, 5, 0x7fc3b3739798, 0) = 0x21d23c0
[0x443652] malloc(5)                             = 0x021d2f50
[0x44378b] memmove(0x21d2f50, 0x48db6b, 5, 945, 1) = 0x21d2f50
[0x443652] malloc(5)                             = 0x021d2f70
[0x44378b] memmove(0x21d2f70, 0x48db70, 5, 0x7fc3b3739778, 2) = 0x21d2f70
[0x443652] malloc(4)                             = 0x021d2f90
[0x44378b] memmove(0x21d2f90, 0x48db75, 4, 0x7fc3b3739778, 2) = 0x21d2f90
[0x443652] malloc(5)                             = 0x021d2fb0
[0x44378b] memmove(0x21d2fb0, 0x48db79, 5, 0x7fc3b3739778, 2) = 0x21d2fb0
[0x443652] malloc(5)                             = 0x021d2fd0
[0x44378b] memmove(0x21d2fd0, 0x48db7e, 5, 0x7fc3b3739778, 2) = 0x21d2fd0
[0x443652] malloc(4)                             = 0x021d2ff0
[0x44378b] memmove(0x21d2ff0, 0x48db83, 4, 0x7fc3b3739778, 2) = 0x21d2ff0
[0x443652] malloc(4)                             = 0x021d3010
[0x44378b] memmove(0x21d3010, 0x48db87, 4, 0x7fc3b3739778, 2) = 0x21d3010
[0x443652] malloc(4)                             = 0x021d3030
[0x44378b] memmove(0x21d3030, 0x48db8b, 4, 0x7fc3b3739778, 2) = 0x21d3030
[0x443652] malloc(4)                             = 0x021d3050
[0x44378b] memmove(0x21d3050, 0x48db8f, 4, 0x7fc3b3739778, 2) = 0x21d3050
[0x443652] malloc(4)                             = 0x021d3070
[0x44378b] memmove(0x21d3070, 0x48db93, 4, 0x7fc3b3739778, 2) = 0x21d3070
[0x443652] malloc(5)                             = 0x021d3090
[0x44378b] memmove(0x21d3090, 0x48db97, 5, 0x7fc3b3739778, 2) = 0x21d3090
[0x47827d] tgetent(0x7ffff30fc060, 0x21d1e60, 0x21d3890, 4, 2) = 1
[0x4782c7] tgetstr(0x48a52d, 0x7ffff30fc048, 0, 4352, 0x21d3cc6) = 0x6a9440
[0x4782c7] tgetstr(0x48a528, 0x7ffff30fc048, 0, 0, 0) = 0x6a9447
[0x4782c7] tgetstr(0x48a4c4, 0x7ffff30fc048, 0, 7, 101) = 0x6a9454
[0x4782c7] tgetstr(0x48a532, 0x7ffff30fc048, 0, 20, 0) = 0x6a9459
[0x4782c7] tgetstr(0x48a4fb, 0x7ffff30fc048, 0, 25, 65535) = 0x6a9463
[0x4782c7] tgetstr(0x48a500, 0x7ffff30fc048, 0, 35, 0) = 0x6a9469
[0x4782c7] tgetstr(0x48a546, 0x7ffff30fc048, 0, 41, 65535) = 0
[0x4782c7] tgetstr(0x48a54b, 0x7ffff30fc048, 0, 7, 65535) = 0
[0x4782c7] tgetstr(0x48a523, 0x7ffff30fc048, 0, 11, 82) = 0x6a946e
[0x4782c7] tgetstr(0x48a514, 0x7ffff30fc048, 0, 46, 98) = 0x6a9480
[0x4782c7] tgetstr(0x48a50f, 0x7ffff30fc048, 0, 0, 105) = 0x6a9489
[0x4782c7] tgetstr(0x48a46a, 0x7ffff30fc048, 0, 9, 101) = 0
[0x4782c7] tgetstr(0x48a4f1, 0x7ffff30fc048, 0, 42, 99) = 0x6a9492
[0x4782c7] tgetstr(0x48a4f6, 0x7ffff30fc048, 0, 18, 65535) = 0x6a94d8
[0x4782c7] tgetstr(0x48a456, 0x7ffff30fc048, 0, 24, 65535) = 0x6a951e
[0x4782c7] tgetstr(0x48a45b, 0x7ffff30fc048, 0, 30, 66) = 0x6a9528
[0x4782c7] tgetstr(0x4883d6, 0x7ffff30fc048, 0, 40, 70) = 0x6a9532
[0x4782c7] tgetstr(0x48a4e2, 0x7ffff30fc048, 0, 0xffffffffff956b02, 100) = 0x6a9536
[0x479686] tgetflag(0x48a541, 0xffffffc0, 0, 0xffffffffff956b06, 112) = 0
[0x4796b4] tgetflag(0x48a497, 0x48a541, 2, 1, 115) = 0
[0x4796e2] tgetflag(0x48a492, 0x48a497, 2, 23, 98) = 0
[0x4782c7] tgetstr(0x480d92, 0x7ffff30fc048, 59, 59, 97) = 0x6a953f
[0x443652] malloc(2)                             = 0x021d3a50
[0x44378b] memmove(0x21d3a50, 0x6a953f, 2, -3, 2) = 0x21d3a50
[0x4782c7] tgetstr(0x480d95, 0x7ffff30fc048, 60, 60, 2) = 0x6a9541
[0x443652] malloc(5)                             = 0x021d32d0
[0x44378b] memmove(0x21d32d0, 0x6a9541, 5, 49, 0) = 0x21d32d0
[0x443652] malloc(1920)                          = 0x021d7470
[0x443968] free(0x021d3320)                      = <void>
[0x4782c7] tgetstr(0x48dd64, 0x7ffff30fc048, 61, 61, 3) = 0
[0x4782c7] tgetstr(0x48dd6a, 0x7ffff30fc048, 61, 61, 61) = 0
[0x47977d] tgetnum(0x48d8fe, 107, 33, 61, 61)    = 24
[0x479792] tgetnum(0x489b52, 0x48d8f0, 0, 14, 0) = 80
[0x4797a0] tgetnum(0x48a483, 0x489b52, 2, 18, 111) = 8
[0x4797c5] __sprintf_chk(0x6a9c40, 1, 15, 0x47f59b, 8) = 1
[0x4782c7] tgetstr(0x48a46a, 0x7ffff30fc048, 0x6a9c41, 0, 0x47f59d) = 0
[0x4782c7] tgetstr(0x48e64c, 0x7ffff30fc048, 0, 42, 99) = 0x6a9546
[0x4782c7] tgetstr(0x48d953, 0x7ffff30fc048, 0, 6, 112) = 0
[0x458acd] tcgetattr(0, 0x7ffff30fbfb0)          = 0
[0x443652] malloc(2)                             = 0x021d32f0
[0x44378b] memmove(0x21d32f0, 0x7ffff30fbfa0, 2, 0x7fc3b3739778, 2) = 0x21d32f0
[0x443968] free(0x021d3a50)                      = <void>
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 2) = 0
[0x4583c6] strncasecmp(0x487d3b, 0x48e550, 5, 16, 2) = 0xffffff88
[0x4521b8] strcmp("ttym", "tabstop")             = 19
[0x4521b8] strcmp("ttym", "tagbsearch")          = 19
[0x4521b8] strcmp("ttym", "taglength")           = 19
[0x4521b8] strcmp("ttym", "tagrelative")         = 19
[0x4521b8] strcmp("ttym", "tags")                = 19
[0x4521b8] strcmp("ttym", "tagstack")            = 19
[0x4521b8] strcmp("ttym", "term")                = 15
[0x4521b8] strcmp("ttym", "terse")               = 15
[0x4521b8] strcmp("ttym", "textauto")            = 15
[0x4521b8] strcmp("ttym", "textmode")            = 15
[0x4521b8] strcmp("ttym", "textwidth")           = 15
[0x4521b8] strcmp("ttym", "tildeop")             = 11
[0x4521b8] strcmp("ttym", "timeout")             = 11
[0x4521b8] strcmp("ttym", "timeoutlen")          = 11
[0x4521b8] strcmp("ttym", "title")               = 11
[0x4521b8] strcmp("ttym", "titlelen")            = 11
[0x4521b8] strcmp("ttym", "titleold")            = 11
[0x4521b8] strcmp("ttym", "titlestring")         = 11
[0x4521b8] strcmp("ttym", "ttimeout")            = 16
[0x4521b8] strcmp("ttym", "ttimeoutlen")         = 16
[0x4521b8] strcmp("ttym", "ttybuiltin")          = 11
[0x4521b8] strcmp("ttym", "ttyfast")             = 7
[0x4521b8] strcmp("ttym", "ttymouse")            = -111
[0x4521b8] strcmp("ttym", "ttyscroll")           = -6
[0x4521b8] strcmp("ttym", "ttytype")             = -7
[0x4521b8] strcmp("ttym", "undolevels")          = -1
[0x4521b8] strcmp("ttym", "updatecount")         = -1
[0x4521b8] strcmp("ttym", "updatetime")          = -1
[0x4521b8] strcmp("ttym", "verbose")             = -2
[0x4521b8] strcmp("ttym", "viminfo")             = -2
[0x4521b8] strcmp("ttym", "visualbell")          = -2
[0x4521b8] strcmp("ttym", "w300")                = -3
[0x4521b8] strcmp("ttym", "w1200")               = -3
[0x4521b8] strcmp("ttym", "w9600")               = -3
[0x4521b8] strcmp("ttym", "warn")                = -3
[0x4521b8] strcmp("ttym", "weirdinvert")         = -3
[0x4521b8] strcmp("ttym", "whichwrap")           = -3
[0x4521b8] strcmp("ttym", "wildchar")            = -3
[0x4521b8] strcmp("ttym", "wildcharm")           = -3
[0x4521b8] strcmp("ttym", "wildignore")          = -3
[0x4521b8] strcmp("ttym", "wildmenu")            = -3
[0x4521b8] strcmp("ttym", "wildmode")            = -3
[0x4521b8] strcmp("ttym", "winaltkeys")          = -3
[0x4521b8] strcmp("ttym", "window")              = -3
[0x4521b8] strcmp("ttym", "winheight")           = -3
[0x4521b8] strcmp("ttym", "winminheight")        = -3
[0x4521b8] strcmp("ttym", "wrap")                = -3
[0x4521b8] strcmp("ttym", "wrapmargin")          = -3
[0x4521b8] strcmp("ttym", "wrapscan")            = -3
[0x4521b8] strcmp("ttym", "write")               = -3
[0x4521b8] strcmp("ttym", "writeany")            = -3
[0x4521b8] strcmp("ttym", "writebackup")         = -3
[0x4521b8] strcmp("ttym", "writedelay")          = -3
[0x4521b8] strcmp("ttym", "t_AB")                = 21
[0x4521b8] strcmp("ttym", "t_AF")                = 21
[0x4521b8] strcmp("ttym", "t_AL")                = 21
[0x4521b8] strcmp("ttym", "t_al")                = 21
[0x4521b8] strcmp("ttym", "t_bc")                = 21
[0x4521b8] strcmp("ttym", "t_cd")                = 21
[0x4521b8] strcmp("ttym", "t_ce")                = 21
[0x4521b8] strcmp("ttym", "t_cl")                = 21
[0x4521b8] strcmp("ttym", "t_cm")                = 21
[0x4521b8] strcmp("ttym", "t_Co")                = 21
[0x4521b8] strcmp("ttym", "t_CS")                = 21
[0x4521b8] strcmp("ttym", "t_cs")                = 21
[0x4521b8] strcmp("ttym", "t_da")                = 21
[0x4521b8] strcmp("ttym", "t_db")                = 21
[0x4521b8] strcmp("ttym", "t_DL")                = 21
[0x4521b8] strcmp("ttym", "t_dl")                = 21
[0x4521b8] strcmp("ttym", "t_fs")                = 21
[0x4521b8] strcmp("ttym", "t_IE")                = 21
[0x4521b8] strcmp("ttym", "t_IS")                = 21
[0x4521b8] strcmp("ttym", "t_ke")                = 21
[0x4521b8] strcmp("ttym", "t_ks")                = 21
[0x4521b8] strcmp("ttym", "t_le")                = 21
[0x4521b8] strcmp("ttym", "t_mb")                = 21
[0x4521b8] strcmp("ttym", "t_md")                = 21
[0x4521b8] strcmp("ttym", "t_me")                = 21
[0x4521b8] strcmp("ttym", "t_mr")                = 21
[0x4521b8] strcmp("ttym", "t_ms")                = 21
[0x4521b8] strcmp("ttym", "t_nd")                = 21
[0x4521b8] strcmp("ttym", "t_op")                = 21
[0x4521b8] strcmp("ttym", "t_RI")                = 21
[0x4521b8] strcmp("ttym", "t_RV")                = 21
[0x4521b8] strcmp("ttym", "t_Sb")                = 21
[0x4521b8] strcmp("ttym", "t_Sf")                = 21
[0x4521b8] strcmp("ttym", "t_se")                = 21
[0x4521b8] strcmp("ttym", "t_so")                = 21
[0x4521b8] strcmp("ttym", "t_sr")                = 21
[0x4521b8] strcmp("ttym", "t_ts")                = 21
[0x4521b8] strcmp("ttym", "t_te")                = 21
[0x4521b8] strcmp("ttym", "t_ti")                = 21
[0x4521b8] strcmp("ttym", "t_ue")                = 21
[0x4521b8] strcmp("ttym", "t_us")                = 21
[0x4521b8] strcmp("ttym", "t_vb")                = 21
[0x4521b8] strcmp("ttym", "t_ve")                = 21
[0x4521b8] strcmp("ttym", "t_vi")                = 21
[0x4521b8] strcmp("ttym", "t_vs")                = 21
[0x4521b8] strcmp("ttym", "t_WP")                = 21
[0x4521b8] strcmp("ttym", "t_WS")                = 21
[0x4521b8] strcmp("ttym", "t_xs")                = 21
[0x4521b8] strcmp("ttym", "t_ZH")                = 21
[0x4521b8] strcmp("ttym", "t_ZR")                = 21
[0x452229] strcmp("ttym", "ts")                  = 1
[0x452229] strcmp("ttym", "tbs")                 = 18
[0x452229] strcmp("ttym", "tl")                  = 8
[0x452229] strcmp("ttym", "tr")                  = 2
[0x452229] strcmp("ttym", "tag")                 = 19
[0x452229] strcmp("ttym", "tgst")                = 13
[0x452229] strcmp("ttym", "ta")                  = 19
[0x452229] strcmp("ttym", "tx")                  = -4
[0x452229] strcmp("ttym", "tw")                  = -3
[0x452229] strcmp("ttym", "top")                 = 5
[0x452229] strcmp("ttym", "to")                  = 5
[0x452229] strcmp("ttym", "tm")                  = 7
[0x452229] strcmp("ttym", "ttm")                 = 12
[0x452229] strcmp("ttym", "tbi")                 = 18
[0x452229] strcmp("ttym", "tf")                  = 14
[0x452229] strcmp("ttym", "ttym")                = 0
[0x443652] malloc(6)                             = 0x021d3a50
[0x44378b] memmove(0x21d3a50, 0x48e550, 6, 0x7fc3b3739728, 0) = 0x21d3a50
[0x452950] strncmp("xterm", "xterm", 5)          = 0
[0x4583c6] strncasecmp(0x21d3a50, 0x48e550, 5, 16, 0x48e550) = 0
[0x4583d4] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x478379] strstr("xterm", "8bit")               = NULL
[0x443652] malloc(4)                             = 0x021d3310
[0x44378b] memmove(0x21d3310, 0x48aac9, 4, 0x7fc3b3739778, 2) = 0x21d3310
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 2) = 0
[0x443968] free(0x021d1150)                      = <void>
[0x443968] free(0x021d1170)                      = <void>
[0x443652] malloc(4000)                          = 0x021d7c00
[0x443652] malloc(192)                           = 0x021d3a90
[0x443652] malloc(192)                           = 0x021d3330
[0x443652] malloc(24)                            = 0x021d3400
[0x45f6d2] memset(0x021d7c00, ' ', 80)           = 0x021d7c00
[0x45f6e7] memset(0x021d7c50, '\000', 80)        = 0x021d7c50
[0x45f6d2] memset(0x021d7ca0, ' ', 80)           = 0x021d7ca0
[0x45f6e7] memset(0x021d7cf0, '\000', 80)        = 0x021d7cf0
[0x45f6d2] memset(0x021d7d40, ' ', 80)           = 0x021d7d40
[0x45f6e7] memset(0x021d7d90, '\000', 80)        = 0x021d7d90
[0x45f6d2] memset(0x021d7de0, ' ', 80)           = 0x021d7de0
[0x45f6e7] memset(0x021d7e30, '\000', 80)        = 0x021d7e30
[0x45f6d2] memset(0x021d7e80, ' ', 80)           = 0x021d7e80
[0x45f6e7] memset(0x021d7ed0, '\000', 80)        = 0x021d7ed0
[0x45f6d2] memset(0x021d7f20, ' ', 80)           = 0x021d7f20
[0x45f6e7] memset(0x021d7f70, '\000', 80)        = 0x021d7f70
[0x45f6d2] memset(0x021d7fc0, ' ', 80)           = 0x021d7fc0
[0x45f6e7] memset(0x021d8010, '\000', 80)        = 0x021d8010
[0x45f6d2] memset(0x021d8060, ' ', 80)           = 0x021d8060
[0x45f6e7] memset(0x021d80b0, '\000', 80)        = 0x021d80b0
[0x45f6d2] memset(0x021d8100, ' ', 80)           = 0x021d8100
[0x45f6e7] memset(0x021d8150, '\000', 80)        = 0x021d8150
[0x45f6d2] memset(0x021d81a0, ' ', 80)           = 0x021d81a0
[0x45f6e7] memset(0x021d81f0, '\000', 80)        = 0x021d81f0
[0x45f6d2] memset(0x021d8240, ' ', 80)           = 0x021d8240
[0x45f6e7] memset(0x021d8290, '\000', 80)        = 0x021d8290
[0x45f6d2] memset(0x021d82e0, ' ', 80)           = 0x021d82e0
[0x45f6e7] memset(0x021d8330, '\000', 80)        = 0x021d8330
[0x45f6d2] memset(0x021d8380, ' ', 80)           = 0x021d8380
[0x45f6e7] memset(0x021d83d0, '\000', 80)        = 0x021d83d0
[0x45f6d2] memset(0x021d8420, ' ', 80)           = 0x021d8420
[0x45f6e7] memset(0x021d8470, '\000', 80)        = 0x021d8470
[0x45f6d2] memset(0x021d84c0, ' ', 80)           = 0x021d84c0
[0x45f6e7] memset(0x021d8510, '\000', 80)        = 0x021d8510
[0x45f6d2] memset(0x021d8560, ' ', 80)           = 0x021d8560
[0x45f6e7] memset(0x021d85b0, '\000', 80)        = 0x021d85b0
[0x45f6d2] memset(0x021d8600, ' ', 80)           = 0x021d8600
[0x45f6e7] memset(0x021d8650, '\000', 80)        = 0x021d8650
[0x45f6d2] memset(0x021d86a0, ' ', 80)           = 0x021d86a0
[0x45f6e7] memset(0x021d86f0, '\000', 80)        = 0x021d86f0
[0x45f6d2] memset(0x021d8740, ' ', 80)           = 0x021d8740
[0x45f6e7] memset(0x021d8790, '\000', 80)        = 0x021d8790
[0x45f6d2] memset(0x021d87e0, ' ', 80)           = 0x021d87e0
[0x45f6e7] memset(0x021d8830, '\000', 80)        = 0x021d8830
[0x45f6d2] memset(0x021d8880, ' ', 80)           = 0x021d8880
[0x45f6e7] memset(0x021d88d0, '\000', 80)        = 0x021d88d0
[0x45f6d2] memset(0x021d8920, ' ', 80)           = 0x021d8920
[0x45f6e7] memset(0x021d8970, '\000', 80)        = 0x021d8970
[0x45f6d2] memset(0x021d89c0, ' ', 80)           = 0x021d89c0
[0x45f6e7] memset(0x021d8a10, '\000', 80)        = 0x021d8a10
[0x45f6d2] memset(0x021d8a60, ' ', 80)           = 0x021d8a60
[0x45f6e7] memset(0x021d8ab0, '\000', 80)        = 0x021d8ab0
[0x458c42] ioctl(1, 21523, 0x7ffff30fbfb0)       = 0
[0x4521b8] strcmp("lines", "langmap")            = 8
[0x4521b8] strcmp("lines", "laststatus")         = 8
[0x4521b8] strcmp("lines", "lazyredraw")         = 8
[0x4521b8] strcmp("lines", "linebreak")          = 17
[0x4521b8] strcmp("lines", "lines")              = 0
[0x4521b8] strcmp("columns", "cindent")          = 6
[0x4521b8] strcmp("columns", "cinkeys")          = 6
[0x4521b8] strcmp("columns", "cinoptions")       = 6
[0x4521b8] strcmp("columns", "cinwords")         = 6
[0x4521b8] strcmp("columns", "clipboard")        = 3
[0x4521b8] strcmp("columns", "cmdheight")        = 2
[0x4521b8] strcmp("columns", "columns")          = 0
[0x458c42] ioctl(1, 21523, 0x7ffff30fc880)       = 0
[0x4521b8] strcmp("lines", "langmap")            = 8
[0x4521b8] strcmp("lines", "laststatus")         = 8
[0x4521b8] strcmp("lines", "lazyredraw")         = 8
[0x4521b8] strcmp("lines", "linebreak")          = 17
[0x4521b8] strcmp("lines", "lines")              = 0
[0x4521b8] strcmp("columns", "cindent")          = 6
[0x4521b8] strcmp("columns", "cinkeys")          = 6
[0x4521b8] strcmp("columns", "cinoptions")       = 6
[0x4521b8] strcmp("columns", "cinwords")         = 6
[0x4521b8] strcmp("columns", "clipboard")        = 3
[0x4521b8] strcmp("columns", "cmdheight")        = 2
[0x4521b8] strcmp("columns", "columns")          = 0
[0x4521b8] strcmp("scroll", "scroll")            = 0
[0x4521b8] strcmp("bg", "background")            = 6
[0x4521b8] strcmp("bg", "backspace")             = 6
[0x4521b8] strcmp("bg", "backup")                = 6
[0x4521b8] strcmp("bg", "backupdir")             = 6
[0x4521b8] strcmp("bg", "backupext")             = 6
[0x4521b8] strcmp("bg", "beautify")              = 2
[0x4521b8] strcmp("bg", "binary")                = -2
[0x4521b8] strcmp("bg", "bioskey")               = -2
[0x4521b8] strcmp("bg", "breakat")               = -11
[0x4521b8] strcmp("bg", "browsedir")             = -11
[0x4521b8] strcmp("bg", "cindent")               = -1
[0x4521b8] strcmp("bg", "cinkeys")               = -1
[0x4521b8] strcmp("bg", "cinoptions")            = -1
[0x4521b8] strcmp("bg", "cinwords")              = -1
[0x4521b8] strcmp("bg", "clipboard")             = -1
[0x4521b8] strcmp("bg", "cmdheight")             = -1
[0x4521b8] strcmp("bg", "columns")               = -1
[0x4521b8] strcmp("bg", "comments")              = -1
[0x4521b8] strcmp("bg", "compatible")            = -1
[0x4521b8] strcmp("bg", "complete")              = -1
[0x4521b8] strcmp("bg", "confirm")               = -1
[0x4521b8] strcmp("bg", "conskey")               = -1
[0x4521b8] strcmp("bg", "cpoptions")             = -1
[0x4521b8] strcmp("bg", "cscopeprg")             = -1
[0x4521b8] strcmp("bg", "cscopetag")             = -1
[0x4521b8] strcmp("bg", "cscopetagorder")        = -1
[0x4521b8] strcmp("bg", "cscopeverbose")         = -1
[0x4521b8] strcmp("bg", "define")                = -2
[0x4521b8] strcmp("bg", "dictionary")            = -2
[0x4521b8] strcmp("bg", "digraph")               = -2
[0x4521b8] strcmp("bg", "directory")             = -2
[0x4521b8] strcmp("bg", "display")               = -2
[0x4521b8] strcmp("bg", "edcompatible")          = -3
[0x4521b8] strcmp("bg", "endofline")             = -3
[0x4521b8] strcmp("bg", "equalalways")           = -3
[0x4521b8] strcmp("bg", "equalprg")              = -3
[0x4521b8] strcmp("bg", "errorbells")            = -3
[0x4521b8] strcmp("bg", "errorfile")             = -3
[0x4521b8] strcmp("bg", "errorformat")           = -3
[0x4521b8] strcmp("bg", "esckeys")               = -3
[0x4521b8] strcmp("bg", "eventignore")           = -3
[0x4521b8] strcmp("bg", "expandtab")             = -3
[0x4521b8] strcmp("bg", "exrc")                  = -3
[0x4521b8] strcmp("bg", "fileencoding")          = -4
[0x4521b8] strcmp("bg", "fileformat")            = -4
[0x4521b8] strcmp("bg", "fileformats")           = -4
[0x4521b8] strcmp("bg", "filetype")              = -4
[0x4521b8] strcmp("bg", "fkmap")                 = -4
[0x4521b8] strcmp("bg", "flash")                 = -4
[0x4521b8] strcmp("bg", "formatoptions")         = -4
[0x4521b8] strcmp("bg", "formatprg")             = -4
[0x4521b8] strcmp("bg", "gdefault")              = -5
[0x4521b8] strcmp("bg", "graphic")               = -5
[0x4521b8] strcmp("bg", "grepformat")            = -5
[0x4521b8] strcmp("bg", "grepprg")               = -5
[0x4521b8] strcmp("bg", "guicursor")             = -5
[0x4521b8] strcmp("bg", "guifont")               = -5
[0x4521b8] strcmp("bg", "guifontset")            = -5
[0x4521b8] strcmp("bg", "guiheadroom")           = -5
[0x4521b8] strcmp("bg", "guioptions")            = -5
[0x4521b8] strcmp("bg", "guipty")                = -5
[0x4521b8] strcmp("bg", "hardtabs")              = -6
[0x4521b8] strcmp("bg", "helpfile")              = -6
[0x4521b8] strcmp("bg", "helpheight")            = -6
[0x4521b8] strcmp("bg", "hidden")                = -6
[0x4521b8] strcmp("bg", "highlight")             = -6
[0x4521b8] strcmp("bg", "history")               = -6
[0x4521b8] strcmp("bg", "hkmap")                 = -6
[0x4521b8] strcmp("bg", "hkmapp")                = -6
[0x4521b8] strcmp("bg", "hlsearch")              = -6
[0x4521b8] strcmp("bg", "icon")                  = -7
[0x4521b8] strcmp("bg", "iconstring")            = -7
[0x4521b8] strcmp("bg", "ignorecase")            = -7
[0x4521b8] strcmp("bg", "include")               = -7
[0x4521b8] strcmp("bg", "incsearch")             = -7
[0x4521b8] strcmp("bg", "infercase")             = -7
[0x4521b8] strcmp("bg", "insertmode")            = -7
[0x4521b8] strcmp("bg", "isfname")               = -7
[0x4521b8] strcmp("bg", "isident")               = -7
[0x4521b8] strcmp("bg", "iskeyword")             = -7
[0x4521b8] strcmp("bg", "isprint")               = -7
[0x4521b8] strcmp("bg", "joinspaces")            = -8
[0x4521b8] strcmp("bg", "key")                   = -9
[0x4521b8] strcmp("bg", "keymodel")              = -9
[0x4521b8] strcmp("bg", "keywordprg")            = -9
[0x4521b8] strcmp("bg", "langmap")               = -10
[0x4521b8] strcmp("bg", "laststatus")            = -10
[0x4521b8] strcmp("bg", "lazyredraw")            = -10
[0x4521b8] strcmp("bg", "linebreak")             = -10
[0x4521b8] strcmp("bg", "lines")                 = -10
[0x4521b8] strcmp("bg", "lisp")                  = -10
[0x4521b8] strcmp("bg", "list")                  = -10
[0x4521b8] strcmp("bg", "listchars")             = -10
[0x4521b8] strcmp("bg", "magic")                 = -11
[0x4521b8] strcmp("bg", "makeef")                = -11
[0x4521b8] strcmp("bg", "makeprg")               = -11
[0x4521b8] strcmp("bg", "matchpairs")            = -11
[0x4521b8] strcmp("bg", "matchtime")             = -11
[0x4521b8] strcmp("bg", "maxfuncdepth")          = -11
[0x4521b8] strcmp("bg", "maxmapdepth")           = -11
[0x4521b8] strcmp("bg", "maxmem")                = -11
[0x4521b8] strcmp("bg", "maxmemtot")             = -11
[0x4521b8] strcmp("bg", "mesg")                  = -11
[0x4521b8] strcmp("bg", "modeline")              = -11
[0x4521b8] strcmp("bg", "modelines")             = -11
[0x4521b8] strcmp("bg", "modified")              = -11
[0x4521b8] strcmp("bg", "more")                  = -11
[0x4521b8] strcmp("bg", "mouse")                 = -11
[0x4521b8] strcmp("bg", "mousefocus")            = -11
[0x4521b8] strcmp("bg", "mousehide")             = -11
[0x4521b8] strcmp("bg", "mousemodel")            = -11
[0x4521b8] strcmp("bg", "mousetime")             = -11
[0x4521b8] strcmp("bg", "novice")                = -12
[0x4521b8] strcmp("bg", "nrformats")             = -12
[0x4521b8] strcmp("bg", "number")                = -12
[0x4521b8] strcmp("bg", "open")                  = -13
[0x4521b8] strcmp("bg", "optimize")              = -13
[0x4521b8] strcmp("bg", "osfiletype")            = -13
[0x4521b8] strcmp("bg", "paragraphs")            = -14
[0x4521b8] strcmp("bg", "paste")                 = -14
[0x4521b8] strcmp("bg", "pastetoggle")           = -14
[0x4521b8] strcmp("bg", "patchmode")             = -14
[0x4521b8] strcmp("bg", "path")                  = -14
[0x4521b8] strcmp("bg", "previewheight")         = -14
[0x4521b8] strcmp("bg", "prompt")                = -14
[0x4521b8] strcmp("bg", "readonly")              = -16
[0x4521b8] strcmp("bg", "redraw")                = -16
[0x4521b8] strcmp("bg", "remap")                 = -16
[0x4521b8] strcmp("bg", "report")                = -16
[0x4521b8] strcmp("bg", "restorescreen")         = -16
[0x4521b8] strcmp("bg", "revins")                = -16
[0x4521b8] strcmp("bg", "rightleft")             = -16
[0x4521b8] strcmp("bg", "ruler")                 = -16
[0x4521b8] strcmp("bg", "rulerformat")           = -16
[0x4521b8] strcmp("bg", "scroll")                = -17
[0x4521b8] strcmp("bg", "scrollbind")            = -17
[0x4521b8] strcmp("bg", "scrolljump")            = -17
[0x4521b8] strcmp("bg", "scrolloff")             = -17
[0x4521b8] strcmp("bg", "scrollopt")             = -17
[0x4521b8] strcmp("bg", "sections")              = -17
[0x4521b8] strcmp("bg", "secure")                = -17
[0x4521b8] strcmp("bg", "selection")             = -17
[0x4521b8] strcmp("bg", "selectmode")            = -17
[0x4521b8] strcmp("bg", "sessionoptions")        = -17
[0x4521b8] strcmp("bg", "shell")                 = -17
[0x4521b8] strcmp("bg", "shellcmdflag")          = -17
[0x4521b8] strcmp("bg", "shellpipe")             = -17
[0x4521b8] strcmp("bg", "shellquote")            = -17
[0x4521b8] strcmp("bg", "shellredir")            = -17
[0x4521b8] strcmp("bg", "shellslash")            = -17
[0x4521b8] strcmp("bg", "shelltype")             = -17
[0x4521b8] strcmp("bg", "shellxquote")           = -17
[0x4521b8] strcmp("bg", "shiftround")            = -17
[0x4521b8] strcmp("bg", "shiftwidth")            = -17
[0x4521b8] strcmp("bg", "shortmess")             = -17
[0x4521b8] strcmp("bg", "shortname")             = -17
[0x4521b8] strcmp("bg", "showbreak")             = -17
[0x4521b8] strcmp("bg", "showcmd")               = -17
[0x4521b8] strcmp("bg", "showfulltag")           = -17
[0x4521b8] strcmp("bg", "showmatch")             = -17
[0x4521b8] strcmp("bg", "showmode")              = -17
[0x4521b8] strcmp("bg", "sidescroll")            = -17
[0x4521b8] strcmp("bg", "slowopen")              = -17
[0x4521b8] strcmp("bg", "smartcase")             = -17
[0x4521b8] strcmp("bg", "smartindent")           = -17
[0x4521b8] strcmp("bg", "smarttab")              = -17
[0x4521b8] strcmp("bg", "softtabstop")           = -17
[0x4521b8] strcmp("bg", "sourceany")             = -17
[0x4521b8] strcmp("bg", "splitbelow")            = -17
[0x4521b8] strcmp("bg", "startofline")           = -17
[0x4521b8] strcmp("bg", "statusline")            = -17
[0x4521b8] strcmp("bg", "suffixes")              = -17
[0x4521b8] strcmp("bg", "swapfile")              = -17
[0x4521b8] strcmp("bg", "swapsync")              = -17
[0x4521b8] strcmp("bg", "switchbuf")             = -17
[0x4521b8] strcmp("bg", "syntax")                = -17
[0x4521b8] strcmp("bg", "tabstop")               = -18
[0x4521b8] strcmp("bg", "tagbsearch")            = -18
[0x4521b8] strcmp("bg", "taglength")             = -18
[0x4521b8] strcmp("bg", "tagrelative")           = -18
[0x4521b8] strcmp("bg", "tags")                  = -18
[0x4521b8] strcmp("bg", "tagstack")              = -18
[0x4521b8] strcmp("bg", "term")                  = -18
[0x4521b8] strcmp("bg", "terse")                 = -18
[0x4521b8] strcmp("bg", "textauto")              = -18
[0x4521b8] strcmp("bg", "textmode")              = -18
[0x4521b8] strcmp("bg", "textwidth")             = -18
[0x4521b8] strcmp("bg", "tildeop")               = -18
[0x4521b8] strcmp("bg", "timeout")               = -18
[0x4521b8] strcmp("bg", "timeoutlen")            = -18
[0x4521b8] strcmp("bg", "title")                 = -18
[0x4521b8] strcmp("bg", "titlelen")              = -18
[0x4521b8] strcmp("bg", "titleold")              = -18
[0x4521b8] strcmp("bg", "titlestring")           = -18
[0x4521b8] strcmp("bg", "ttimeout")              = -18
[0x4521b8] strcmp("bg", "ttimeoutlen")           = -18
[0x4521b8] strcmp("bg", "ttybuiltin")            = -18
[0x4521b8] strcmp("bg", "ttyfast")               = -18
[0x4521b8] strcmp("bg", "ttymouse")              = -18
[0x4521b8] strcmp("bg", "ttyscroll")             = -18
[0x4521b8] strcmp("bg", "ttytype")               = -18
[0x4521b8] strcmp("bg", "undolevels")            = -19
[0x4521b8] strcmp("bg", "updatecount")           = -19
[0x4521b8] strcmp("bg", "updatetime")            = -19
[0x4521b8] strcmp("bg", "verbose")               = -20
[0x4521b8] strcmp("bg", "viminfo")               = -20
[0x4521b8] strcmp("bg", "visualbell")            = -20
[0x4521b8] strcmp("bg", "w300")                  = -21
[0x4521b8] strcmp("bg", "w1200")                 = -21
[0x4521b8] strcmp("bg", "w9600")                 = -21
[0x4521b8] strcmp("bg", "warn")                  = -21
[0x4521b8] strcmp("bg", "weirdinvert")           = -21
[0x4521b8] strcmp("bg", "whichwrap")             = -21
[0x4521b8] strcmp("bg", "wildchar")              = -21
[0x4521b8] strcmp("bg", "wildcharm")             = -21
[0x4521b8] strcmp("bg", "wildignore")            = -21
[0x4521b8] strcmp("bg", "wildmenu")              = -21
[0x4521b8] strcmp("bg", "wildmode")              = -21
[0x4521b8] strcmp("bg", "winaltkeys")            = -21
[0x4521b8] strcmp("bg", "window")                = -21
[0x4521b8] strcmp("bg", "winheight")             = -21
[0x4521b8] strcmp("bg", "winminheight")          = -21
[0x4521b8] strcmp("bg", "wrap")                  = -21
[0x4521b8] strcmp("bg", "wrapmargin")            = -21
[0x4521b8] strcmp("bg", "wrapscan")              = -21
[0x4521b8] strcmp("bg", "write")                 = -21
[0x4521b8] strcmp("bg", "writeany")              = -21
[0x4521b8] strcmp("bg", "writebackup")           = -21
[0x4521b8] strcmp("bg", "writedelay")            = -21
[0x4521b8] strcmp("bg", "t_AB")                  = -18
[0x4521b8] strcmp("bg", "t_AF")                  = -18
[0x4521b8] strcmp("bg", "t_AL")                  = -18
[0x4521b8] strcmp("bg", "t_al")                  = -18
[0x4521b8] strcmp("bg", "t_bc")                  = -18
[0x4521b8] strcmp("bg", "t_cd")                  = -18
[0x4521b8] strcmp("bg", "t_ce")                  = -18
[0x4521b8] strcmp("bg", "t_cl")                  = -18
[0x4521b8] strcmp("bg", "t_cm")                  = -18
[0x4521b8] strcmp("bg", "t_Co")                  = -18
[0x4521b8] strcmp("bg", "t_CS")                  = -18
[0x4521b8] strcmp("bg", "t_cs")                  = -18
[0x4521b8] strcmp("bg", "t_da")                  = -18
[0x4521b8] strcmp("bg", "t_db")                  = -18
[0x4521b8] strcmp("bg", "t_DL")                  = -18
[0x4521b8] strcmp("bg", "t_dl")                  = -18
[0x4521b8] strcmp("bg", "t_fs")                  = -18
[0x4521b8] strcmp("bg", "t_IE")                  = -18
[0x4521b8] strcmp("bg", "t_IS")                  = -18
[0x4521b8] strcmp("bg", "t_ke")                  = -18
[0x4521b8] strcmp("bg", "t_ks")                  = -18
[0x4521b8] strcmp("bg", "t_le")                  = -18
[0x4521b8] strcmp("bg", "t_mb")                  = -18
[0x4521b8] strcmp("bg", "t_md")                  = -18
[0x4521b8] strcmp("bg", "t_me")                  = -18
[0x4521b8] strcmp("bg", "t_mr")                  = -18
[0x4521b8] strcmp("bg", "t_ms")                  = -18
[0x4521b8] strcmp("bg", "t_nd")                  = -18
[0x4521b8] strcmp("bg", "t_op")                  = -18
[0x4521b8] strcmp("bg", "t_RI")                  = -18
[0x4521b8] strcmp("bg", "t_RV")                  = -18
[0x4521b8] strcmp("bg", "t_Sb")                  = -18
[0x4521b8] strcmp("bg", "t_Sf")                  = -18
[0x4521b8] strcmp("bg", "t_se")                  = -18
[0x4521b8] strcmp("bg", "t_so")                  = -18
[0x4521b8] strcmp("bg", "t_sr")                  = -18
[0x4521b8] strcmp("bg", "t_ts")                  = -18
[0x4521b8] strcmp("bg", "t_te")                  = -18
[0x4521b8] strcmp("bg", "t_ti")                  = -18
[0x4521b8] strcmp("bg", "t_ue")                  = -18
[0x4521b8] strcmp("bg", "t_us")                  = -18
[0x4521b8] strcmp("bg", "t_vb")                  = -18
[0x4521b8] strcmp("bg", "t_ve")                  = -18
[0x4521b8] strcmp("bg", "t_vi")                  = -18
[0x4521b8] strcmp("bg", "t_vs")                  = -18
[0x4521b8] strcmp("bg", "t_WP")                  = -18
[0x4521b8] strcmp("bg", "t_WS")                  = -18
[0x4521b8] strcmp("bg", "t_xs")                  = -18
[0x4521b8] strcmp("bg", "t_ZH")                  = -18
[0x4521b8] strcmp("bg", "t_ZR")                  = -18
[0x452229] strcmp("bg", "bg")                    = 0
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f0a, 11, 0x7fc3b3739778, 2) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d3440
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3440, 4, 0x7fc3b3739778, 2) = 0x21d3470
[0x443968] free(0x021d3440)                      = <void>
[0x42ecbe] strcasecmp("<F1>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d3440
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3440, 4, 0x7fc3b3739778, 2) = 0x21d3490
[0x443968] free(0x021d3440)                      = <void>
[0x443652] malloc(40)                            = 0x021d3440
[0x443652] malloc(4)                             = 0x021d34b0
[0x44378b] memmove(0x21d34b0, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d34b0
[0x443652] malloc(4)                             = 0x021d34d0
[0x44378b] memmove(0x21d34d0, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d34d0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f0a, 11, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d34f0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d34f0, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d34f0)                      = <void>
[0x42ecbe] strcasecmp("<F1>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d34f0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d34f0, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d34f0)                      = <void>
[0x443652] malloc(40)                            = 0x021d34f0
[0x443652] malloc(4)                             = 0x021d3520
[0x44378b] memmove(0x21d3520, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d3520
[0x443652] malloc(4)                             = 0x021d3540
[0x44378b] memmove(0x21d3540, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3540
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f15, 11, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d3560
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3560, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d3560)                      = <void>
[0x42ecbe] strcasecmp("<F2>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d3560
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3560, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d3560)                      = <void>
[0x42ef16] strncmp("\200\3757", "\200\3758", 3)  = -1
[0x443652] malloc(40)                            = 0x021d3560
[0x443652] malloc(4)                             = 0x021d3590
[0x44378b] memmove(0x21d3590, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3590
[0x443652] malloc(4)                             = 0x021d35b0
[0x44378b] memmove(0x21d35b0, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d35b0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f15, 11, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d35d0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d35d0, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d35d0)                      = <void>
[0x42ecbe] strcasecmp("<F2>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d35d0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d35d0, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d35d0)                      = <void>
[0x42ef16] strncmp("\200\3757", "\200\3758", 3)  = -1
[0x443652] malloc(40)                            = 0x021d35d0
[0x443652] malloc(4)                             = 0x021d3600
[0x44378b] memmove(0x21d3600, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d3600
[0x443652] malloc(4)                             = 0x021d3620
[0x44378b] memmove(0x21d3620, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3620
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f20, 11, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d3640
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3640, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d3640)                      = <void>
[0x42ecbe] strcasecmp("<F3>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d3640
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3640, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d3640)                      = <void>
[0x42ef16] strncmp("\200\3758", "\200\3759", 3)  = -1
[0x42ef16] strncmp("\200\3757", "\200\3759", 3)  = -2
[0x443652] malloc(40)                            = 0x021d3640
[0x443652] malloc(4)                             = 0x021d3670
[0x44378b] memmove(0x21d3670, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3670
[0x443652] malloc(4)                             = 0x021d3690
[0x44378b] memmove(0x21d3690, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d3690
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f20, 11, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d36b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d36b0, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d36b0)                      = <void>
[0x42ecbe] strcasecmp("<F3>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d36b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d36b0, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d36b0)                      = <void>
[0x42ef16] strncmp("\200\3758", "\200\3759", 3)  = -1
[0x42ef16] strncmp("\200\3757", "\200\3759", 3)  = -2
[0x443652] malloc(40)                            = 0x021d36b0
[0x443652] malloc(4)                             = 0x021d36e0
[0x44378b] memmove(0x21d36e0, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d36e0
[0x443652] malloc(4)                             = 0x021d3700
[0x44378b] memmove(0x21d3700, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3700
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f2b, 11, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d3720
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3720, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d3720)                      = <void>
[0x42ecbe] strcasecmp("<F4>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d3720
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3720, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d3720)                      = <void>
[0x42ef16] strncmp("\200\3759", "\200\375:", 3)  = -1
[0x42ef16] strncmp("\200\3758", "\200\375:", 3)  = -2
[0x42ef16] strncmp("\200\3757", "\200\375:", 3)  = -3
[0x443652] malloc(40)                            = 0x021d3720
[0x443652] malloc(4)                             = 0x021d3750
[0x44378b] memmove(0x21d3750, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3750
[0x443652] malloc(4)                             = 0x021d3770
[0x44378b] memmove(0x21d3770, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d3770
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f2b, 11, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(31)                            = 0x021d3790
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3790, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d3790)                      = <void>
[0x42ecbe] strcasecmp("<F4>", "<nop>")           = -8
[0x443652] malloc(25)                            = 0x021d3790
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3790, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d3790)                      = <void>
[0x42ef16] strncmp("\200\3759", "\200\375:", 3)  = -1
[0x42ef16] strncmp("\200\3758", "\200\375:", 3)  = -2
[0x42ef16] strncmp("\200\3757", "\200\375:", 3)  = -3
[0x443652] malloc(40)                            = 0x021d3790
[0x443652] malloc(4)                             = 0x021d37c0
[0x44378b] memmove(0x21d37c0, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d37c0
[0x443652] malloc(4)                             = 0x021d37e0
[0x44378b] memmove(0x21d37e0, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d37e0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f36, 15, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F1>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d3800
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3800, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d3800)                      = <void>
[0x42ef16] strncmp("\200\375:", "\200\375?", 3)  = -5
[0x42ef16] strncmp("\200\3759", "\200\375?", 3)  = -6
[0x42ef16] strncmp("\200\3758", "\200\375?", 3)  = -7
[0x42ef16] strncmp("\200\3757", "\200\375?", 3)  = -8
[0x443652] malloc(40)                            = 0x021d3800
[0x443652] malloc(4)                             = 0x021d3830
[0x44378b] memmove(0x21d3830, 0x21d3470, 4, 0x7fc3b3739778, 2) = 0x21d3830
[0x443652] malloc(4)                             = 0x021d3850
[0x44378b] memmove(0x21d3850, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d3850
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f36, 15, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F1>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d3870
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3870, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d3870)                      = <void>
[0x42ef16] strncmp("\200\375:", "\200\375?", 3)  = -5
[0x42ef16] strncmp("\200\3759", "\200\375?", 3)  = -6
[0x42ef16] strncmp("\200\3758", "\200\375?", 3)  = -7
[0x42ef16] strncmp("\200\3757", "\200\375?", 3)  = -8
[0x443652] malloc(40)                            = 0x021d3870
[0x443652] malloc(4)                             = 0x021d38a0
[0x44378b] memmove(0x21d38a0, 0x21d3490, 4, 0x7fc3b3739798, 0) = 0x21d38a0
[0x443652] malloc(4)                             = 0x021d3b60
[0x44378b] memmove(0x21d3b60, 0x21d3470, 4, 113, 0) = 0x21d3b60
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f45, 15, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F2>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d3b80
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d3b80, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d3b80)                      = <void>
[0x42ef16] strncmp("\200\375?", "\200\375@", 3)  = -1
[0x42ef16] strncmp("\200\375:", "\200\375@", 3)  = -6
[0x42ef16] strncmp("\200\3759", "\200\375@", 3)  = -7
[0x42ef16] strncmp("\200\3758", "\200\375@", 3)  = -8
[0x42ef16] strncmp("\200\3757", "\200\375@", 3)  = -9
[0x443652] malloc(40)                            = 0x021d3b80
[0x443652] malloc(4)                             = 0x021d3bb0
[0x44378b] memmove(0x21d3bb0, 0x21d3470, 4, 33, 0) = 0x21d3bb0
[0x443652] malloc(4)                             = 0x021d3bd0
[0x44378b] memmove(0x21d3bd0, 0x21d3490, 4, 0x7fc3b3739778, 2) = 0x21d3bd0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f45, 15, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F2>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d8bb0
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d8bb0, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d8bb0)                      = <void>
[0x42ef16] strncmp("\200\375?", "\200\375@", 3)  = -1
[0x42ef16] strncmp("\200\375:", "\200\375@", 3)  = -6
[0x42ef16] strncmp("\200\3759", "\200\375@", 3)  = -7
[0x42ef16] strncmp("\200\3758", "\200\375@", 3)  = -8
[0x42ef16] strncmp("\200\3757", "\200\375@", 3)  = -9
[0x443652] malloc(40)                            = 0x021d8bb0
[0x443652] malloc(4)                             = 0x021d8be0
[0x44378b] memmove(0x21d8be0, 0x21d3490, 4, 8, 3) = 0x21d8be0
[0x443652] malloc(4)                             = 0x021d8c00
[0x44378b] memmove(0x21d8c00, 0x21d3470, 4, 8, 3) = 0x21d8c00
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f54, 15, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F3>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d8c20
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d8c20, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d8c20)                      = <void>
[0x42ef16] strncmp("\200\375@", "\200\375A", 3)  = -1
[0x42ef16] strncmp("\200\375?", "\200\375A", 3)  = -2
[0x42ef16] strncmp("\200\375:", "\200\375A", 3)  = -7
[0x42ef16] strncmp("\200\3759", "\200\375A", 3)  = -8
[0x42ef16] strncmp("\200\3758", "\200\375A", 3)  = -9
[0x42ef16] strncmp("\200\3757", "\200\375A", 3)  = -10
[0x443652] malloc(40)                            = 0x021d8c20
[0x443652] malloc(4)                             = 0x021d8c50
[0x44378b] memmove(0x21d8c50, 0x21d3470, 4, 8, 3) = 0x21d8c50
[0x443652] malloc(4)                             = 0x021d8c70
[0x44378b] memmove(0x21d8c70, 0x21d3490, 4, 8, 3) = 0x21d8c70
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f54, 15, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F3>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d8c90
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d8c90, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d8c90)                      = <void>
[0x42ef16] strncmp("\200\375@", "\200\375A", 3)  = -1
[0x42ef16] strncmp("\200\375?", "\200\375A", 3)  = -2
[0x42ef16] strncmp("\200\375:", "\200\375A", 3)  = -7
[0x42ef16] strncmp("\200\3759", "\200\375A", 3)  = -8
[0x42ef16] strncmp("\200\3758", "\200\375A", 3)  = -9
[0x42ef16] strncmp("\200\3757", "\200\375A", 3)  = -10
[0x443652] malloc(40)                            = 0x021d8c90
[0x443652] malloc(4)                             = 0x021d8cc0
[0x44378b] memmove(0x21d8cc0, 0x21d3490, 4, 8, 3) = 0x21d8cc0
[0x443652] malloc(4)                             = 0x021d8ce0
[0x44378b] memmove(0x21d8ce0, 0x21d3470, 4, 8, 3) = 0x21d8ce0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f63, 15, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F4>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d8d00
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d8d00, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d8d00)                      = <void>
[0x42ef16] strncmp("\200\375A", "\200\375B", 3)  = -1
[0x42ef16] strncmp("\200\375@", "\200\375B", 3)  = -2
[0x42ef16] strncmp("\200\375?", "\200\375B", 3)  = -3
[0x42ef16] strncmp("\200\375:", "\200\375B", 3)  = -8
[0x42ef16] strncmp("\200\3759", "\200\375B", 3)  = -9
[0x42ef16] strncmp("\200\3758", "\200\375B", 3)  = -10
[0x42ef16] strncmp("\200\3757", "\200\375B", 3)  = -11
[0x443652] malloc(40)                            = 0x021d8d00
[0x443652] malloc(4)                             = 0x021d8d30
[0x44378b] memmove(0x21d8d30, 0x21d3470, 4, 8, 3) = 0x21d8d30
[0x443652] malloc(4)                             = 0x021d8d50
[0x44378b] memmove(0x21d8d50, 0x21d3490, 4, 8, 3) = 0x21d8d50
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f63, 15, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<S-F4>", "<nop>")         = 5
[0x443652] malloc(37)                            = 0x021d8d70
[0x443d23] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d8d70, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d8d70)                      = <void>
[0x42ef16] strncmp("\200\375A", "\200\375B", 3)  = -1
[0x42ef16] strncmp("\200\375@", "\200\375B", 3)  = -2
[0x42ef16] strncmp("\200\375?", "\200\375B", 3)  = -3
[0x42ef16] strncmp("\200\375:", "\200\375B", 3)  = -8
[0x42ef16] strncmp("\200\3759", "\200\375B", 3)  = -9
[0x42ef16] strncmp("\200\3758", "\200\375B", 3)  = -10
[0x42ef16] strncmp("\200\3757", "\200\375B", 3)  = -11
[0x443652] malloc(40)                            = 0x021d8d70
[0x443652] malloc(4)                             = 0x021d8da0
[0x44378b] memmove(0x21d8da0, 0x21d3490, 4, 8, 3) = 0x21d8da0
[0x443652] malloc(4)                             = 0x021d8dc0
[0x44378b] memmove(0x21d8dc0, 0x21d3470, 4, 8, 3) = 0x21d8dc0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(13)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f72, 13, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(37)                            = 0x021d8de0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d8de0, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d8de0)                      = <void>
[0x42ecbe] strcasecmp("<END>", "<nop>")          = -9
[0x443652] malloc(31)                            = 0x021d8de0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d8de0, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d8de0)                      = <void>
[0x42ef16] strncmp("\200\375B", "\200\375;", 3)  = 7
[0x42ef16] strncmp("\200\375A", "\200\375;", 3)  = 6
[0x42ef16] strncmp("\200\375@", "\200\375;", 3)  = 5
[0x42ef16] strncmp("\200\375?", "\200\375;", 3)  = 4
[0x42ef16] strncmp("\200\375:", "\200\375;", 3)  = -1
[0x42ef16] strncmp("\200\3759", "\200\375;", 3)  = -2
[0x42ef16] strncmp("\200\3758", "\200\375;", 3)  = -3
[0x42ef16] strncmp("\200\3757", "\200\375;", 3)  = -4
[0x443652] malloc(40)                            = 0x021d8de0
[0x443652] malloc(4)                             = 0x021d8e10
[0x44378b] memmove(0x21d8e10, 0x21d3470, 4, 8, 3) = 0x21d8e10
[0x443652] malloc(4)                             = 0x021d8e30
[0x44378b] memmove(0x21d8e30, 0x21d3490, 4, 8, 3) = 0x21d8e30
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(13)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f72, 13, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(37)                            = 0x021d8e50
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d8e50, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d8e50)                      = <void>
[0x42ecbe] strcasecmp("<END>", "<nop>")          = -9
[0x443652] malloc(31)                            = 0x021d8e50
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d8e50, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d8e50)                      = <void>
[0x42ef16] strncmp("\200\375B", "\200\375;", 3)  = 7
[0x42ef16] strncmp("\200\375A", "\200\375;", 3)  = 6
[0x42ef16] strncmp("\200\375@", "\200\375;", 3)  = 5
[0x42ef16] strncmp("\200\375?", "\200\375;", 3)  = 4
[0x42ef16] strncmp("\200\375:", "\200\375;", 3)  = -1
[0x42ef16] strncmp("\200\3759", "\200\375;", 3)  = -2
[0x42ef16] strncmp("\200\3758", "\200\375;", 3)  = -3
[0x42ef16] strncmp("\200\3757", "\200\375;", 3)  = -4
[0x443652] malloc(40)                            = 0x021d8e50
[0x443652] malloc(4)                             = 0x021d8e80
[0x44378b] memmove(0x21d8e80, 0x21d3490, 4, 8, 3) = 0x21d8e80
[0x443652] malloc(4)                             = 0x021d8ea0
[0x44378b] memmove(0x21d8ea0, 0x21d3470, 4, 8, 3) = 0x21d8ea0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f7f, 15, 0x7fc3b3739728, 0x21d3460) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<HOME>", "<nop>")         = -6
[0x443652] malloc(37)                            = 0x021d8ec0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d8ec0, 4, 0x7fc3b3739728, 0) = 0x21d3490
[0x443968] free(0x021d8ec0)                      = <void>
[0x42ef16] strncmp("\200\375;", "\200\375<", 3)  = -1
[0x42ef16] strncmp("\200\375B", "\200\375<", 3)  = 6
[0x42ef16] strncmp("\200\375A", "\200\375<", 3)  = 5
[0x42ef16] strncmp("\200\375@", "\200\375<", 3)  = 4
[0x42ef16] strncmp("\200\375?", "\200\375<", 3)  = 3
[0x42ef16] strncmp("\200\375:", "\200\375<", 3)  = -2
[0x42ef16] strncmp("\200\3759", "\200\375<", 3)  = -3
[0x42ef16] strncmp("\200\3758", "\200\375<", 3)  = -4
[0x42ef16] strncmp("\200\3757", "\200\375<", 3)  = -5
[0x443652] malloc(40)                            = 0x021d8ec0
[0x443652] malloc(4)                             = 0x021d8ef0
[0x44378b] memmove(0x21d8ef0, 0x21d3470, 4, 8, 3) = 0x21d8ef0
[0x443652] malloc(4)                             = 0x021d8f10
[0x44378b] memmove(0x21d8f10, 0x21d3490, 4, 8, 3) = 0x21d8f10
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x485f7f, 15, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(43)                            = 0x021d1150
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d1150, 4, 0x7fc3b3739728, 0x21d3460) = 0x21d3490
[0x443968] free(0x021d1150)                      = <void>
[0x42ecbe] strcasecmp("<HOME>", "<nop>")         = -6
[0x443652] malloc(37)                            = 0x021d8f30
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x444090] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(4)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d8f30, 4, 0x7fc3b3739728, 0) = 0x21d3470
[0x443968] free(0x021d8f30)                      = <void>
[0x42ef16] strncmp("\200\375;", "\200\375<", 3)  = -1
[0x42ef16] strncmp("\200\375B", "\200\375<", 3)  = 6
[0x42ef16] strncmp("\200\375A", "\200\375<", 3)  = 5
[0x42ef16] strncmp("\200\375@", "\200\375<", 3)  = 4
[0x42ef16] strncmp("\200\375?", "\200\375<", 3)  = 3
[0x42ef16] strncmp("\200\375:", "\200\375<", 3)  = -2
[0x42ef16] strncmp("\200\3759", "\200\375<", 3)  = -3
[0x42ef16] strncmp("\200\3758", "\200\375<", 3)  = -4
[0x42ef16] strncmp("\200\3757", "\200\375<", 3)  = -5
[0x443652] malloc(40)                            = 0x021d8f30
[0x443652] malloc(4)                             = 0x021d8f60
[0x44378b] memmove(0x21d8f60, 0x21d3490, 4, 8, 3) = 0x21d8f60
[0x443652] malloc(4)                             = 0x021d8f80
[0x44378b] memmove(0x21d8f80, 0x21d3470, 4, 8, 3) = 0x21d8f80
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(9)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "ErrorMsg", 8)    = 0x021d3420
[0x443652] malloc(9)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3420, 9, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x46fd29] strcmp("ERRORMSG", "WILDMENU")        = -18
[0x46fd29] strcmp("ERRORMSG", "WARNINGMSG")      = -18
[0x46fd29] strcmp("ERRORMSG", "VISUALNOS")       = -17
[0x46fd29] strcmp("ERRORMSG", "VISUAL")          = -17
[0x46fd29] strcmp("ERRORMSG", "TITLE")           = -15
[0x46fd29] strcmp("ERRORMSG", "STATUSLINENC")    = -14
[0x46fd29] strcmp("ERRORMSG", "STATUSLINE")      = -14
[0x46fd29] strcmp("ERRORMSG", "QUESTION")        = -12
[0x46fd29] strcmp("ERRORMSG", "LINENR")          = -7
[0x46fd29] strcmp("ERRORMSG", "MODEMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "MOREMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "SEARCH")          = -14
[0x46fd29] strcmp("ERRORMSG", "INCSEARCH")       = -4
[0x46fd29] strcmp("ERRORMSG", "ERRORMSG")        = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "term", 4)        = 0x021d3420
[0x443652] malloc(9)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "standout", 8)    = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 8) = 5
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 8) = 10
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 1
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 10
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xfffffffe
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "ctermbg", 7)     = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "DarkRed", 7)     = 0x021d3470
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkRed", "fg")           = -2
[0x470bd0] strcasecmp("DarkRed", "bg")           = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkRed", "arkGrey")       = 11
[0x470c25] strcasecmp("arkRed", "arkGray")       = 11
[0x470c25] strcasecmp("arkRed", "arkMagenta")    = 5
[0x470c25] strcasecmp("arkRed", "arkRed")        = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "ctermfg", 7)     = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "White", 5)       = 0x021d3470
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("White", "fg")             = 17
[0x470bd0] strcasecmp("White", "bg")             = 21
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("hite", "hite")            = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "guibg", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(4)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "Red", 3)         = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "guifg", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "White", 5)       = 0x021d3470
[0x443652] malloc(168)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 168)       = 0x021d8fa0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(10)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "IncSearch", 9)   = 0x021d3470
[0x443652] malloc(10)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 10, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x46fd29] strcmp("INCSEARCH", "WILDMENU")       = -14
[0x46fd29] strcmp("INCSEARCH", "WARNINGMSG")     = -14
[0x46fd29] strcmp("INCSEARCH", "VISUALNOS")      = -13
[0x46fd29] strcmp("INCSEARCH", "VISUAL")         = -13
[0x46fd29] strcmp("INCSEARCH", "TITLE")          = -11
[0x46fd29] strcmp("INCSEARCH", "STATUSLINENC")   = -10
[0x46fd29] strcmp("INCSEARCH", "STATUSLINE")     = -10
[0x46fd29] strcmp("INCSEARCH", "QUESTION")       = -8
[0x46fd29] strcmp("INCSEARCH", "LINENR")         = -3
[0x46fd29] strcmp("INCSEARCH", "MODEMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "MOREMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "SEARCH")         = -10
[0x46fd29] strcmp("INCSEARCH", "INCSEARCH")      = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "term", 4)        = 0x021d3470
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "reverse", 7)     = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "cterm", 5)       = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "reverse", 7)     = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(4)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "gui", 3)         = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "reverse", 7)     = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "ModeMsg", 7)     = 0x021d3420
[0x443652] malloc(8)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3420, 8, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x46fd29] strcmp("MODEMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MODEMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MODEMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MODEMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MODEMSG", "TITLE")            = -7
[0x46fd29] strcmp("MODEMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MODEMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MODEMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MODEMSG", "LINENR")           = 1
[0x46fd29] strcmp("MODEMSG", "MODEMSG")          = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "term", 4)        = 0x021d3420
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "bold", 4)        = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3470, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "cterm", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "bold", 4)        = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3470, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(4)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "gui", 3)         = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "bold", 4)        = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3470, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "NonText", 7)     = 0x021d3470
[0x443652] malloc(8)                             = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 8, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x46fd29] strcmp("NONTEXT", "WILDMENU")         = -9
[0x46fd29] strcmp("NONTEXT", "WARNINGMSG")       = -9
[0x46fd29] strcmp("NONTEXT", "VISUALNOS")        = -8
[0x46fd29] strcmp("NONTEXT", "VISUAL")           = -8
[0x46fd29] strcmp("NONTEXT", "TITLE")            = -6
[0x46fd29] strcmp("NONTEXT", "STATUSLINENC")     = -5
[0x46fd29] strcmp("NONTEXT", "STATUSLINE")       = -5
[0x46fd29] strcmp("NONTEXT", "QUESTION")         = -3
[0x46fd29] strcmp("NONTEXT", "LINENR")           = 2
[0x46fd29] strcmp("NONTEXT", "MODEMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "MOREMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "SEARCH")           = -5
[0x46fd29] strcmp("NONTEXT", "INCSEARCH")        = 5
[0x46fd29] strcmp("NONTEXT", "ERRORMSG")         = 9
[0x46fd29] strcmp("NONTEXT", "DIRECTORY")        = 10
[0x46fd29] strcmp("NONTEXT", "NONTEXT")          = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "term", 4)        = 0x021d3470
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "bold", 4)        = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3420, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3420, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "ctermfg", 7)     = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "Blue", 4)        = 0x021d3420
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("Blue", "fg")              = -4
[0x470bd0] strcasecmp("Blue", "bg")              = 5
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("lue", "lue")              = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(4)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "gui", 3)         = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "bold", 4)        = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3420, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3420, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "guifg", 5)       = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "Blue", 4)        = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(11)                            = 0x021d3420
[0x4437da] strncpy(0x021d3420, "StatusLine", 10) = 0x021d3420
[0x443652] malloc(11)                            = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3420, 11, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x46fd29] strcmp("STATUSLINE", "WILDMENU")      = -4
[0x46fd29] strcmp("STATUSLINE", "WARNINGMSG")    = -4
[0x46fd29] strcmp("STATUSLINE", "VISUALNOS")     = -3
[0x46fd29] strcmp("STATUSLINE", "VISUAL")        = -3
[0x46fd29] strcmp("STATUSLINE", "TITLE")         = -1
[0x46fd29] strcmp("STATUSLINE", "STATUSLINENC")  = -78
[0x46fd29] strcmp("STATUSLINE", "STATUSLINE")    = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "term", 4)        = 0x021d3420
[0x443652] malloc(13)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "reverse,bold", 12) = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0
[0x4709a5] strncasecmp(0x21d3478, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3478, 0x48c4f1, 7, 8, 65535) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3478, 0x48c4e9, 7, 8, 65535) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3478, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3478, 0x48c4d8, 9, 10, 65535) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3478, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3478, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "cterm", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(13)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "reverse,bold", 12) = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0
[0x4709a5] strncasecmp(0x21d3478, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3478, 0x48c4f1, 7, 8, 65535) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3478, 0x48c4e9, 7, 8, 65535) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3478, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3478, 0x48c4d8, 9, 10, 65535) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3478, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3478, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(4)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "gui", 3)         = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(13)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "reverse,bold", 12) = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0
[0x4709a5] strncasecmp(0x21d3478, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3478, 0x48c4f1, 7, 8, 65535) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3478, 0x48c4e9, 7, 8, 65535) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3478, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3478, 0x48c4d8, 9, 10, 65535) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3478, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3478, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(13)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "StatusLineNC", 12) = 0x021d3470
[0x443652] malloc(13)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 13, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x46fd29] strcmp("STATUSLINENC", "WILDMENU")    = -4
[0x46fd29] strcmp("STATUSLINENC", "WARNINGMSG")  = -4
[0x46fd29] strcmp("STATUSLINENC", "VISUALNOS")   = -3
[0x46fd29] strcmp("STATUSLINENC", "VISUAL")      = -3
[0x46fd29] strcmp("STATUSLINENC", "TITLE")       = -1
[0x46fd29] strcmp("STATUSLINENC", "STATUSLINENC") = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "term", 4)        = 0x021d3470
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "reverse", 7)     = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "cterm", 5)       = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "reverse", 7)     = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(4)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "gui", 3)         = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "reverse", 7)     = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(7)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "Visual", 6)      = 0x021d3420
[0x443652] malloc(7)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3420, 7, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x46fd29] strcmp("VISUAL", "WILDMENU")          = -1
[0x46fd29] strcmp("VISUAL", "WARNINGMSG")        = -1
[0x46fd29] strcmp("VISUAL", "VISUALNOS")         = -78
[0x46fd29] strcmp("VISUAL", "VISUAL")            = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "term", 4)        = 0x021d3420
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "reverse", 7)     = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "cterm", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "reverse", 7)     = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(4)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "gui", 3)         = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "reverse", 7)     = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "guifg", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "Grey", 4)        = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "guibg", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(3)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "fg", 2)          = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(10)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "VisualNOS", 9)   = 0x021d3470
[0x443652] malloc(10)                            = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 10, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x46fd29] strcmp("VISUALNOS", "WILDMENU")       = -1
[0x46fd29] strcmp("VISUALNOS", "WARNINGMSG")     = -1
[0x46fd29] strcmp("VISUALNOS", "VISUALNOS")      = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "term", 4)        = 0x021d3470
[0x443652] malloc(15)                            = 0x021d3420
[0x4437da] strncpy(0x021d3420, "underline,bold", 14) = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 7
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 3
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e2, 6, 7, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4d8, 9, 10, 0) = 0
[0x4709a5] strncasecmp(0x21d342a, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d342a, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d342a, 0x48c4e9, 7, 8, 65535) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d342a, 0x48c4e2, 6, 7, 65535) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d342a, 0x48c4d8, 9, 10, 65535) = 0xffffffed
[0x4709a5] strncasecmp(0x21d342a, 0x48c4cf, 8, 9, 65535) = 0xffffffef
[0x4709a5] strncasecmp(0x21d342a, 0x48c4ca, 4, 5, 65535) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "cterm", 5)       = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x4437da] strncpy(0x021d3420, "underline,bold", 14) = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 7
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 3
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e2, 6, 7, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4d8, 9, 10, 0) = 0
[0x4709a5] strncasecmp(0x21d342a, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d342a, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d342a, 0x48c4e9, 7, 8, 65535) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d342a, 0x48c4e2, 6, 7, 65535) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d342a, 0x48c4d8, 9, 10, 65535) = 0xffffffed
[0x4709a5] strncasecmp(0x21d342a, 0x48c4cf, 8, 9, 65535) = 0xffffffef
[0x4709a5] strncasecmp(0x21d342a, 0x48c4ca, 4, 5, 65535) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(4)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "gui", 3)         = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(15)                            = 0x021d3420
[0x4437da] strncpy(0x021d3420, "underline,bold", 14) = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 7
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 3
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e2, 6, 7, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4d8, 9, 10, 0) = 0
[0x4709a5] strncasecmp(0x21d342a, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d342a, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d342a, 0x48c4e9, 7, 8, 65535) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d342a, 0x48c4e2, 6, 7, 65535) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d342a, 0x48c4d8, 9, 10, 65535) = 0xffffffed
[0x4709a5] strncasecmp(0x21d342a, 0x48c4cf, 8, 9, 65535) = 0xffffffef
[0x4709a5] strncasecmp(0x21d342a, 0x48c4ca, 4, 5, 65535) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x471239] __ctype_tolower_loc()                 = 0x7fc3b3b606b0
[0x443652] malloc(10)                            = 0x021d3420
[0x4437da] strncpy(0x021d3420, "Directory", 9)   = 0x021d3420
[0x443652] malloc(10)                            = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3420, 10, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x46fd29] strcmp("DIRECTORY", "WILDMENU")       = -19
[0x46fd29] strcmp("DIRECTORY", "WARNINGMSG")     = -19
[0x46fd29] strcmp("DIRECTORY", "VISUALNOS")      = -18
[0x46fd29] strcmp("DIRECTORY", "VISUAL")         = -18
[0x46fd29] strcmp("DIRECTORY", "TITLE")          = -16
[0x46fd29] strcmp("DIRECTORY", "STATUSLINENC")   = -15
[0x46fd29] strcmp("DIRECTORY", "STATUSLINE")     = -15
[0x46fd29] strcmp("DIRECTORY", "QUESTION")       = -13
[0x46fd29] strcmp("DIRECTORY", "LINENR")         = -8
[0x46fd29] strcmp("DIRECTORY", "MODEMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "MOREMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "SEARCH")         = -15
[0x46fd29] strcmp("DIRECTORY", "INCSEARCH")      = -5
[0x46fd29] strcmp("DIRECTORY", "ERRORMSG")       = -1
[0x46fd29] strcmp("DIRECTORY", "DIRECTORY")      = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "term", 4)        = 0x021d3420
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "bold", 4)        = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3470, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "ctermfg", 7)     = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(9)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "DarkBlue", 8)    = 0x021d3470
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkBlue", "fg")          = -2
[0x470bd0] strcasecmp("DarkBlue", "bg")          = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkBlue", "arkGrey")      = -5
[0x470c25] strcasecmp("arkBlue", "arkGray")      = -5
[0x470c25] strcasecmp("arkBlue", "arkMagenta")   = -11
[0x470c25] strcasecmp("arkBlue", "arkRed")       = -16
[0x470c25] strcasecmp("arkBlue", "arkCyan")      = -1
[0x470c25] strcasecmp("arkBlue", "arkGreen")     = -5
[0x470c25] strcasecmp("arkBlue", "arkBlue")      = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 65535)     = 8
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "guifg", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "Blue", 4)        = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(7)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "LineNr", 6)      = 0x021d3470
[0x443652] malloc(7)                             = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 7, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x46fd29] strcmp("LINENR", "WILDMENU")          = -11
[0x46fd29] strcmp("LINENR", "WARNINGMSG")        = -11
[0x46fd29] strcmp("LINENR", "VISUALNOS")         = -10
[0x46fd29] strcmp("LINENR", "VISUAL")            = -10
[0x46fd29] strcmp("LINENR", "TITLE")             = -8
[0x46fd29] strcmp("LINENR", "STATUSLINENC")      = -7
[0x46fd29] strcmp("LINENR", "STATUSLINE")        = -7
[0x46fd29] strcmp("LINENR", "QUESTION")          = -5
[0x46fd29] strcmp("LINENR", "LINENR")            = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "term", 4)        = 0x021d3470
[0x443652] malloc(10)                            = 0x021d3420
[0x4437da] strncpy(0x021d3420, "underline", 9)   = 0x021d3420
[0x4709a5] strncasecmp(0x21d3420, 0x48c4c5, 4, 5, 0) = 7
[0x4709a5] strncasecmp(0x21d3420, 0x48c4f1, 7, 8, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e9, 7, 8, 0) = 3
[0x4709a5] strncasecmp(0x21d3420, 0x48c4e2, 6, 7, 0) = 12
[0x4709a5] strncasecmp(0x21d3420, 0x48c4d8, 9, 10, 0) = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(8)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "ctermfg", 7)     = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "Brown", 5)       = 0x021d3420
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("Brown", "fg")             = -4
[0x470bd0] strcasecmp("Brown", "bg")             = 11
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("rown", "lue")             = 6
[0x470c25] strcasecmp("rown", "rown")            = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(6)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "guifg", 5)       = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "Brown", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "MoreMsg", 7)     = 0x021d3420
[0x443652] malloc(8)                             = 0x021d3470
[0x44378b] memmove(0x21d3470, 0x21d3420, 8, 0x7fc3b3739728, 0x21d3480) = 0x21d3470
[0x46fd29] strcmp("MOREMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MOREMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MOREMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MOREMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MOREMSG", "TITLE")            = -7
[0x46fd29] strcmp("MOREMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MOREMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MOREMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MOREMSG", "LINENR")           = 1
[0x46fd29] strcmp("MOREMSG", "MODEMSG")          = 14
[0x46fd29] strcmp("MOREMSG", "MOREMSG")          = 0
[0x443968] free(0x021d3470)                      = <void>
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(5)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "term", 4)        = 0x021d3420
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "bold", 4)        = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3470, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(8)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "ctermfg", 7)     = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(10)                            = 0x021d3470
[0x4437da] strncpy(0x021d3470, "DarkGreen", 9)   = 0x021d3470
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkGreen", "fg")         = -2
[0x470bd0] strcasecmp("DarkGreen", "bg")         = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkGreen", "arkGrey")     = -20
[0x470c25] strcasecmp("arkGreen", "arkGray")     = 4
[0x470c25] strcasecmp("arkGreen", "arkMagenta")  = -6
[0x470c25] strcasecmp("arkGreen", "arkRed")      = -11
[0x470c25] strcasecmp("arkGreen", "arkCyan")     = 4
[0x470c25] strcasecmp("arkGreen", "arkGreen")    = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(4)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "gui", 3)         = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(5)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "bold", 4)        = 0x021d3470
[0x4709a5] strncasecmp(0x21d3470, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3470, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3470, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3470, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3470, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3470, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(6)                             = 0x021d3420
[0x4437da] strncpy(0x021d3420, "guifg", 5)       = 0x021d3420
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(9)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "SeaGreen", 8)    = 0x021d3470
[0x443968] free(0x021d3420)                      = <void>
[0x443968] free(0x021d3470)                      = <void>
[0x443652] malloc(7)                             = 0x021d3470
[0x4437da] strncpy(0x021d3470, "Normal", 6)      = 0x021d3470
[0x443652] malloc(7)                             = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 7, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x46fd29] strcmp("NORMAL", "WILDMENU")          = -9
[0x46fd29] strcmp("NORMAL", "WARNINGMSG")        = -9
[0x46fd29] strcmp("NORMAL", "VISUALNOS")         = -8
[0x46fd29] strcmp("NORMAL", "VISUAL")            = -8
[0x46fd29] strcmp("NORMAL", "TITLE")             = -6
[0x46fd29] strcmp("NORMAL", "STATUSLINENC")      = -5
[0x46fd29] strcmp("NORMAL", "STATUSLINE")        = -5
[0x46fd29] strcmp("NORMAL", "QUESTION")          = -3
[0x46fd29] strcmp("NORMAL", "LINENR")            = 2
[0x46fd29] strcmp("NORMAL", "MODEMSG")           = 1
[0x46fd29] strcmp("NORMAL", "MOREMSG")           = 1
[0x46fd29] strcmp("NORMAL", "SEARCH")            = -5
[0x46fd29] strcmp("NORMAL", "INCSEARCH")         = 5
[0x46fd29] strcmp("NORMAL", "ERRORMSG")          = 9
[0x46fd29] strcmp("NORMAL", "DIRECTORY")         = 10
[0x46fd29] strcmp("NORMAL", "NONTEXT")           = 4
[0x46fd29] strcmp("NORMAL", "SPECIALKEY")        = -5
[0x443968] free(0x021d3420)                      = <void>
[0x443652] malloc(7)                             = 0x021d3420
[0x44378b] memmove(0x21d3420, 0x21d3470, 7, 0x7fc3b3739728, 0x21d3480) = 0x21d3420
[0x443652] malloc(4)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "gui", 3)         = 0x021d3490
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "NONE", 4)        = 0x021d9050
[0x4709a5] strncasecmp(0x21d9050, 0x48c4c5, 4, 5, 0) = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(9)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Question", 8)    = 0x021d9050
[0x443652] malloc(9)                             = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d9050, 9, 0x7fc3b3739728, 0) = 0x21d3490
[0x46fd29] strcmp("QUESTION", "NORMAL")          = 3
[0x46fd29] strcmp("QUESTION", "WILDMENU")        = -6
[0x46fd29] strcmp("QUESTION", "WARNINGMSG")      = -6
[0x46fd29] strcmp("QUESTION", "VISUALNOS")       = -5
[0x46fd29] strcmp("QUESTION", "VISUAL")          = -5
[0x46fd29] strcmp("QUESTION", "TITLE")           = -3
[0x46fd29] strcmp("QUESTION", "STATUSLINENC")    = -2
[0x46fd29] strcmp("QUESTION", "STATUSLINE")      = -2
[0x46fd29] strcmp("QUESTION", "QUESTION")        = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "term", 4)        = 0x021d9050
[0x443652] malloc(9)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "standout", 8)    = 0x021d3490
[0x4709a5] strncasecmp(0x21d3490, 0x48c4c5, 4, 5, 8) = 5
[0x4709a5] strncasecmp(0x21d3490, 0x48c4f1, 7, 8, 8) = 10
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e9, 7, 8, 0) = 1
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e2, 6, 7, 0) = 10
[0x4709a5] strncasecmp(0x21d3490, 0x48c4d8, 9, 10, 0) = 0xfffffffe
[0x4709a5] strncasecmp(0x21d3490, 0x48c4cf, 8, 9, 0) = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(8)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "ctermfg", 7)     = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(10)                            = 0x021d3490
[0x4437da] strncpy(0x021d3490, "DarkGreen", 9)   = 0x021d3490
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkGreen", "fg")         = -2
[0x470bd0] strcasecmp("DarkGreen", "bg")         = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkGreen", "arkGrey")     = -20
[0x470c25] strcasecmp("arkGreen", "arkGray")     = 4
[0x470c25] strcasecmp("arkGreen", "arkMagenta")  = -6
[0x470c25] strcasecmp("arkGreen", "arkRed")      = -11
[0x470c25] strcasecmp("arkGreen", "arkCyan")     = 4
[0x470c25] strcasecmp("arkGreen", "arkGreen")    = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(4)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "gui", 3)         = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "bold", 4)        = 0x021d3490
[0x4709a5] strncasecmp(0x21d3490, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3490, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3490, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3490, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3490, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(6)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "guifg", 5)       = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(9)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "SeaGreen", 8)    = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(7)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "Search", 6)      = 0x021d3490
[0x443652] malloc(7)                             = 0x021d9050
[0x44378b] memmove(0x21d9050, 0x21d3490, 7, 0x7fc3b3739728, 0) = 0x21d9050
[0x46fd29] strcmp("SEARCH", "NORMAL")            = 5
[0x46fd29] strcmp("SEARCH", "WILDMENU")          = -4
[0x46fd29] strcmp("SEARCH", "WARNINGMSG")        = -4
[0x46fd29] strcmp("SEARCH", "VISUALNOS")         = -3
[0x46fd29] strcmp("SEARCH", "VISUAL")            = -3
[0x46fd29] strcmp("SEARCH", "TITLE")             = -1
[0x46fd29] strcmp("SEARCH", "STATUSLINENC")      = -15
[0x46fd29] strcmp("SEARCH", "STATUSLINE")        = -15
[0x46fd29] strcmp("SEARCH", "QUESTION")          = 2
[0x46fd29] strcmp("SEARCH", "LINENR")            = 7
[0x46fd29] strcmp("SEARCH", "MODEMSG")           = 6
[0x46fd29] strcmp("SEARCH", "MOREMSG")           = 6
[0x46fd29] strcmp("SEARCH", "SEARCH")            = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "term", 4)        = 0x021d3490
[0x443652] malloc(8)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "reverse", 7)     = 0x021d9050
[0x4709a5] strncasecmp(0x21d9050, 0x48c4c5, 4, 5, 0) = 4
[0x4709a5] strncasecmp(0x21d9050, 0x48c4f1, 7, 8, 0) = 9
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e9, 7, 8, 0) = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(8)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "ctermbg", 7)     = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(7)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Yellow", 6)      = 0x021d9050
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("Yellow", "fg")            = 19
[0x470bd0] strcasecmp("Yellow", "bg")            = 23
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("ellow", "ellow")          = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(8)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "ctermfg", 7)     = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "NONE", 4)        = 0x021d9050
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("NONE", "fg")              = 8
[0x470bd0] strcasecmp("NONE", "bg")              = 12
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("ONE", "ONE")              = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(6)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "guibg", 5)       = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(7)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Yellow", 6)      = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(6)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "guifg", 5)       = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "NONE", 4)        = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(11)                            = 0x021d9050
[0x4437da] strncpy(0x021d9050, "SpecialKey", 10) = 0x021d9050
[0x443652] malloc(11)                            = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d9050, 11, 0x7fc3b3739728, 0) = 0x21d3490
[0x46fd29] strcmp("SPECIALKEY", "NORMAL")        = 5
[0x46fd29] strcmp("SPECIALKEY", "WILDMENU")      = -4
[0x46fd29] strcmp("SPECIALKEY", "WARNINGMSG")    = -4
[0x46fd29] strcmp("SPECIALKEY", "VISUALNOS")     = -3
[0x46fd29] strcmp("SPECIALKEY", "VISUAL")        = -3
[0x46fd29] strcmp("SPECIALKEY", "TITLE")         = -1
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINENC")  = -4
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINE")    = -4
[0x46fd29] strcmp("SPECIALKEY", "QUESTION")      = 2
[0x46fd29] strcmp("SPECIALKEY", "LINENR")        = 7
[0x46fd29] strcmp("SPECIALKEY", "MODEMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "MOREMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "SEARCH")        = 11
[0x46fd29] strcmp("SPECIALKEY", "INCSEARCH")     = 10
[0x46fd29] strcmp("SPECIALKEY", "ERRORMSG")      = 14
[0x46fd29] strcmp("SPECIALKEY", "DIRECTORY")     = 15
[0x46fd29] strcmp("SPECIALKEY", "NONTEXT")       = 5
[0x46fd29] strcmp("SPECIALKEY", "SPECIALKEY")    = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "term", 4)        = 0x021d9050
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "bold", 4)        = 0x021d3490
[0x4709a5] strncasecmp(0x21d3490, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d3490, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d3490, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d3490, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d3490, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(8)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "ctermfg", 7)     = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(9)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "DarkBlue", 8)    = 0x021d3490
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkBlue", "fg")          = -2
[0x470bd0] strcasecmp("DarkBlue", "bg")          = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkBlue", "arkGrey")      = -5
[0x470c25] strcasecmp("arkBlue", "arkGray")      = -5
[0x470c25] strcasecmp("arkBlue", "arkMagenta")   = -11
[0x470c25] strcasecmp("arkBlue", "arkRed")       = -16
[0x470c25] strcasecmp("arkBlue", "arkCyan")      = -1
[0x470c25] strcasecmp("arkBlue", "arkGreen")     = -5
[0x470c25] strcasecmp("arkBlue", "arkBlue")      = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(6)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "guifg", 5)       = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "Blue", 4)        = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(6)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "Title", 5)       = 0x021d3490
[0x443652] malloc(6)                             = 0x021d9050
[0x44378b] memmove(0x21d9050, 0x21d3490, 6, 0x7fc3b3739728, 0) = 0x21d9050
[0x46fd29] strcmp("TITLE", "NORMAL")             = 6
[0x46fd29] strcmp("TITLE", "WILDMENU")           = -3
[0x46fd29] strcmp("TITLE", "WARNINGMSG")         = -3
[0x46fd29] strcmp("TITLE", "VISUALNOS")          = -2
[0x46fd29] strcmp("TITLE", "VISUAL")             = -2
[0x46fd29] strcmp("TITLE", "TITLE")              = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "term", 4)        = 0x021d3490
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "bold", 4)        = 0x021d9050
[0x4709a5] strncasecmp(0x21d9050, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d9050, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d9050, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d9050, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d9050, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(8)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "ctermfg", 7)     = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(12)                            = 0x021d9050
[0x4437da] strncpy(0x021d9050, "DarkMagenta", 11) = 0x021d9050
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkMagenta", "fg")       = -2
[0x470bd0] strcasecmp("DarkMagenta", "bg")       = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkMagenta", "arkGrey")   = 6
[0x470c25] strcasecmp("arkMagenta", "arkGray")   = 6
[0x470c25] strcasecmp("arkMagenta", "arkMagenta") = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(4)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "gui", 3)         = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "bold", 4)        = 0x021d9050
[0x4709a5] strncasecmp(0x21d9050, 0x48c4c5, 4, 5, 0) = 0xfffffff4
[0x4709a5] strncasecmp(0x21d9050, 0x48c4f1, 7, 8, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e9, 7, 8, 0) = 0xfffffff0
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e2, 6, 7, 0) = 0xfffffff9
[0x4709a5] strncasecmp(0x21d9050, 0x48c4d8, 9, 10, 0) = 0xffffffed
[0x4709a5] strncasecmp(0x21d9050, 0x48c4cf, 8, 9, 0) = 0xffffffef
[0x4709a5] strncasecmp(0x21d9050, 0x48c4ca, 4, 5, 0) = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(6)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "guifg", 5)       = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(8)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Magenta", 7)     = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(11)                            = 0x021d9050
[0x4437da] strncpy(0x021d9050, "WarningMsg", 10) = 0x021d9050
[0x443652] malloc(11)                            = 0x021d3490
[0x44378b] memmove(0x21d3490, 0x21d9050, 11, 0x7fc3b3739728, 0) = 0x21d3490
[0x46fd29] strcmp("WARNINGMSG", "NORMAL")        = 9
[0x46fd29] strcmp("WARNINGMSG", "WILDMENU")      = -8
[0x46fd29] strcmp("WARNINGMSG", "WARNINGMSG")    = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(5)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "term", 4)        = 0x021d9050
[0x443652] malloc(9)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "standout", 8)    = 0x021d3490
[0x4709a5] strncasecmp(0x21d3490, 0x48c4c5, 4, 5, 8) = 5
[0x4709a5] strncasecmp(0x21d3490, 0x48c4f1, 7, 8, 8) = 10
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e9, 7, 8, 0) = 1
[0x4709a5] strncasecmp(0x21d3490, 0x48c4e2, 6, 7, 0) = 10
[0x4709a5] strncasecmp(0x21d3490, 0x48c4d8, 9, 10, 0) = 0xfffffffe
[0x4709a5] strncasecmp(0x21d3490, 0x48c4cf, 8, 9, 0) = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(8)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "ctermfg", 7)     = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(8)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "DarkRed", 7)     = 0x021d3490
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("DarkRed", "fg")           = -2
[0x470bd0] strcasecmp("DarkRed", "bg")           = 2
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("arkRed", "arkGrey")       = 11
[0x470c25] strcasecmp("arkRed", "arkGray")       = 11
[0x470c25] strcasecmp("arkRed", "arkMagenta")    = 5
[0x470c25] strcasecmp("arkRed", "arkRed")        = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(6)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "guifg", 5)       = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(4)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "Red", 3)         = 0x021d3490
[0x443652] malloc(336)                           = 0x021d9070
[0x44371c] memset(0x021d9070, '\000', 336)       = 0x021d9070
[0x443c2d] memmove(0x21d9070, 0x21d8fa0, 168, -25, 80) = 0x21d9070
[0x443968] free(0x021d8fa0)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(9)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "WildMenu", 8)    = 0x021d3490
[0x443652] malloc(9)                             = 0x021d9050
[0x44378b] memmove(0x21d9050, 0x21d3490, 9, 0x7fc3b3739728, 0) = 0x21d9050
[0x46fd29] strcmp("WILDMENU", "NORMAL")          = 9
[0x46fd29] strcmp("WILDMENU", "WILDMENU")        = 0
[0x443968] free(0x021d9050)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "term", 4)        = 0x021d3490
[0x443652] malloc(9)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "standout", 8)    = 0x021d9050
[0x4709a5] strncasecmp(0x21d9050, 0x48c4c5, 4, 5, 8) = 5
[0x4709a5] strncasecmp(0x21d9050, 0x48c4f1, 7, 8, 8) = 10
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e9, 7, 8, 0) = 1
[0x4709a5] strncasecmp(0x21d9050, 0x48c4e2, 6, 7, 0) = 10
[0x4709a5] strncasecmp(0x21d9050, 0x48c4d8, 9, 10, 0) = 0xfffffffe
[0x4709a5] strncasecmp(0x21d9050, 0x48c4cf, 8, 9, 0) = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(8)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "ctermbg", 7)     = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(7)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Yellow", 6)      = 0x021d9050
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("Yellow", "fg")            = 19
[0x470bd0] strcasecmp("Yellow", "bg")            = 23
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("ellow", "ellow")          = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(8)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "ctermfg", 7)     = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(6)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Black", 5)       = 0x021d9050
[0x470b6a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x470b9e] strcasecmp("Black", "fg")             = -4
[0x470bd0] strcasecmp("Black", "bg")             = 5
[0x470bfa] __ctype_toupper_loc()                 = 0x7fc3b3b606a8
[0x470c25] strcasecmp("lack", "lue")             = -20
[0x470c25] strcasecmp("lack", "rown")            = -6
[0x470c25] strcasecmp("lack", "lack")            = 0
[0x470c6b] strtol(0x6a9c40, 0, 10, 0, 0)         = 8
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(6)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "guibg", 5)       = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(7)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Yellow", 6)      = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443652] malloc(6)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "guifg", 5)       = 0x021d3490
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(6)                             = 0x021d9050
[0x4437da] strncpy(0x021d9050, "Black", 5)       = 0x021d9050
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d9050)                      = <void>
[0x443652] malloc(1024)                          = 0x021d91d0
[0x421adc] fopen("/home/almohri/.vimrc", "r")    = 0x21d95e0
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214773, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214697, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214618, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214542, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214463, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214389, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214366, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214365, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214292, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214218, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214197, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214196, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214139, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291214060, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213986, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213970, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213969, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213892, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213845, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213828, 0x21d96c0)     = 0x021d8fa0
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("insert", "if has("syntax")", 2) = 8
[0x41d6e6] strncmp("iabbrev", "if has("syntax")", 2) = -5
[0x41d6e6] strncmp("iabclear", "if has("syntax")", 2) = -5
[0x41d6e6] strncmp("if", "if has("syntax")", 2)  = 0
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x443652] malloc(7)                             = 0x021d3490
[0x410d72] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40ed63] strcmp("has", "histdel")              = -8
[0x40ed63] strcmp("has", "delete")               = 4
[0x40ed63] strcmp("has", "getftime")             = 1
[0x40ed63] strcmp("has", "glob")                 = 1
[0x40ed63] strcmp("has", "highlightID")          = -8
[0x40ed63] strcmp("has", "has")                  = 0
[0x40ff43] strcasecmp("syntax", "unix")          = -2
[0x40ff43] strcasecmp("syntax", "fname_case")    = 13
[0x40ff43] strcasecmp("syntax", "autocmd")       = 18
[0x40ff43] strcasecmp("syntax", "builtin_terms") = 17
[0x40ff43] strcasecmp("syntax", "byte_offset")   = 17
[0x40ff43] strcasecmp("syntax", "cindent")       = 16
[0x40ff43] strcasecmp("syntax", "cmdline_compl") = 16
[0x40ff43] strcasecmp("syntax", "comments")      = 16
[0x40ff43] strcasecmp("syntax", "cryptv")        = 16
[0x40ff43] strcasecmp("syntax", "dialog_con")    = 15
[0x40ff43] strcasecmp("syntax", "digraphs")      = 15
[0x40ff43] strcasecmp("syntax", "eval")          = 14
[0x40ff43] strcasecmp("syntax", "ex_extra")      = 14
[0x40ff43] strcasecmp("syntax", "extra_search")  = 14
[0x40ff43] strcasecmp("syntax", "file_in_path")  = 13
[0x40ff43] strcasecmp("syntax", "find_in_path")  = 13
[0x40ff43] strcasecmp("syntax", "fork")          = 13
[0x40ff43] strcasecmp("syntax", "insert_expand") = 10
[0x40ff43] strcasecmp("syntax", "linebreak")     = 7
[0x40ff43] strcasecmp("syntax", "lispindent")    = 7
[0x40ff43] strcasecmp("syntax", "menu")          = 6
[0x40ff43] strcasecmp("syntax", "mksession")     = 6
[0x40ff43] strcasecmp("syntax", "modify_fname")  = 6
[0x40ff43] strcasecmp("syntax", "mouse")         = 6
[0x40ff43] strcasecmp("syntax", "mouse_xterm")   = 6
[0x40ff43] strcasecmp("syntax", "quickfix")      = 2
[0x40ff43] strcasecmp("syntax", "scrollbind")    = 22
[0x40ff43] strcasecmp("syntax", "showcmd")       = 17
[0x40ff43] strcasecmp("syntax", "cmdline_info")  = 16
[0x40ff43] strcasecmp("syntax", "smartindent")   = 12
[0x40ff43] strcasecmp("syntax", "statusline")    = 5
[0x40ff43] strcasecmp("syntax", "syntax")        = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213816, 0x21d96c0)     = 0x021d8fa0
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("substitute", "syntax on", 6) = -4
[0x41d6e6] strncmp("sNext", "syntax on", 6)      = -43
[0x41d6e6] strncmp("sargument", "syntax on", 6)  = -24
[0x41d6e6] strncmp("sall", "syntax on", 6)       = -24
[0x41d6e6] strncmp("sbuffer", "syntax on", 6)    = -23
[0x41d6e6] strncmp("sbNext", "syntax on", 6)     = -23
[0x41d6e6] strncmp("sball", "syntax on", 6)      = -23
[0x41d6e6] strncmp("sblast", "syntax on", 6)     = -23
[0x41d6e6] strncmp("sbmodified", "syntax on", 6) = -23
[0x41d6e6] strncmp("sbnext", "syntax on", 6)     = -23
[0x41d6e6] strncmp("sbprevious", "syntax on", 6) = -23
[0x41d6e6] strncmp("sbrewind", "syntax on", 6)   = -23
[0x41d6e6] strncmp("set", "syntax on", 6)        = -20
[0x41d6e6] strncmp("sfind", "syntax on", 6)      = -19
[0x41d6e6] strncmp("shell", "syntax on", 6)      = -17
[0x41d6e6] strncmp("sleep", "syntax on", 6)      = -13
[0x41d6e6] strncmp("slast", "syntax on", 6)      = -13
[0x41d6e6] strncmp("smagic", "syntax on", 6)     = -12
[0x41d6e6] strncmp("snext", "syntax on", 6)      = -11
[0x41d6e6] strncmp("sniff", "syntax on", 6)      = -11
[0x41d6e6] strncmp("snomagic", "syntax on", 6)   = -11
[0x41d6e6] strncmp("source", "syntax on", 6)     = -10
[0x41d6e6] strncmp("split", "syntax on", 6)      = -9
[0x41d6e6] strncmp("sprevious", "syntax on", 6)  = -9
[0x41d6e6] strncmp("srewind", "syntax on", 6)    = -7
[0x41d6e6] strncmp("stop", "syntax on", 6)       = -5
[0x41d6e6] strncmp("stag", "syntax on", 6)       = -5
[0x41d6e6] strncmp("startinsert", "syntax on", 6) = -5
[0x41d6e6] strncmp("stjump", "syntax on", 6)     = -5
[0x41d6e6] strncmp("stselect", "syntax on", 6)   = -5
[0x41d6e6] strncmp("sunhide", "syntax on", 6)    = -4
[0x41d6e6] strncmp("suspend", "syntax on", 6)    = -4
[0x41d6e6] strncmp("sview", "syntax on", 6)      = -3
[0x41d6e6] strncmp("swapname", "syntax on", 6)   = -2
[0x41d6e6] strncmp("syntax", "syntax on", 6)     = 0
[0x46f95d] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x443652] malloc(3)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "on", 2)          = 0x021d3490
[0x46f9bf] strcmp("on", "case")                  = 12
[0x46f9bf] strcmp("on", "clear")                 = 12
[0x46f9bf] strcmp("on", "cluster")               = 12
[0x46f9bf] strcmp("on", "include")               = 6
[0x46f9bf] strcmp("on", "keyword")               = 4
[0x46f9bf] strcmp("on", "list")                  = 3
[0x46f9bf] strcmp("on", "manual")                = 2
[0x46f9bf] strcmp("on", "match")                 = 2
[0x46f9bf] strcmp("on", "on")                    = 0
[0x46f781] __sprintf_chk(0x7ffff30fc4b3, 1, 97, 0x48c1fc, 0x48e5b2) = 29
[0x443652] malloc(33)                            = 0x021d1150
[0x44378b] memmove(0x21d1150, 0x7ffff30fc4b0, 33, 0x7fc3b37397a8, 0) = 0x21d1150
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("substitute", "so $VIMRUNTIME/syntax/syntax.vim", 2) = 6
[0x41d6e6] strncmp("sNext", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -33
[0x41d6e6] strncmp("sargument", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -14
[0x41d6e6] strncmp("sall", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -14
[0x41d6e6] strncmp("sbuffer", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sbNext", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sball", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sblast", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sbmodified", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sbnext", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sbprevious", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("sbrewind", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -13
[0x41d6e6] strncmp("set", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -10
[0x41d6e6] strncmp("sfind", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -9
[0x41d6e6] strncmp("shell", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -7
[0x41d6e6] strncmp("sleep", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -3
[0x41d6e6] strncmp("slast", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -3
[0x41d6e6] strncmp("smagic", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -2
[0x41d6e6] strncmp("snext", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -1
[0x41d6e6] strncmp("sniff", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -1
[0x41d6e6] strncmp("snomagic", "so $VIMRUNTIME/syntax/syntax.vim", 2) = -1
[0x41d6e6] strncmp("source", "so $VIMRUNTIME/syntax/syntax.vim", 2) = 0
[0x440889] getenv("VIMRUNTIME")                  = "/vim/source/share/vim"
[0x440c1a] strcpy(0x021d03f0, "/vim/source/share/vim") = 0x021d03f0
[0x443652] malloc(74)                            = 0x021d9820
[0x419247] memmove(0x21d9820, 0x21d1150, 3, 16384, 3) = 0x21d9820
[0x419257] memmove(0x21d9823, 0x21d03f0, 39, 8303, 3) = 0x21d9823
[0x419276] strcpy(0x021d984a, "")                = 0x021d984a
[0x443968] free(0x021d1150)                      = <void>
[0x443652] malloc(1024)                          = 0x021d9880
[0x421adc] fopen("/vim/source/share/vim/syntax/syn"..., "r") = 0
[0x443968] free(0x021d9880)                      = <void>
[0x43c547] __sprintf_chk(0x21cffe0, 1, -1, 0x6a1a70, 0x21d9823) = 55
[0x443652] malloc(56)                            = 0x021d1150
[0x44378b] memmove(0x21d1150, 0x21cffe0, 56, -57, 4) = 0x21d1150
[0x443652] malloc(55)                            = 0x021d9880
[0x43c3c1] __sprintf_chk(0x21d9880, 1, -1, 0x487e70, 0x21d91d0) = 53
[0x443652] malloc(24)                            = 0x021d98c0
[0x443652] malloc(54)                            = 0x021d98e0
[0x4437da] strncpy(0x021d98e0, "Error detected while processing "..., 53) = 0x021d98e0
[0x43b18c] fputs("E", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("o", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("d", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("t", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("c", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("t", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("d", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("w", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("h", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("l", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("p", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("o", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("c", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("s", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("s", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("n", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("g", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("h", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("o", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("m", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("a", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("l", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("m", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("o", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("h", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(".", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("v", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("m", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("c", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(":", 0x7fc3b373a180)            = 1
[0x47849c] tputs("\033[J", 1, 0x004783ae)        = 0
[0x457e93] write(1, "\033[?25l\033[J", 9)        = 9
[0x43c3f6] __sprintf_chk(0x21d9880, 1, -1, 0x487d88, 21) = 10
[0x443652] malloc(24)                            = 0x021d9920
[0x443652] malloc(11)                            = 0x021d9940
[0x4437da] strncpy(0x021d9940, "line   21:", 10) = 0x021d9940
[0x43b18c] fputs("\r\n", 0x7fc3b373a180)         = 1
[0x43b18c] fputs("l", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("n", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("2", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("1", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(":", 0x7fc3b373a180)            = 1
[0x47849c] tputs("\033[J", 1, 0x004783ae)        = 0
[0x457e93] write(1, "\033[J", 3)                 = 3
[0x443968] free(0x021d9880)                      = <void>
[0x443652] malloc(21)                            = 0x021d9960
[0x44378b] memmove(0x21d9960, 0x21d91d0, 21, 8, 3) = 0x21d9960
[0x443652] malloc(24)                            = 0x021d9980
[0x443652] malloc(56)                            = 0x021d9880
[0x4437da] strncpy(0x021d9880, "Can't open file /vim/source/shar"..., 55) = 0x021d9880
[0x43b18c] fputs("\r\n", 0x7fc3b373a180)         = 1
[0x43b18c] fputs("C", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("a", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("n", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("'", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("t", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("o", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("p", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("n", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("f", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("l", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(" ", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("v", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("m", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("s", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("o", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("u", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("c", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("s", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("h", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("a", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("r", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("e", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("v", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("m", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("s", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("y", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("n", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("t", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("a", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("x", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("/", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("s", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("y", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("n", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("t", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("a", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("x", 0x7fc3b373a180)            = 1
[0x43b18c] fputs(".", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("v", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("i", 0x7fc3b373a180)            = 1
[0x43b18c] fputs("m", 0x7fc3b373a180)            = 1
[0x47849c] tputs("\033[J", 1, 0x004783ae)        = 0
[0x457e93] write(1, "\033[J", 3)                 = 3
[0x443968] free(0x021d9820)                      = <void>
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213810, 0x21d96c0)     = 0x021d8fa0
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("edit", "endif", 5)           = -10
[0x41d6e6] strncmp("echo", "endif", 5)           = -11
[0x41d6e6] strncmp("echohl", "endif", 5)         = -11
[0x41d6e6] strncmp("echon", "endif", 5)          = -11
[0x41d6e6] strncmp("else", "endif", 5)           = -2
[0x41d6e6] strncmp("elseif", "endif", 5)         = -2
[0x41d6e6] strncmp("emenu", "endif", 5)          = -1
[0x41d6e6] strncmp("endif", "endif", 5)          = 0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213809, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213732, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213702, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213681, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213680, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213611, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213592, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213573, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213477, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213470, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213469, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213396, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213358, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213339, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213310, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213303, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213302, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213234, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213167, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213112, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213070, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291213022, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212981, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212944, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212870, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212807, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212760, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212759, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212709, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212669, 0x21d96c0)     = 0x021d8fa0
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("insert", "if filereadable("/etc/vim/vimrc."..., 2) = 8
[0x41d6e6] strncmp("iabbrev", "if filereadable("/etc/vim/vimrc."..., 2) = -5
[0x41d6e6] strncmp("iabclear", "if filereadable("/etc/vim/vimrc."..., 2) = -5
[0x41d6e6] strncmp("if", "if filereadable("/etc/vim/vimrc."..., 2) = 0
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40e5a9] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x443652] malloc(21)                            = 0x021d3490
[0x410d72] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x40ed63] strcmp("filereadable", "histdel")     = -2
[0x40ed63] strcmp("filereadable", "delete")      = 2
[0x40ed63] strcmp("filereadable", "getftime")    = -1
[0x40ed63] strcmp("filereadable", "expand")      = 1
[0x40ed63] strcmp("filereadable", "filereadable") = 0
[0x45890d] __xstat(1, "/etc/vim/vimrc.local", 0x7ffff30fbe30) = -1
[0x410060] fopen("/etc/vim/vimrc.local", "r")    = 0
[0x443968] free(0x021d3490)                      = <void>
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212639, 0x21d96c0)     = 0x021d8fa0
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("substitute", "source /etc/vim/vimrc.local", 6) = 6
[0x41d6e6] strncmp("sNext", "source /etc/vim/vimrc.local", 6) = -33
[0x41d6e6] strncmp("sargument", "source /etc/vim/vimrc.local", 6) = -14
[0x41d6e6] strncmp("sall", "source /etc/vim/vimrc.local", 6) = -14
[0x41d6e6] strncmp("sbuffer", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sbNext", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sball", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sblast", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sbmodified", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sbnext", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sbprevious", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("sbrewind", "source /etc/vim/vimrc.local", 6) = -13
[0x41d6e6] strncmp("set", "source /etc/vim/vimrc.local", 6) = -10
[0x41d6e6] strncmp("sfind", "source /etc/vim/vimrc.local", 6) = -9
[0x41d6e6] strncmp("shell", "source /etc/vim/vimrc.local", 6) = -7
[0x41d6e6] strncmp("sleep", "source /etc/vim/vimrc.local", 6) = -3
[0x41d6e6] strncmp("slast", "source /etc/vim/vimrc.local", 6) = -3
[0x41d6e6] strncmp("smagic", "source /etc/vim/vimrc.local", 6) = -2
[0x41d6e6] strncmp("snext", "source /etc/vim/vimrc.local", 6) = -1
[0x41d6e6] strncmp("sniff", "source /etc/vim/vimrc.local", 6) = -1
[0x41d6e6] strncmp("snomagic", "source /etc/vim/vimrc.local", 6) = -1
[0x41d6e6] strncmp("source", "source /etc/vim/vimrc.local", 6) = 0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212633, 0x21d96c0)     = 0x021d8fa0
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("edit", "endif", 5)           = -10
[0x41d6e6] strncmp("echo", "endif", 5)           = -11
[0x41d6e6] strncmp("echohl", "endif", 5)         = -11
[0x41d6e6] strncmp("echon", "endif", 5)          = -11
[0x41d6e6] strncmp("else", "endif", 5)           = -2
[0x41d6e6] strncmp("elseif", "endif", 5)         = -2
[0x41d6e6] strncmp("emenu", "endif", 5)          = -1
[0x41d6e6] strncmp("endif", "endif", 5)          = 0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("", -1291212632, 0x21d96c0)     = 0x021d8fa0
[0x443968] free(0x021d8fa0)                      = <void>
[0x443652] malloc(200)                           = 0x021d8fa0
[0x44371c] memset(0x021d8fa0, '\000', 200)       = 0x021d8fa0
[0x419379] fgets("\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377"..., -1291214848, 0x21d96c0) = NULL
[0x443968] free(0x021d8fa0)                      = <void>
[0x421c06] fclose(0x21d95e0)                     = 0
[0x443968] free(0x021d91d0)                      = <void>
[0x4521b8] strcmp("srr", "scroll")               = 15
[0x4521b8] strcmp("srr", "scrollbind")           = 15
[0x4521b8] strcmp("srr", "scrolljump")           = 15
[0x4521b8] strcmp("srr", "scrolloff")            = 15
[0x4521b8] strcmp("srr", "scrollopt")            = 15
[0x4521b8] strcmp("srr", "sections")             = 13
[0x4521b8] strcmp("srr", "secure")               = 13
[0x4521b8] strcmp("srr", "selection")            = 13
[0x4521b8] strcmp("srr", "selectmode")           = 13
[0x4521b8] strcmp("srr", "sessionoptions")       = 13
[0x4521b8] strcmp("srr", "shell")                = 10
[0x4521b8] strcmp("srr", "shellcmdflag")         = 10
[0x4521b8] strcmp("srr", "shellpipe")            = 10
[0x4521b8] strcmp("srr", "shellquote")           = 10
[0x4521b8] strcmp("srr", "shellredir")           = 10
[0x4521b8] strcmp("srr", "shellslash")           = 10
[0x4521b8] strcmp("srr", "shelltype")            = 10
[0x4521b8] strcmp("srr", "shellxquote")          = 10
[0x4521b8] strcmp("srr", "shiftround")           = 10
[0x4521b8] strcmp("srr", "shiftwidth")           = 10
[0x4521b8] strcmp("srr", "shortmess")            = 10
[0x4521b8] strcmp("srr", "shortname")            = 10
[0x4521b8] strcmp("srr", "showbreak")            = 10
[0x4521b8] strcmp("srr", "showcmd")              = 10
[0x4521b8] strcmp("srr", "showfulltag")          = 10
[0x4521b8] strcmp("srr", "showmatch")            = 10
[0x4521b8] strcmp("srr", "showmode")             = 10
[0x4521b8] strcmp("srr", "sidescroll")           = 9
[0x4521b8] strcmp("srr", "slowopen")             = 6
[0x4521b8] strcmp("srr", "smartcase")            = 5
[0x4521b8] strcmp("srr", "smartindent")          = 5
[0x4521b8] strcmp("srr", "smarttab")             = 5
[0x4521b8] strcmp("srr", "softtabstop")          = 3
[0x4521b8] strcmp("srr", "sourceany")            = 3
[0x4521b8] strcmp("srr", "splitbelow")           = 2
[0x4521b8] strcmp("srr", "startofline")          = -2
[0x4521b8] strcmp("srr", "statusline")           = -2
[0x4521b8] strcmp("srr", "suffixes")             = -3
[0x4521b8] strcmp("srr", "swapfile")             = -5
[0x4521b8] strcmp("srr", "swapsync")             = -5
[0x4521b8] strcmp("srr", "switchbuf")            = -5
[0x4521b8] strcmp("srr", "syntax")               = -7
[0x4521b8] strcmp("srr", "tabstop")              = -1
[0x4521b8] strcmp("srr", "tagbsearch")           = -1
[0x4521b8] strcmp("srr", "taglength")            = -1
[0x4521b8] strcmp("srr", "tagrelative")          = -1
[0x4521b8] strcmp("srr", "tags")                 = -1
[0x4521b8] strcmp("srr", "tagstack")             = -1
[0x4521b8] strcmp("srr", "term")                 = -1
[0x4521b8] strcmp("srr", "terse")                = -1
[0x4521b8] strcmp("srr", "textauto")             = -1
[0x4521b8] strcmp("srr", "textmode")             = -1
[0x4521b8] strcmp("srr", "textwidth")            = -1
[0x4521b8] strcmp("srr", "tildeop")              = -1
[0x4521b8] strcmp("srr", "timeout")              = -1
[0x4521b8] strcmp("srr", "timeoutlen")           = -1
[0x4521b8] strcmp("srr", "title")                = -1
[0x4521b8] strcmp("srr", "titlelen")             = -1
[0x4521b8] strcmp("srr", "titleold")             = -1
[0x4521b8] strcmp("srr", "titlestring")          = -1
[0x4521b8] strcmp("srr", "ttimeout")             = -1
[0x4521b8] strcmp("srr", "ttimeoutlen")          = -1
[0x4521b8] strcmp("srr", "ttybuiltin")           = -1
[0x4521b8] strcmp("srr", "ttyfast")              = -1
[0x4521b8] strcmp("srr", "ttymouse")             = -1
[0x4521b8] strcmp("srr", "ttyscroll")            = -1
[0x4521b8] strcmp("srr", "ttytype")              = -1
[0x4521b8] strcmp("srr", "undolevels")           = -2
[0x4521b8] strcmp("srr", "updatecount")          = -2
[0x4521b8] strcmp("srr", "updatetime")           = -2
[0x4521b8] strcmp("srr", "verbose")              = -3
[0x4521b8] strcmp("srr", "viminfo")              = -3
[0x4521b8] strcmp("srr", "visualbell")           = -3
[0x4521b8] strcmp("srr", "w300")                 = -4
[0x4521b8] strcmp("srr", "w1200")                = -4
[0x4521b8] strcmp("srr", "w9600")                = -4
[0x4521b8] strcmp("srr", "warn")                 = -4
[0x4521b8] strcmp("srr", "weirdinvert")          = -4
[0x4521b8] strcmp("srr", "whichwrap")            = -4
[0x4521b8] strcmp("srr", "wildchar")             = -4
[0x4521b8] strcmp("srr", "wildcharm")            = -4
[0x4521b8] strcmp("srr", "wildignore")           = -4
[0x4521b8] strcmp("srr", "wildmenu")             = -4
[0x4521b8] strcmp("srr", "wildmode")             = -4
[0x4521b8] strcmp("srr", "winaltkeys")           = -4
[0x4521b8] strcmp("srr", "window")               = -4
[0x4521b8] strcmp("srr", "winheight")            = -4
[0x4521b8] strcmp("srr", "winminheight")         = -4
[0x4521b8] strcmp("srr", "wrap")                 = -4
[0x4521b8] strcmp("srr", "wrapmargin")           = -4
[0x4521b8] strcmp("srr", "wrapscan")             = -4
[0x4521b8] strcmp("srr", "write")                = -4
[0x4521b8] strcmp("srr", "writeany")             = -4
[0x4521b8] strcmp("srr", "writebackup")          = -4
[0x4521b8] strcmp("srr", "writedelay")           = -4
[0x4521b8] strcmp("srr", "t_AB")                 = -1
[0x4521b8] strcmp("srr", "t_AF")                 = -1
[0x4521b8] strcmp("srr", "t_AL")                 = -1
[0x4521b8] strcmp("srr", "t_al")                 = -1
[0x4521b8] strcmp("srr", "t_bc")                 = -1
[0x4521b8] strcmp("srr", "t_cd")                 = -1
[0x4521b8] strcmp("srr", "t_ce")                 = -1
[0x4521b8] strcmp("srr", "t_cl")                 = -1
[0x4521b8] strcmp("srr", "t_cm")                 = -1
[0x4521b8] strcmp("srr", "t_Co")                 = -1
[0x4521b8] strcmp("srr", "t_CS")                 = -1
[0x4521b8] strcmp("srr", "t_cs")                 = -1
[0x4521b8] strcmp("srr", "t_da")                 = -1
[0x4521b8] strcmp("srr", "t_db")                 = -1
[0x4521b8] strcmp("srr", "t_DL")                 = -1
[0x4521b8] strcmp("srr", "t_dl")                 = -1
[0x4521b8] strcmp("srr", "t_fs")                 = -1
[0x4521b8] strcmp("srr", "t_IE")                 = -1
[0x4521b8] strcmp("srr", "t_IS")                 = -1
[0x4521b8] strcmp("srr", "t_ke")                 = -1
[0x4521b8] strcmp("srr", "t_ks")                 = -1
[0x4521b8] strcmp("srr", "t_le")                 = -1
[0x4521b8] strcmp("srr", "t_mb")                 = -1
[0x4521b8] strcmp("srr", "t_md")                 = -1
[0x4521b8] strcmp("srr", "t_me")                 = -1
[0x4521b8] strcmp("srr", "t_mr")                 = -1
[0x4521b8] strcmp("srr", "t_ms")                 = -1
[0x4521b8] strcmp("srr", "t_nd")                 = -1
[0x4521b8] strcmp("srr", "t_op")                 = -1
[0x4521b8] strcmp("srr", "t_RI")                 = -1
[0x4521b8] strcmp("srr", "t_RV")                 = -1
[0x4521b8] strcmp("srr", "t_Sb")                 = -1
[0x4521b8] strcmp("srr", "t_Sf")                 = -1
[0x4521b8] strcmp("srr", "t_se")                 = -1
[0x4521b8] strcmp("srr", "t_so")                 = -1
[0x4521b8] strcmp("srr", "t_sr")                 = -1
[0x4521b8] strcmp("srr", "t_ts")                 = -1
[0x4521b8] strcmp("srr", "t_te")                 = -1
[0x4521b8] strcmp("srr", "t_ti")                 = -1
[0x4521b8] strcmp("srr", "t_ue")                 = -1
[0x4521b8] strcmp("srr", "t_us")                 = -1
[0x4521b8] strcmp("srr", "t_vb")                 = -1
[0x4521b8] strcmp("srr", "t_ve")                 = -1
[0x4521b8] strcmp("srr", "t_vi")                 = -1
[0x4521b8] strcmp("srr", "t_vs")                 = -1
[0x4521b8] strcmp("srr", "t_WP")                 = -1
[0x4521b8] strcmp("srr", "t_WS")                 = -1
[0x4521b8] strcmp("srr", "t_xs")                 = -1
[0x4521b8] strcmp("srr", "t_ZH")                 = -1
[0x4521b8] strcmp("srr", "t_ZR")                 = -1
[0x452229] strcmp("srr", "scr")                  = 15
[0x452229] strcmp("srr", "scb")                  = 15
[0x452229] strcmp("srr", "sj")                   = 8
[0x452229] strcmp("srr", "so")                   = 3
[0x452229] strcmp("srr", "sbo")                  = 16
[0x452229] strcmp("srr", "sect")                 = 13
[0x452229] strcmp("srr", "sel")                  = 13
[0x452229] strcmp("srr", "slm")                  = 6
[0x452229] strcmp("srr", "ssop")                 = -1
[0x452229] strcmp("srr", "sh")                   = 10
[0x452229] strcmp("srr", "shcf")                 = 10
[0x452229] strcmp("srr", "sp")                   = 2
[0x452229] strcmp("srr", "shq")                  = 10
[0x452229] strcmp("srr", "srr")                  = 0
[0x4521b8] strcmp("sp", "scroll")                = 13
[0x4521b8] strcmp("sp", "scrollbind")            = 13
[0x4521b8] strcmp("sp", "scrolljump")            = 13
[0x4521b8] strcmp("sp", "scrolloff")             = 13
[0x4521b8] strcmp("sp", "scrollopt")             = 13
[0x4521b8] strcmp("sp", "sections")              = 11
[0x4521b8] strcmp("sp", "secure")                = 11
[0x4521b8] strcmp("sp", "selection")             = 11
[0x4521b8] strcmp("sp", "selectmode")            = 11
[0x4521b8] strcmp("sp", "sessionoptions")        = 11
[0x4521b8] strcmp("sp", "shell")                 = 8
[0x4521b8] strcmp("sp", "shellcmdflag")          = 8
[0x4521b8] strcmp("sp", "shellpipe")             = 8
[0x4521b8] strcmp("sp", "shellquote")            = 8
[0x4521b8] strcmp("sp", "shellredir")            = 8
[0x4521b8] strcmp("sp", "shellslash")            = 8
[0x4521b8] strcmp("sp", "shelltype")             = 8
[0x4521b8] strcmp("sp", "shellxquote")           = 8
[0x4521b8] strcmp("sp", "shiftround")            = 8
[0x4521b8] strcmp("sp", "shiftwidth")            = 8
[0x4521b8] strcmp("sp", "shortmess")             = 8
[0x4521b8] strcmp("sp", "shortname")             = 8
[0x4521b8] strcmp("sp", "showbreak")             = 8
[0x4521b8] strcmp("sp", "showcmd")               = 8
[0x4521b8] strcmp("sp", "showfulltag")           = 8
[0x4521b8] strcmp("sp", "showmatch")             = 8
[0x4521b8] strcmp("sp", "showmode")              = 8
[0x4521b8] strcmp("sp", "sidescroll")            = 7
[0x4521b8] strcmp("sp", "slowopen")              = 4
[0x4521b8] strcmp("sp", "smartcase")             = 3
[0x4521b8] strcmp("sp", "smartindent")           = 3
[0x4521b8] strcmp("sp", "smarttab")              = 3
[0x4521b8] strcmp("sp", "softtabstop")           = 1
[0x4521b8] strcmp("sp", "sourceany")             = 1
[0x4521b8] strcmp("sp", "splitbelow")            = -108
[0x4521b8] strcmp("sp", "startofline")           = -4
[0x4521b8] strcmp("sp", "statusline")            = -4
[0x4521b8] strcmp("sp", "suffixes")              = -5
[0x4521b8] strcmp("sp", "swapfile")              = -7
[0x4521b8] strcmp("sp", "swapsync")              = -7
[0x4521b8] strcmp("sp", "switchbuf")             = -7
[0x4521b8] strcmp("sp", "syntax")                = -9
[0x4521b8] strcmp("sp", "tabstop")               = -1
[0x4521b8] strcmp("sp", "tagbsearch")            = -1
[0x4521b8] strcmp("sp", "taglength")             = -1
[0x4521b8] strcmp("sp", "tagrelative")           = -1
[0x4521b8] strcmp("sp", "tags")                  = -1
[0x4521b8] strcmp("sp", "tagstack")              = -1
[0x4521b8] strcmp("sp", "term")                  = -1
[0x4521b8] strcmp("sp", "terse")                 = -1
[0x4521b8] strcmp("sp", "textauto")              = -1
[0x4521b8] strcmp("sp", "textmode")              = -1
[0x4521b8] strcmp("sp", "textwidth")             = -1
[0x4521b8] strcmp("sp", "tildeop")               = -1
[0x4521b8] strcmp("sp", "timeout")               = -1
[0x4521b8] strcmp("sp", "timeoutlen")            = -1
[0x4521b8] strcmp("sp", "title")                 = -1
[0x4521b8] strcmp("sp", "titlelen")              = -1
[0x4521b8] strcmp("sp", "titleold")              = -1
[0x4521b8] strcmp("sp", "titlestring")           = -1
[0x4521b8] strcmp("sp", "ttimeout")              = -1
[0x4521b8] strcmp("sp", "ttimeoutlen")           = -1
[0x4521b8] strcmp("sp", "ttybuiltin")            = -1
[0x4521b8] strcmp("sp", "ttyfast")               = -1
[0x4521b8] strcmp("sp", "ttymouse")              = -1
[0x4521b8] strcmp("sp", "ttyscroll")             = -1
[0x4521b8] strcmp("sp", "ttytype")               = -1
[0x4521b8] strcmp("sp", "undolevels")            = -2
[0x4521b8] strcmp("sp", "updatecount")           = -2
[0x4521b8] strcmp("sp", "updatetime")            = -2
[0x4521b8] strcmp("sp", "verbose")               = -3
[0x4521b8] strcmp("sp", "viminfo")               = -3
[0x4521b8] strcmp("sp", "visualbell")            = -3
[0x4521b8] strcmp("sp", "w300")                  = -4
[0x4521b8] strcmp("sp", "w1200")                 = -4
[0x4521b8] strcmp("sp", "w9600")                 = -4
[0x4521b8] strcmp("sp", "warn")                  = -4
[0x4521b8] strcmp("sp", "weirdinvert")           = -4
[0x4521b8] strcmp("sp", "whichwrap")             = -4
[0x4521b8] strcmp("sp", "wildchar")              = -4
[0x4521b8] strcmp("sp", "wildcharm")             = -4
[0x4521b8] strcmp("sp", "wildignore")            = -4
[0x4521b8] strcmp("sp", "wildmenu")              = -4
[0x4521b8] strcmp("sp", "wildmode")              = -4
[0x4521b8] strcmp("sp", "winaltkeys")            = -4
[0x4521b8] strcmp("sp", "window")                = -4
[0x4521b8] strcmp("sp", "winheight")             = -4
[0x4521b8] strcmp("sp", "winminheight")          = -4
[0x4521b8] strcmp("sp", "wrap")                  = -4
[0x4521b8] strcmp("sp", "wrapmargin")            = -4
[0x4521b8] strcmp("sp", "wrapscan")              = -4
[0x4521b8] strcmp("sp", "write")                 = -4
[0x4521b8] strcmp("sp", "writeany")              = -4
[0x4521b8] strcmp("sp", "writebackup")           = -4
[0x4521b8] strcmp("sp", "writedelay")            = -4
[0x4521b8] strcmp("sp", "t_AB")                  = -1
[0x4521b8] strcmp("sp", "t_AF")                  = -1
[0x4521b8] strcmp("sp", "t_AL")                  = -1
[0x4521b8] strcmp("sp", "t_al")                  = -1
[0x4521b8] strcmp("sp", "t_bc")                  = -1
[0x4521b8] strcmp("sp", "t_cd")                  = -1
[0x4521b8] strcmp("sp", "t_ce")                  = -1
[0x4521b8] strcmp("sp", "t_cl")                  = -1
[0x4521b8] strcmp("sp", "t_cm")                  = -1
[0x4521b8] strcmp("sp", "t_Co")                  = -1
[0x4521b8] strcmp("sp", "t_CS")                  = -1
[0x4521b8] strcmp("sp", "t_cs")                  = -1
[0x4521b8] strcmp("sp", "t_da")                  = -1
[0x4521b8] strcmp("sp", "t_db")                  = -1
[0x4521b8] strcmp("sp", "t_DL")                  = -1
[0x4521b8] strcmp("sp", "t_dl")                  = -1
[0x4521b8] strcmp("sp", "t_fs")                  = -1
[0x4521b8] strcmp("sp", "t_IE")                  = -1
[0x4521b8] strcmp("sp", "t_IS")                  = -1
[0x4521b8] strcmp("sp", "t_ke")                  = -1
[0x4521b8] strcmp("sp", "t_ks")                  = -1
[0x4521b8] strcmp("sp", "t_le")                  = -1
[0x4521b8] strcmp("sp", "t_mb")                  = -1
[0x4521b8] strcmp("sp", "t_md")                  = -1
[0x4521b8] strcmp("sp", "t_me")                  = -1
[0x4521b8] strcmp("sp", "t_mr")                  = -1
[0x4521b8] strcmp("sp", "t_ms")                  = -1
[0x4521b8] strcmp("sp", "t_nd")                  = -1
[0x4521b8] strcmp("sp", "t_op")                  = -1
[0x4521b8] strcmp("sp", "t_RI")                  = -1
[0x4521b8] strcmp("sp", "t_RV")                  = -1
[0x4521b8] strcmp("sp", "t_Sb")                  = -1
[0x4521b8] strcmp("sp", "t_Sf")                  = -1
[0x4521b8] strcmp("sp", "t_se")                  = -1
[0x4521b8] strcmp("sp", "t_so")                  = -1
[0x4521b8] strcmp("sp", "t_sr")                  = -1
[0x4521b8] strcmp("sp", "t_ts")                  = -1
[0x4521b8] strcmp("sp", "t_te")                  = -1
[0x4521b8] strcmp("sp", "t_ti")                  = -1
[0x4521b8] strcmp("sp", "t_ue")                  = -1
[0x4521b8] strcmp("sp", "t_us")                  = -1
[0x4521b8] strcmp("sp", "t_vb")                  = -1
[0x4521b8] strcmp("sp", "t_ve")                  = -1
[0x4521b8] strcmp("sp", "t_vi")                  = -1
[0x4521b8] strcmp("sp", "t_vs")                  = -1
[0x4521b8] strcmp("sp", "t_WP")                  = -1
[0x4521b8] strcmp("sp", "t_WS")                  = -1
[0x4521b8] strcmp("sp", "t_xs")                  = -1
[0x4521b8] strcmp("sp", "t_ZH")                  = -1
[0x4521b8] strcmp("sp", "t_ZR")                  = -1
[0x452229] strcmp("sp", "scr")                   = 13
[0x452229] strcmp("sp", "scb")                   = 13
[0x452229] strcmp("sp", "sj")                    = 6
[0x452229] strcmp("sp", "so")                    = 1
[0x452229] strcmp("sp", "sbo")                   = 14
[0x452229] strcmp("sp", "sect")                  = 11
[0x452229] strcmp("sp", "sel")                   = 11
[0x452229] strcmp("sp", "slm")                   = 4
[0x452229] strcmp("sp", "ssop")                  = -3
[0x452229] strcmp("sp", "sh")                    = 8
[0x452229] strcmp("sp", "shcf")                  = 8
[0x452229] strcmp("sp", "sp")                    = 0
[0x443652] malloc(5)                             = 0x021d3490
[0x4437da] strncpy(0x021d3490, "bash", 4)        = 0x021d3490
[0x443968] free(0x021d3490)                      = <void>
[0x4521b8] strcmp("title", "tabstop")            = 8
[0x4521b8] strcmp("title", "tagbsearch")         = 8
[0x4521b8] strcmp("title", "taglength")          = 8
[0x4521b8] strcmp("title", "tagrelative")        = 8
[0x4521b8] strcmp("title", "tags")               = 8
[0x4521b8] strcmp("title", "tagstack")           = 8
[0x4521b8] strcmp("title", "term")               = 4
[0x4521b8] strcmp("title", "terse")              = 4
[0x4521b8] strcmp("title", "textauto")           = 4
[0x4521b8] strcmp("title", "textmode")           = 4
[0x4521b8] strcmp("title", "textwidth")          = 4
[0x4521b8] strcmp("title", "tildeop")            = 8
[0x4521b8] strcmp("title", "timeout")            = 7
[0x4521b8] strcmp("title", "timeoutlen")         = 7
[0x4521b8] strcmp("title", "title")              = 0
[0x4521b8] strcmp("icon", "icon")                = 0
[0x443652] malloc(1024)                          = 0x021d91d0
[0x458735] open(".", 0, 00)                      = 3
[0x458743] fchdir(3)                             = 0
[0x458796] strncpy(0x021d91d0, "/home/almohri/Downloads/vim/inpu"..., 34) = 0x021d91d0
[0x4587a3] chdir("/home/almohri/Downloads/vim/inpu"...) = 0
[0x458644] getcwd(0x021d91d0, 1024)              = "/home/almohri/Downloads/vim/inpu"...
[0x45882f] fchdir(3)                             = 0
[0x458837] close(3)                              = 0
[0x45884e] strcat("/home/almohri/Downloads/vim/inpu"..., "copy1") = "/home/almohri/Downloads/vim/inpu"...
[0x443652] malloc(41)                            = 0x021d8fa0
[0x44378b] memmove(0x21d8fa0, 0x21d91d0, 41, 145, 0) = 0x21d8fa0
[0x443968] free(0x021d91d0)                      = <void>
[0x404586] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fc820) = 0
[0x443652] malloc(41)                            = 0x021d8fe0
[0x44378b] memmove(0x21d8fe0, 0x21d1eb0, 41, 81, 0) = 0x21d8fe0
[0x443652] malloc(43)                            = 0x021d9020
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x443968] free(0x021d9020)                      = <void>
[0x4589e9] tcgetattr(0, 0x006a8f00)              = 0
[0x458a88] tcsetattr(0, 0, 0x7ffff30fc850)       = 0
[0x47849c] tputs("\033[>c", 1, 0x004783ae)       = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x7ffff30fc850) = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x7ffff30fc850) = 0
[0x457c9f] select(1, 0x7ffff30fc6e0, 0, 0x7ffff30fc760, 0x7ffff30fc7e0) = 0
[0x457e93] write(1, "\033[>c", 4)                = 4
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x7ffff30fc7e0) = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x7ffff30fc7e0) = 0
[0x457c9f] select(1, 0x7ffff30fc5c0, 0, 0x7ffff30fc640, 0x7ffff30fc6c0) = 0
[0x47849c] tputs("\033[?1049h", 1, 0x004783ae)   = 0
[0x47849c] tputs("\033[?1h\033=", 1, 0x004783ae) = 0
[0x457e93] write(1, "\033[?1049h\033[?1h\033=", 15) = 15
[0x478f2f] tgoto("\033[%i%p1%d;%p2%dr", 23, 0)   = "\033[1;24r"
[0x47849c] tputs("\033[1;24r", 1, 0x004783ae)    = 0
[0x47849c] tputs("\033[?12;25h", 1, 0x004783ae)  = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457e93] write(1, "\033[1;24r\033[?12;25h\033[?12l\033[?25h", 28) = 28
[0x458a88] tcsetattr(0, 0, 0x7ffff30fc7f0)       = 0
[0x458074] nanosleep(0x7ffff30fc860, 0, 1000, -1, 0x7ffff30fc7f0) = 0
[0x458a88] tcsetattr(0, 0, 0x7ffff30fc7f0)       = 0
[0x47849c] tputs("\033[H\033[2J", 1, 0x004783ae) = 0
[0x45f6d2] memset(0x021d7c00, ' ', 80)           = 0x021d7c00
[0x45f6e7] memset(0x021d7c50, '\000', 80)        = 0x021d7c50
[0x45f6d2] memset(0x021d7ca0, ' ', 80)           = 0x021d7ca0
[0x45f6e7] memset(0x021d7cf0, '\000', 80)        = 0x021d7cf0
[0x45f6d2] memset(0x021d7d40, ' ', 80)           = 0x021d7d40
[0x45f6e7] memset(0x021d7d90, '\000', 80)        = 0x021d7d90
[0x45f6d2] memset(0x021d7de0, ' ', 80)           = 0x021d7de0
[0x45f6e7] memset(0x021d7e30, '\000', 80)        = 0x021d7e30
[0x45f6d2] memset(0x021d7e80, ' ', 80)           = 0x021d7e80
[0x45f6e7] memset(0x021d7ed0, '\000', 80)        = 0x021d7ed0
[0x45f6d2] memset(0x021d7f20, ' ', 80)           = 0x021d7f20
[0x45f6e7] memset(0x021d7f70, '\000', 80)        = 0x021d7f70
[0x45f6d2] memset(0x021d7fc0, ' ', 80)           = 0x021d7fc0
[0x45f6e7] memset(0x021d8010, '\000', 80)        = 0x021d8010
[0x45f6d2] memset(0x021d8060, ' ', 80)           = 0x021d8060
[0x45f6e7] memset(0x021d80b0, '\000', 80)        = 0x021d80b0
[0x45f6d2] memset(0x021d8100, ' ', 80)           = 0x021d8100
[0x45f6e7] memset(0x021d8150, '\000', 80)        = 0x021d8150
[0x45f6d2] memset(0x021d81a0, ' ', 80)           = 0x021d81a0
[0x45f6e7] memset(0x021d81f0, '\000', 80)        = 0x021d81f0
[0x45f6d2] memset(0x021d8240, ' ', 80)           = 0x021d8240
[0x45f6e7] memset(0x021d8290, '\000', 80)        = 0x021d8290
[0x45f6d2] memset(0x021d82e0, ' ', 80)           = 0x021d82e0
[0x45f6e7] memset(0x021d8330, '\000', 80)        = 0x021d8330
[0x45f6d2] memset(0x021d8380, ' ', 80)           = 0x021d8380
[0x45f6e7] memset(0x021d83d0, '\000', 80)        = 0x021d83d0
[0x45f6d2] memset(0x021d8420, ' ', 80)           = 0x021d8420
[0x45f6e7] memset(0x021d8470, '\000', 80)        = 0x021d8470
[0x45f6d2] memset(0x021d84c0, ' ', 80)           = 0x021d84c0
[0x45f6e7] memset(0x021d8510, '\000', 80)        = 0x021d8510
[0x45f6d2] memset(0x021d8560, ' ', 80)           = 0x021d8560
[0x45f6e7] memset(0x021d85b0, '\000', 80)        = 0x021d85b0
[0x45f6d2] memset(0x021d8600, ' ', 80)           = 0x021d8600
[0x45f6e7] memset(0x021d8650, '\000', 80)        = 0x021d8650
[0x45f6d2] memset(0x021d86a0, ' ', 80)           = 0x021d86a0
[0x45f6e7] memset(0x021d86f0, '\000', 80)        = 0x021d86f0
[0x45f6d2] memset(0x021d8740, ' ', 80)           = 0x021d8740
[0x45f6e7] memset(0x021d8790, '\000', 80)        = 0x021d8790
[0x45f6d2] memset(0x021d87e0, ' ', 80)           = 0x021d87e0
[0x45f6e7] memset(0x021d8830, '\000', 80)        = 0x021d8830
[0x45f6d2] memset(0x021d8880, ' ', 80)           = 0x021d8880
[0x45f6e7] memset(0x021d88d0, '\000', 80)        = 0x021d88d0
[0x45f6d2] memset(0x021d8920, ' ', 80)           = 0x021d8920
[0x45f6e7] memset(0x021d8970, '\000', 80)        = 0x021d8970
[0x45f6d2] memset(0x021d89c0, ' ', 80)           = 0x021d89c0
[0x45f6e7] memset(0x021d8a10, '\000', 80)        = 0x021d8a10
[0x45f6d2] memset(0x021d8a60, ' ', 80)           = 0x021d8a60
[0x45f6e7] memset(0x021d8ab0, '\000', 80)        = 0x021d8ab0
[0x443652] malloc(1120)                          = 0x021d91d0
[0x443652] malloc(56)                            = 0x021d9640
[0x443652] malloc(4096)                          = 0x021d99a0
[0x433f3e] memset(0x021d99a0, '\000', 4096)      = 0x021d99a0
[0x43639c] strncpy(0x021d99a6, "5.8", 6)         = 0x021d99a6
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x45859c] getuid()                              = 1000
[0x458527] getpwuid(1000, 0x7ffff30fc820, 40, -1, 1) = 0x7fc3b373c380
[0x458544] strncpy(0x7ffff30fc820, "yaogroup", 40) = 0x7ffff30fc820
[0x443652] malloc(9)                             = 0x021dcdf0
[0x44378b] memmove(0x21dcdf0, 0x7ffff30fc820, 9, 8, 3) = 0x21dcdf0
[0x436194] memmove(0x21d9a15, 0x21d9a0d, 28, 9, 3) = 0x21d9a15
[0x4361a7] memcpy(0x021d9a0d, "yaogroup", 8)     = 0x021d9a0d
[0x4361bb] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fc790) = 0
[0x44484d] strncpy(0x021d99bc, "yaogroup", 40)   = 0x021d99bc
[0x4585e8] uname(0x7ffff30fc6d0)                 = 0
[0x4585f8] strncpy(0x021d99e4, "bari", 40)       = 0x021d99e4
[0x458631] getpid()                              = 28654
[0x443652] malloc(56)                            = 0x021dce10
[0x443652] malloc(4096)                          = 0x021dce50
[0x433f3e] memset(0x021dce50, '\000', 4096)      = 0x021dce50
[0x443652] malloc(56)                            = 0x021dde60
[0x443652] malloc(4096)                          = 0x021ddea0
[0x433f3e] memset(0x021ddea0, '\000', 4096)      = 0x021ddea0
[0x4588b8] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fc6a0) = 0
[0x42af31] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fc7d0) = 0
[0x42afcd] access("/home/almohri/Downloads/vim/inpu"..., 2) = 0
[0x42afee] open("/home/almohri/Downloads/vim/inpu"..., 0, 00) = 3
[0x4588b8] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fb8a0) = 0
[0x443652] malloc(34)                            = 0x021deeb0
[0x443652] malloc(47)                            = 0x021deee0
[0x428284] strcpy(0x021deee0, "/home/almohri/Downloads/vim/inpu"...) = 0x021deee0
[0x4283db] strcpy(0x021def08, ".swp")            = 0x021def08
[0x428416] memmove(0x21def04, 0x21def03, 10, -11, 3) = 0x21def04
[0x42842b] strcmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri/Downloads/vim/inpu"...) = 53
[0x443652] malloc(46)                            = 0x021def20
[0x44378b] memmove(0x21def20, 0x21deee0, 46, 32, 3) = 0x21def20
[0x443968] free(0x021deee0)                      = <void>
[0x443652] malloc(47)                            = 0x021deee0
[0x4386fc] strcpy(0x021deee0, "/home/almohri/Downloads/vim/inpu"...) = 0x021deee0
[0x43875e] open("/home/almohri/Downloads/vim/inpu"..., 0, 00) = -1
[0x438785] open("/home/almohri/Downloads/vim/inpu"..., 194, 0600) = 6
[0x4387b2] open("/home/almohri/Downloads/vim/inpu"..., 0, 00) = -1
[0x4387db] open("/home/almohri/Downloads/vim/inpu"..., 194, 0600) = 7
[0x4387fe] __fxstat(1, 6, 0x7ffff30fb980)        = 0
[0x43881e] __fxstat(1, 7, 0x7ffff30fba10)        = 0
[0x43884e] close(7)                              = 0
[0x43885f] unlink("/home/almohri/Downloads/vim/inpu"...) = 0
[0x43886f] close(6)                              = 0
[0x43887e] unlink("/home/almohri/Downloads/vim/inpu"...) = 0
[0x443968] free(0x021deee0)                      = <void>
[0x4588b8] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fb8a0) = -1
[0x443968] free(0x021deeb0)                      = <void>
[0x443652] malloc(1024)                          = 0x021def60
[0x45884e] strcat("", "/home/almohri/Downloads/vim/inpu"...) = "/home/almohri/Downloads/vim/inpu"...
[0x443652] malloc(46)                            = 0x021deeb0
[0x44378b] memmove(0x21deeb0, 0x21def60, 46, 49, 0) = 0x21deeb0
[0x443968] free(0x021def60)                      = <void>
[0x434458] unlink("/home/almohri/Downloads/vim/inpu"...) = -1
[0x434479] open("/home/almohri/Downloads/vim/inpu"..., 194, 0600) = 6
[0x4339e2] lseek(6, 0, 0)                        = 0
[0x433a34] write(6, "b0VIM 5.8", 4096)           = 4096
[0x42b169] close(3)                              = 0
[0x42b243] open("/home/almohri/Downloads/vim/inpu"..., 0, 00) = 3
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x427fb3] strcat(""~/Downloads/vim/inputs/copy1" ", "") = ""~/Downloads/vim/inputs/copy1" "
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x457e93] write(1, "\033[H\033[2J\033[24;1H"~/Downloads/vim/i"..., 44) = 44
[0x443652] malloc(65537)                         = 0x021def60
[0x42b3eb] read(3, "DSARITA ma\na;lkdjf ;lajd ;adkfj "..., 65536) = 1364
[0x443652] malloc(160)                           = 0x021eef70
[0x434827] memmove(0x21eef70, 0, 0, 4096, 3)     = 0x21eef70
[0x435357] memmove(0x21dee94, 0x21dee9f, 1, 4095, 3) = 0x21dee94
[0x4353ad] memmove(0x21dee95, 0x21def60, 11, 4084, 3) = 0x21dee95
[0x443652] malloc(800)                           = 0x021ef020
[0x435357] memmove(0x21ded39, 0x21dee94, 1, 4084, 1) = 0x21ded39
[0x4353ad] memmove(0x21ded3a, 0x21def6b, 347, 3737, 1) = 0x21ded3a
[0x435357] memmove(0x21ded31, 0x21ded39, 1, 3737, 1) = 0x21ded31
[0x4353ad] memmove(0x21ded32, 0x21df0c6, 8, 3729, 1) = 0x21ded32
[0x435357] memmove(0x21ded30, 0x21ded31, 1, 3729, 1) = 0x21ded30
[0x4353ad] memmove(0x21ded31, 0x21df0ce, 1, 3728, 1) = 0x21ded31
[0x435357] memmove(0x21ded28, 0x21ded30, 1, 3728, 1) = 0x21ded28
[0x4353ad] memmove(0x21ded29, 0x21df0cf, 8, 3720, 1) = 0x21ded29
[0x435357] memmove(0x21ded27, 0x21ded28, 1, 3720, 1) = 0x21ded27
[0x4353ad] memmove(0x21ded28, 0x21df0d7, 1, 3719, 1) = 0x21ded28
[0x435357] memmove(0x21ded24, 0x21ded27, 1, 3719, 1) = 0x21ded24
[0x4353ad] memmove(0x21ded25, 0x21df0d8, 3, 3716, 1) = 0x21ded25
[0x435357] memmove(0x21ded09, 0x21ded24, 1, 3716, 1) = 0x21ded09
[0x4353ad] memmove(0x21ded0a, 0x21df0db, 27, 3689, 1) = 0x21ded0a
[0x435357] memmove(0x21ded04, 0x21ded09, 1, 3689, 1) = 0x21ded04
[0x4353ad] memmove(0x21ded05, 0x21df0f6, 5, 3684, 1) = 0x21ded05
[0x435357] memmove(0x21decfa, 0x21ded04, 1, 3684, 1) = 0x21decfa
[0x4353ad] memmove(0x21decfb, 0x21df0fb, 10, 3674, 1) = 0x21decfb
[0x435357] memmove(0x21decf2, 0x21decfa, 1, 3674, 1) = 0x21decf2
[0x4353ad] memmove(0x21decf3, 0x21df105, 8, 3666, 1) = 0x21decf3
[0x435357] memmove(0x21deceb, 0x21decf2, 1, 3666, 1) = 0x21deceb
[0x4353ad] memmove(0x21decec, 0x21df10d, 7, 3659, 1) = 0x21decec
[0x435357] memmove(0x21dece5, 0x21deceb, 1, 3659, 1) = 0x21dece5
[0x4353ad] memmove(0x21dece6, 0x21df114, 6, 3653, 1) = 0x21dece6
[0x435357] memmove(0x21decdf, 0x21dece5, 1, 3653, 1) = 0x21decdf
[0x4353ad] memmove(0x21dece0, 0x21df11a, 6, 3647, 1) = 0x21dece0
[0x435357] memmove(0x21decd7, 0x21decdf, 1, 3647, 1) = 0x21decd7
[0x4353ad] memmove(0x21decd8, 0x21df120, 8, 3639, 1) = 0x21decd8
[0x435357] memmove(0x21deccb, 0x21decd7, 1, 3639, 1) = 0x21deccb
[0x4353ad] memmove(0x21deccc, 0x21df128, 12, 3627, 1) = 0x21deccc
[0x435357] memmove(0x21decc1, 0x21deccb, 1, 3627, 1) = 0x21decc1
[0x4353ad] memmove(0x21decc2, 0x21df134, 10, 3617, 1) = 0x21decc2
[0x435357] memmove(0x21decbb, 0x21decc1, 1, 3617, 1) = 0x21decbb
[0x4353ad] memmove(0x21decbc, 0x21df13e, 6, 3611, 1) = 0x21decbc
[0x435357] memmove(0x21decb6, 0x21decbb, 1, 3611, 1) = 0x21decb6
[0x4353ad] memmove(0x21decb7, 0x21df144, 5, 3606, 1) = 0x21decb7
[0x435357] memmove(0x21deca3, 0x21decb6, 1, 3606, 1) = 0x21deca3
[0x4353ad] memmove(0x21deca4, 0x21df149, 19, 3587, 1) = 0x21deca4
[0x435357] memmove(0x21deca2, 0x21deca3, 1, 3587, 1) = 0x21deca2
[0x4353ad] memmove(0x21deca3, 0x21df15c, 1, 3586, 1) = 0x21deca3
[0x435357] memmove(0x21dec99, 0x21deca2, 1, 3586, 1) = 0x21dec99
[0x4353ad] memmove(0x21dec9a, 0x21df15d, 9, 3577, 1) = 0x21dec9a
[0x435357] memmove(0x21dec83, 0x21dec99, 1, 3577, 1) = 0x21dec83
[0x4353ad] memmove(0x21dec84, 0x21df166, 22, 3555, 1) = 0x21dec84
[0x435357] memmove(0x21dec64, 0x21dec83, 1, 3555, 1) = 0x21dec64
[0x4353ad] memmove(0x21dec65, 0x21df17c, 31, 3524, 1) = 0x21dec65
[0x435357] memmove(0x21dec55, 0x21dec64, 1, 3524, 1) = 0x21dec55
[0x4353ad] memmove(0x21dec56, 0x21df19b, 15, 3509, 1) = 0x21dec56
[0x435357] memmove(0x21dec4b, 0x21dec55, 1, 3509, 1) = 0x21dec4b
[0x4353ad] memmove(0x21dec4c, 0x21df1aa, 10, 3499, 1) = 0x21dec4c
[0x435357] memmove(0x21dec35, 0x21dec4b, 1, 3499, 1) = 0x21dec35
[0x4353ad] memmove(0x21dec36, 0x21df1b4, 22, 3477, 1) = 0x21dec36
[0x435357] memmove(0x21dec33, 0x21dec35, 1, 3477, 1) = 0x21dec33
[0x4353ad] memmove(0x21dec34, 0x21df1ca, 2, 3475, 1) = 0x21dec34
[0x435357] memmove(0x21dec1f, 0x21dec33, 1, 3475, 1) = 0x21dec1f
[0x4353ad] memmove(0x21dec20, 0x21df1cc, 20, 3455, 1) = 0x21dec20
[0x435357] memmove(0x21dec0c, 0x21dec1f, 1, 3455, 1) = 0x21dec0c
[0x4353ad] memmove(0x21dec0d, 0x21df1e0, 19, 3436, 1) = 0x21dec0d
[0x435357] memmove(0x21dec0b, 0x21dec0c, 1, 3436, 1) = 0x21dec0b
[0x4353ad] memmove(0x21dec0c, 0x21df1f3, 1, 3435, 1) = 0x21dec0c
[0x435357] memmove(0x21debf5, 0x21dec0b, 1, 3435, 1) = 0x21debf5
[0x4353ad] memmove(0x21debf6, 0x21df1f4, 22, 3413, 1) = 0x21debf6
[0x435357] memmove(0x21debf3, 0x21debf5, 1, 3413, 1) = 0x21debf3
[0x4353ad] memmove(0x21debf4, 0x21df20a, 2, 3411, 1) = 0x21debf4
[0x435357] memmove(0x21debf2, 0x21debf3, 1, 3411, 1) = 0x21debf2
[0x4353ad] memmove(0x21debf3, 0x21df20c, 1, 3410, 1) = 0x21debf3
[0x435357] memmove(0x21debdc, 0x21debf2, 1, 3410, 1) = 0x21debdc
[0x4353ad] memmove(0x21debdd, 0x21df20d, 22, 3388, 1) = 0x21debdd
[0x435357] memmove(0x21debda, 0x21debdc, 1, 3388, 1) = 0x21debda
[0x4353ad] memmove(0x21debdb, 0x21df223, 2, 3386, 1) = 0x21debdb
[0x435357] memmove(0x21debd9, 0x21debda, 1, 3386, 1) = 0x21debd9
[0x4353ad] memmove(0x21debda, 0x21df225, 1, 3385, 1) = 0x21debda
[0x435357] memmove(0x21debc1, 0x21debd9, 1, 3385, 1) = 0x21debc1
[0x4353ad] memmove(0x21debc2, 0x21df226, 24, 3361, 1) = 0x21debc2
[0x435357] memmove(0x21debbf, 0x21debc1, 1, 3361, 1) = 0x21debbf
[0x4353ad] memmove(0x21debc0, 0x21df23e, 2, 3359, 1) = 0x21debc0
[0x435357] memmove(0x21debbe, 0x21debbf, 1, 3359, 1) = 0x21debbe
[0x4353ad] memmove(0x21debbf, 0x21df240, 1, 3358, 1) = 0x21debbf
[0x435357] memmove(0x21deba7, 0x21debbe, 1, 3358, 1) = 0x21deba7
[0x4353ad] memmove(0x21deba8, 0x21df241, 23, 3335, 1) = 0x21deba8
[0x435357] memmove(0x21deba5, 0x21deba7, 1, 3335, 1) = 0x21deba5
[0x4353ad] memmove(0x21deba6, 0x21df258, 2, 3333, 1) = 0x21deba6
[0x435357] memmove(0x21deba4, 0x21deba5, 1, 3333, 1) = 0x21deba4
[0x4353ad] memmove(0x21deba5, 0x21df25a, 1, 3332, 1) = 0x21deba5
[0x435357] memmove(0x21deb8d, 0x21deba4, 1, 3332, 1) = 0x21deb8d
[0x4353ad] memmove(0x21deb8e, 0x21df25b, 23, 3309, 1) = 0x21deb8e
[0x435357] memmove(0x21deb8b, 0x21deb8d, 1, 3309, 1) = 0x21deb8b
[0x4353ad] memmove(0x21deb8c, 0x21df272, 2, 3307, 1) = 0x21deb8c
[0x435357] memmove(0x21deb8a, 0x21deb8b, 1, 3307, 1) = 0x21deb8a
[0x4353ad] memmove(0x21deb8b, 0x21df274, 1, 3306, 1) = 0x21deb8b
[0x435357] memmove(0x21deb81, 0x21deb8a, 1, 3306, 1) = 0x21deb81
[0x4353ad] memmove(0x21deb82, 0x21df275, 9, 3297, 1) = 0x21deb82
[0x435357] memmove(0x21deb5f, 0x21deb81, 1, 3297, 1) = 0x21deb5f
[0x4353ad] memmove(0x21deb60, 0x21df27e, 34, 3263, 1) = 0x21deb60
[0x435357] memmove(0x21deb3b, 0x21deb5f, 1, 3263, 1) = 0x21deb3b
[0x4353ad] memmove(0x21deb3c, 0x21df2a0, 36, 3227, 1) = 0x21deb3c
[0x435357] memmove(0x21deb15, 0x21deb3b, 1, 3227, 1) = 0x21deb15
[0x4353ad] memmove(0x21deb16, 0x21df2c4, 38, 3189, 1) = 0x21deb16
[0x435357] memmove(0x21deaee, 0x21deb15, 1, 3189, 1) = 0x21deaee
[0x4353ad] memmove(0x21deaef, 0x21df2ea, 39, 3150, 1) = 0x21deaef
[0x435357] memmove(0x21deaca, 0x21deaee, 1, 3150, 1) = 0x21deaca
[0x4353ad] memmove(0x21deacb, 0x21df311, 36, 3114, 1) = 0x21deacb
[0x435357] memmove(0x21deac8, 0x21deaca, 1, 3114, 1) = 0x21deac8
[0x4353ad] memmove(0x21deac9, 0x21df335, 2, 3112, 1) = 0x21deac9
[0x435357] memmove(0x21deab4, 0x21deac8, 1, 3112, 1) = 0x21deab4
[0x4353ad] memmove(0x21deab5, 0x21df337, 20, 3092, 1) = 0x21deab5
[0x435357] memmove(0x21deaa1, 0x21deab4, 1, 3092, 1) = 0x21deaa1
[0x4353ad] memmove(0x21deaa2, 0x21df34b, 19, 3073, 1) = 0x21deaa2
[0x435357] memmove(0x21deaa0, 0x21deaa1, 1, 3073, 1) = 0x21deaa0
[0x4353ad] memmove(0x21deaa1, 0x21df35e, 1, 3072, 1) = 0x21deaa1
[0x435357] memmove(0x21dea8a, 0x21deaa0, 1, 3072, 1) = 0x21dea8a
[0x4353ad] memmove(0x21dea8b, 0x21df35f, 22, 3050, 1) = 0x21dea8b
[0x435357] memmove(0x21dea88, 0x21dea8a, 1, 3050, 1) = 0x21dea88
[0x4353ad] memmove(0x21dea89, 0x21df375, 2, 3048, 1) = 0x21dea89
[0x435357] memmove(0x21dea87, 0x21dea88, 1, 3048, 1) = 0x21dea87
[0x4353ad] memmove(0x21dea88, 0x21df377, 1, 3047, 1) = 0x21dea88
[0x435357] memmove(0x21dea71, 0x21dea87, 1, 3047, 1) = 0x21dea71
[0x4353ad] memmove(0x21dea72, 0x21df378, 22, 3025, 1) = 0x21dea72
[0x435357] memmove(0x21dea6f, 0x21dea71, 1, 3025, 1) = 0x21dea6f
[0x4353ad] memmove(0x21dea70, 0x21df38e, 2, 3023, 1) = 0x21dea70
[0x435357] memmove(0x21dea6e, 0x21dea6f, 1, 3023, 1) = 0x21dea6e
[0x4353ad] memmove(0x21dea6f, 0x21df390, 1, 3022, 1) = 0x21dea6f
[0x435357] memmove(0x21dea56, 0x21dea6e, 1, 3022, 1) = 0x21dea56
[0x4353ad] memmove(0x21dea57, 0x21df391, 24, 2998, 1) = 0x21dea57
[0x435357] memmove(0x21dea54, 0x21dea56, 1, 2998, 1) = 0x21dea54
[0x4353ad] memmove(0x21dea55, 0x21df3a9, 2, 2996, 1) = 0x21dea55
[0x435357] memmove(0x21dea53, 0x21dea54, 1, 2996, 1) = 0x21dea53
[0x4353ad] memmove(0x21dea54, 0x21df3ab, 1, 2995, 1) = 0x21dea54
[0x435357] memmove(0x21dea3c, 0x21dea53, 1, 2995, 1) = 0x21dea3c
[0x4353ad] memmove(0x21dea3d, 0x21df3ac, 23, 2972, 1) = 0x21dea3d
[0x435357] memmove(0x21dea3a, 0x21dea3c, 1, 2972, 1) = 0x21dea3a
[0x4353ad] memmove(0x21dea3b, 0x21df3c3, 2, 2970, 1) = 0x21dea3b
[0x435357] memmove(0x21dea39, 0x21dea3a, 1, 2970, 1) = 0x21dea39
[0x4353ad] memmove(0x21dea3a, 0x21df3c5, 1, 2969, 1) = 0x21dea3a
[0x435357] memmove(0x21dea22, 0x21dea39, 1, 2969, 1) = 0x21dea22
[0x4353ad] memmove(0x21dea23, 0x21df3c6, 23, 2946, 1) = 0x21dea23
[0x435357] memmove(0x21dea20, 0x21dea22, 1, 2946, 1) = 0x21dea20
[0x4353ad] memmove(0x21dea21, 0x21df3dd, 2, 2944, 1) = 0x21dea21
[0x435357] memmove(0x21dea1f, 0x21dea20, 1, 2944, 1) = 0x21dea1f
[0x4353ad] memmove(0x21dea20, 0x21df3df, 1, 2943, 1) = 0x21dea20
[0x435357] memmove(0x21dea16, 0x21dea1f, 1, 2943, 1) = 0x21dea16
[0x4353ad] memmove(0x21dea17, 0x21df3e0, 9, 2934, 1) = 0x21dea17
[0x435357] memmove(0x21de9f4, 0x21dea16, 1, 2934, 1) = 0x21de9f4
[0x4353ad] memmove(0x21de9f5, 0x21df3e9, 34, 2900, 1) = 0x21de9f5
[0x435357] memmove(0x21de9d0, 0x21de9f4, 1, 2900, 1) = 0x21de9d0
[0x4353ad] memmove(0x21de9d1, 0x21df40b, 36, 2864, 1) = 0x21de9d1
[0x435357] memmove(0x21de9aa, 0x21de9d0, 1, 2864, 1) = 0x21de9aa
[0x4353ad] memmove(0x21de9ab, 0x21df42f, 38, 2826, 1) = 0x21de9ab
[0x435357] memmove(0x21de983, 0x21de9aa, 1, 2826, 1) = 0x21de983
[0x4353ad] memmove(0x21de984, 0x21df455, 39, 2787, 1) = 0x21de984
[0x435357] memmove(0x21de95f, 0x21de983, 1, 2787, 1) = 0x21de95f
[0x4353ad] memmove(0x21de960, 0x21df47c, 36, 2751, 1) = 0x21de960
[0x435357] memmove(0x21de94b, 0x21de95f, 1, 2751, 1) = 0x21de94b
[0x4353ad] memmove(0x21de94c, 0x21df4a0, 20, 2731, 1) = 0x21de94c
[0x457c43] __fdelt_chk(0, 0, 16, 0, 1)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 1)            = 0
[0x457c9f] select(1, 0x7ffff30fc5e0, 0, 0x7ffff30fc660, 0x7ffff30fc6e0) = 0
[0x443652] malloc(65537)                         = 0x021ef350
[0x443968] free(0x021def60)                      = <void>
[0x42b3eb] read(3, "", 65536)                    = 0
[0x42b9e2] close(3)                              = 0
[0x443968] free(0x021ef350)                      = <void>
[0x436ef3] memmove(0x21de94c, 0x21de94b, 0, 2731, 3) = 0x21de94c
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x427e12] __sprintf_chk(0x21cffff, 1, -1, 0x4853b5, 78) = 25
[0x443652] malloc(24)                            = 0x021deef0
[0x443652] malloc(57)                            = 0x021def60
[0x4437da] strncpy(0x021def60, ""~/Downloads/vim/inputs/copy1" 7"..., 56) = 0x021def60
[0x457e93] write(1, " 78 lines, 1364 characters", 26) = 26
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e67, 0, 10, 52, 0xfffffffd) = 48
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e6a, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 57
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e6f, 0, 10, 49, 0x7fc3b373a020) = 192
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e73, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 255
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e95, 0, 10, 49, 0x7fc3b373a020) = 161
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e99, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 255
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e43, 0, 10, 52, 0x7fc3b373a020) = 48
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x489e46, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 57
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406b43] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x21d1942, 0, 10, 52, 0x7fc3b373a020) = 48
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x406a27] strtol(0x21d1945, 0, 10, 0x7fc3b30bb82c, 0x7fc3b373a020) = 57
[0x40693a] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0xfffffffd)  = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0xfffffffd)   = 0
[0x457c9f] select(1, 0x7ffff30fc760, 0, 0x7ffff30fc7e0, 0x7ffff30fc860) = 0
[0x458644] getcwd(0x7ffff30fc490, 1024)          = "/home/almohri/Downloads/vim/scri"...
[0x443968] free(0x021d8fe0)                      = <void>
[0x428057] strncmp("/home/almohri/Downloads/vim/scri"..., "/home/almohri/Downloads/vim/inpu"..., 35) = 10
[0x443968] free(0x021def20)                      = <void>
[0x4521b8] strcmp("hl", "hardtabs")              = 11
[0x4521b8] strcmp("hl", "helpfile")              = 7
[0x4521b8] strcmp("hl", "helpheight")            = 7
[0x4521b8] strcmp("hl", "hidden")                = 3
[0x4521b8] strcmp("hl", "highlight")             = 3
[0x4521b8] strcmp("hl", "history")               = 3
[0x4521b8] strcmp("hl", "hkmap")                 = 1
[0x4521b8] strcmp("hl", "hkmapp")                = 1
[0x4521b8] strcmp("hl", "hlsearch")              = -115
[0x4521b8] strcmp("hl", "icon")                  = -1
[0x4521b8] strcmp("hl", "iconstring")            = -1
[0x4521b8] strcmp("hl", "ignorecase")            = -1
[0x4521b8] strcmp("hl", "include")               = -1
[0x4521b8] strcmp("hl", "incsearch")             = -1
[0x4521b8] strcmp("hl", "infercase")             = -1
[0x4521b8] strcmp("hl", "insertmode")            = -1
[0x4521b8] strcmp("hl", "isfname")               = -1
[0x4521b8] strcmp("hl", "isident")               = -1
[0x4521b8] strcmp("hl", "iskeyword")             = -1
[0x4521b8] strcmp("hl", "isprint")               = -1
[0x4521b8] strcmp("hl", "joinspaces")            = -2
[0x4521b8] strcmp("hl", "key")                   = -3
[0x4521b8] strcmp("hl", "keymodel")              = -3
[0x4521b8] strcmp("hl", "keywordprg")            = -3
[0x4521b8] strcmp("hl", "langmap")               = -4
[0x4521b8] strcmp("hl", "laststatus")            = -4
[0x4521b8] strcmp("hl", "lazyredraw")            = -4
[0x4521b8] strcmp("hl", "linebreak")             = -4
[0x4521b8] strcmp("hl", "lines")                 = -4
[0x4521b8] strcmp("hl", "lisp")                  = -4
[0x4521b8] strcmp("hl", "list")                  = -4
[0x4521b8] strcmp("hl", "listchars")             = -4
[0x4521b8] strcmp("hl", "magic")                 = -5
[0x4521b8] strcmp("hl", "makeef")                = -5
[0x4521b8] strcmp("hl", "makeprg")               = -5
[0x4521b8] strcmp("hl", "matchpairs")            = -5
[0x4521b8] strcmp("hl", "matchtime")             = -5
[0x4521b8] strcmp("hl", "maxfuncdepth")          = -5
[0x4521b8] strcmp("hl", "maxmapdepth")           = -5
[0x4521b8] strcmp("hl", "maxmem")                = -5
[0x4521b8] strcmp("hl", "maxmemtot")             = -5
[0x4521b8] strcmp("hl", "mesg")                  = -5
[0x4521b8] strcmp("hl", "modeline")              = -5
[0x4521b8] strcmp("hl", "modelines")             = -5
[0x4521b8] strcmp("hl", "modified")              = -5
[0x4521b8] strcmp("hl", "more")                  = -5
[0x4521b8] strcmp("hl", "mouse")                 = -5
[0x4521b8] strcmp("hl", "mousefocus")            = -5
[0x4521b8] strcmp("hl", "mousehide")             = -5
[0x4521b8] strcmp("hl", "mousemodel")            = -5
[0x4521b8] strcmp("hl", "mousetime")             = -5
[0x4521b8] strcmp("hl", "novice")                = -6
[0x4521b8] strcmp("hl", "nrformats")             = -6
[0x4521b8] strcmp("hl", "number")                = -6
[0x4521b8] strcmp("hl", "open")                  = -7
[0x4521b8] strcmp("hl", "optimize")              = -7
[0x4521b8] strcmp("hl", "osfiletype")            = -7
[0x4521b8] strcmp("hl", "paragraphs")            = -8
[0x4521b8] strcmp("hl", "paste")                 = -8
[0x4521b8] strcmp("hl", "pastetoggle")           = -8
[0x4521b8] strcmp("hl", "patchmode")             = -8
[0x4521b8] strcmp("hl", "path")                  = -8
[0x4521b8] strcmp("hl", "previewheight")         = -8
[0x4521b8] strcmp("hl", "prompt")                = -8
[0x4521b8] strcmp("hl", "readonly")              = -10
[0x4521b8] strcmp("hl", "redraw")                = -10
[0x4521b8] strcmp("hl", "remap")                 = -10
[0x4521b8] strcmp("hl", "report")                = -10
[0x4521b8] strcmp("hl", "restorescreen")         = -10
[0x4521b8] strcmp("hl", "revins")                = -10
[0x4521b8] strcmp("hl", "rightleft")             = -10
[0x4521b8] strcmp("hl", "ruler")                 = -10
[0x4521b8] strcmp("hl", "rulerformat")           = -10
[0x4521b8] strcmp("hl", "scroll")                = -11
[0x4521b8] strcmp("hl", "scrollbind")            = -11
[0x4521b8] strcmp("hl", "scrolljump")            = -11
[0x4521b8] strcmp("hl", "scrolloff")             = -11
[0x4521b8] strcmp("hl", "scrollopt")             = -11
[0x4521b8] strcmp("hl", "sections")              = -11
[0x4521b8] strcmp("hl", "secure")                = -11
[0x4521b8] strcmp("hl", "selection")             = -11
[0x4521b8] strcmp("hl", "selectmode")            = -11
[0x4521b8] strcmp("hl", "sessionoptions")        = -11
[0x4521b8] strcmp("hl", "shell")                 = -11
[0x4521b8] strcmp("hl", "shellcmdflag")          = -11
[0x4521b8] strcmp("hl", "shellpipe")             = -11
[0x4521b8] strcmp("hl", "shellquote")            = -11
[0x4521b8] strcmp("hl", "shellredir")            = -11
[0x4521b8] strcmp("hl", "shellslash")            = -11
[0x4521b8] strcmp("hl", "shelltype")             = -11
[0x4521b8] strcmp("hl", "shellxquote")           = -11
[0x4521b8] strcmp("hl", "shiftround")            = -11
[0x4521b8] strcmp("hl", "shiftwidth")            = -11
[0x4521b8] strcmp("hl", "shortmess")             = -11
[0x4521b8] strcmp("hl", "shortname")             = -11
[0x4521b8] strcmp("hl", "showbreak")             = -11
[0x4521b8] strcmp("hl", "showcmd")               = -11
[0x4521b8] strcmp("hl", "showfulltag")           = -11
[0x4521b8] strcmp("hl", "showmatch")             = -11
[0x4521b8] strcmp("hl", "showmode")              = -11
[0x4521b8] strcmp("hl", "sidescroll")            = -11
[0x4521b8] strcmp("hl", "slowopen")              = -11
[0x4521b8] strcmp("hl", "smartcase")             = -11
[0x4521b8] strcmp("hl", "smartindent")           = -11
[0x4521b8] strcmp("hl", "smarttab")              = -11
[0x4521b8] strcmp("hl", "softtabstop")           = -11
[0x4521b8] strcmp("hl", "sourceany")             = -11
[0x4521b8] strcmp("hl", "splitbelow")            = -11
[0x4521b8] strcmp("hl", "startofline")           = -11
[0x4521b8] strcmp("hl", "statusline")            = -11
[0x4521b8] strcmp("hl", "suffixes")              = -11
[0x4521b8] strcmp("hl", "swapfile")              = -11
[0x4521b8] strcmp("hl", "swapsync")              = -11
[0x4521b8] strcmp("hl", "switchbuf")             = -11
[0x4521b8] strcmp("hl", "syntax")                = -11
[0x4521b8] strcmp("hl", "tabstop")               = -12
[0x4521b8] strcmp("hl", "tagbsearch")            = -12
[0x4521b8] strcmp("hl", "taglength")             = -12
[0x4521b8] strcmp("hl", "tagrelative")           = -12
[0x4521b8] strcmp("hl", "tags")                  = -12
[0x4521b8] strcmp("hl", "tagstack")              = -12
[0x4521b8] strcmp("hl", "term")                  = -12
[0x4521b8] strcmp("hl", "terse")                 = -12
[0x4521b8] strcmp("hl", "textauto")              = -12
[0x4521b8] strcmp("hl", "textmode")              = -12
[0x4521b8] strcmp("hl", "textwidth")             = -12
[0x4521b8] strcmp("hl", "tildeop")               = -12
[0x4521b8] strcmp("hl", "timeout")               = -12
[0x4521b8] strcmp("hl", "timeoutlen")            = -12
[0x4521b8] strcmp("hl", "title")                 = -12
[0x4521b8] strcmp("hl", "titlelen")              = -12
[0x4521b8] strcmp("hl", "titleold")              = -12
[0x4521b8] strcmp("hl", "titlestring")           = -12
[0x4521b8] strcmp("hl", "ttimeout")              = -12
[0x4521b8] strcmp("hl", "ttimeoutlen")           = -12
[0x4521b8] strcmp("hl", "ttybuiltin")            = -12
[0x4521b8] strcmp("hl", "ttyfast")               = -12
[0x4521b8] strcmp("hl", "ttymouse")              = -12
[0x4521b8] strcmp("hl", "ttyscroll")             = -12
[0x4521b8] strcmp("hl", "ttytype")               = -12
[0x4521b8] strcmp("hl", "undolevels")            = -13
[0x4521b8] strcmp("hl", "updatecount")           = -13
[0x4521b8] strcmp("hl", "updatetime")            = -13
[0x4521b8] strcmp("hl", "verbose")               = -14
[0x4521b8] strcmp("hl", "viminfo")               = -14
[0x4521b8] strcmp("hl", "visualbell")            = -14
[0x4521b8] strcmp("hl", "w300")                  = -15
[0x4521b8] strcmp("hl", "w1200")                 = -15
[0x4521b8] strcmp("hl", "w9600")                 = -15
[0x4521b8] strcmp("hl", "warn")                  = -15
[0x4521b8] strcmp("hl", "weirdinvert")           = -15
[0x4521b8] strcmp("hl", "whichwrap")             = -15
[0x4521b8] strcmp("hl", "wildchar")              = -15
[0x4521b8] strcmp("hl", "wildcharm")             = -15
[0x4521b8] strcmp("hl", "wildignore")            = -15
[0x4521b8] strcmp("hl", "wildmenu")              = -15
[0x4521b8] strcmp("hl", "wildmode")              = -15
[0x4521b8] strcmp("hl", "winaltkeys")            = -15
[0x4521b8] strcmp("hl", "window")                = -15
[0x4521b8] strcmp("hl", "winheight")             = -15
[0x4521b8] strcmp("hl", "winminheight")          = -15
[0x4521b8] strcmp("hl", "wrap")                  = -15
[0x4521b8] strcmp("hl", "wrapmargin")            = -15
[0x4521b8] strcmp("hl", "wrapscan")              = -15
[0x4521b8] strcmp("hl", "write")                 = -15
[0x4521b8] strcmp("hl", "writeany")              = -15
[0x4521b8] strcmp("hl", "writebackup")           = -15
[0x4521b8] strcmp("hl", "writedelay")            = -15
[0x4521b8] strcmp("hl", "t_AB")                  = -12
[0x4521b8] strcmp("hl", "t_AF")                  = -12
[0x4521b8] strcmp("hl", "t_AL")                  = -12
[0x4521b8] strcmp("hl", "t_al")                  = -12
[0x4521b8] strcmp("hl", "t_bc")                  = -12
[0x4521b8] strcmp("hl", "t_cd")                  = -12
[0x4521b8] strcmp("hl", "t_ce")                  = -12
[0x4521b8] strcmp("hl", "t_cl")                  = -12
[0x4521b8] strcmp("hl", "t_cm")                  = -12
[0x4521b8] strcmp("hl", "t_Co")                  = -12
[0x4521b8] strcmp("hl", "t_CS")                  = -12
[0x4521b8] strcmp("hl", "t_cs")                  = -12
[0x4521b8] strcmp("hl", "t_da")                  = -12
[0x4521b8] strcmp("hl", "t_db")                  = -12
[0x4521b8] strcmp("hl", "t_DL")                  = -12
[0x4521b8] strcmp("hl", "t_dl")                  = -12
[0x4521b8] strcmp("hl", "t_fs")                  = -12
[0x4521b8] strcmp("hl", "t_IE")                  = -12
[0x4521b8] strcmp("hl", "t_IS")                  = -12
[0x4521b8] strcmp("hl", "t_ke")                  = -12
[0x4521b8] strcmp("hl", "t_ks")                  = -12
[0x4521b8] strcmp("hl", "t_le")                  = -12
[0x4521b8] strcmp("hl", "t_mb")                  = -12
[0x4521b8] strcmp("hl", "t_md")                  = -12
[0x4521b8] strcmp("hl", "t_me")                  = -12
[0x4521b8] strcmp("hl", "t_mr")                  = -12
[0x4521b8] strcmp("hl", "t_ms")                  = -12
[0x4521b8] strcmp("hl", "t_nd")                  = -12
[0x4521b8] strcmp("hl", "t_op")                  = -12
[0x4521b8] strcmp("hl", "t_RI")                  = -12
[0x4521b8] strcmp("hl", "t_RV")                  = -12
[0x4521b8] strcmp("hl", "t_Sb")                  = -12
[0x4521b8] strcmp("hl", "t_Sf")                  = -12
[0x4521b8] strcmp("hl", "t_se")                  = -12
[0x4521b8] strcmp("hl", "t_so")                  = -12
[0x4521b8] strcmp("hl", "t_sr")                  = -12
[0x4521b8] strcmp("hl", "t_ts")                  = -12
[0x4521b8] strcmp("hl", "t_te")                  = -12
[0x4521b8] strcmp("hl", "t_ti")                  = -12
[0x4521b8] strcmp("hl", "t_ue")                  = -12
[0x4521b8] strcmp("hl", "t_us")                  = -12
[0x4521b8] strcmp("hl", "t_vb")                  = -12
[0x4521b8] strcmp("hl", "t_ve")                  = -12
[0x4521b8] strcmp("hl", "t_vi")                  = -12
[0x4521b8] strcmp("hl", "t_vs")                  = -12
[0x4521b8] strcmp("hl", "t_WP")                  = -12
[0x4521b8] strcmp("hl", "t_WS")                  = -12
[0x4521b8] strcmp("hl", "t_xs")                  = -12
[0x4521b8] strcmp("hl", "t_ZH")                  = -12
[0x4521b8] strcmp("hl", "t_ZR")                  = -12
[0x452229] strcmp("hl", "ht")                    = -8
[0x452229] strcmp("hl", "hf")                    = 6
[0x452229] strcmp("hl", "hh")                    = 4
[0x452229] strcmp("hl", "hid")                   = 3
[0x452229] strcmp("hl", "hl")                    = 0
[0x443652] malloc(11)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "SpecialKey", 10) = 0x021defb0
[0x443652] malloc(11)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 11, 0x7fc3b3739778, 2) = 0x21defd0
[0x46fd29] strcmp("SPECIALKEY", "NORMAL")        = 5
[0x46fd29] strcmp("SPECIALKEY", "WILDMENU")      = -4
[0x46fd29] strcmp("SPECIALKEY", "WARNINGMSG")    = -4
[0x46fd29] strcmp("SPECIALKEY", "VISUALNOS")     = -3
[0x46fd29] strcmp("SPECIALKEY", "VISUAL")        = -3
[0x46fd29] strcmp("SPECIALKEY", "TITLE")         = -1
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINENC")  = -4
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINE")    = -4
[0x46fd29] strcmp("SPECIALKEY", "QUESTION")      = 2
[0x46fd29] strcmp("SPECIALKEY", "LINENR")        = 7
[0x46fd29] strcmp("SPECIALKEY", "MODEMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "MOREMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "SEARCH")        = 11
[0x46fd29] strcmp("SPECIALKEY", "INCSEARCH")     = 10
[0x46fd29] strcmp("SPECIALKEY", "ERRORMSG")      = 14
[0x46fd29] strcmp("SPECIALKEY", "DIRECTORY")     = 15
[0x46fd29] strcmp("SPECIALKEY", "NONTEXT")       = 5
[0x46fd29] strcmp("SPECIALKEY", "SPECIALKEY")    = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(8)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "NonText", 7)     = 0x021defb0
[0x443652] malloc(8)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 8, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("NONTEXT", "NORMAL")           = -4
[0x46fd29] strcmp("NONTEXT", "WILDMENU")         = -9
[0x46fd29] strcmp("NONTEXT", "WARNINGMSG")       = -9
[0x46fd29] strcmp("NONTEXT", "VISUALNOS")        = -8
[0x46fd29] strcmp("NONTEXT", "VISUAL")           = -8
[0x46fd29] strcmp("NONTEXT", "TITLE")            = -6
[0x46fd29] strcmp("NONTEXT", "STATUSLINENC")     = -5
[0x46fd29] strcmp("NONTEXT", "STATUSLINE")       = -5
[0x46fd29] strcmp("NONTEXT", "QUESTION")         = -3
[0x46fd29] strcmp("NONTEXT", "LINENR")           = 2
[0x46fd29] strcmp("NONTEXT", "MODEMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "MOREMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "SEARCH")           = -5
[0x46fd29] strcmp("NONTEXT", "INCSEARCH")        = 5
[0x46fd29] strcmp("NONTEXT", "ERRORMSG")         = 9
[0x46fd29] strcmp("NONTEXT", "DIRECTORY")        = 10
[0x46fd29] strcmp("NONTEXT", "NONTEXT")          = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(10)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Directory", 9)   = 0x021defb0
[0x443652] malloc(10)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 10, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("DIRECTORY", "NORMAL")         = -10
[0x46fd29] strcmp("DIRECTORY", "WILDMENU")       = -19
[0x46fd29] strcmp("DIRECTORY", "WARNINGMSG")     = -19
[0x46fd29] strcmp("DIRECTORY", "VISUALNOS")      = -18
[0x46fd29] strcmp("DIRECTORY", "VISUAL")         = -18
[0x46fd29] strcmp("DIRECTORY", "TITLE")          = -16
[0x46fd29] strcmp("DIRECTORY", "STATUSLINENC")   = -15
[0x46fd29] strcmp("DIRECTORY", "STATUSLINE")     = -15
[0x46fd29] strcmp("DIRECTORY", "QUESTION")       = -13
[0x46fd29] strcmp("DIRECTORY", "LINENR")         = -8
[0x46fd29] strcmp("DIRECTORY", "MODEMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "MOREMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "SEARCH")         = -15
[0x46fd29] strcmp("DIRECTORY", "INCSEARCH")      = -5
[0x46fd29] strcmp("DIRECTORY", "ERRORMSG")       = -1
[0x46fd29] strcmp("DIRECTORY", "DIRECTORY")      = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(9)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "ErrorMsg", 8)    = 0x021defb0
[0x443652] malloc(9)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 9, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("ERRORMSG", "NORMAL")          = -9
[0x46fd29] strcmp("ERRORMSG", "WILDMENU")        = -18
[0x46fd29] strcmp("ERRORMSG", "WARNINGMSG")      = -18
[0x46fd29] strcmp("ERRORMSG", "VISUALNOS")       = -17
[0x46fd29] strcmp("ERRORMSG", "VISUAL")          = -17
[0x46fd29] strcmp("ERRORMSG", "TITLE")           = -15
[0x46fd29] strcmp("ERRORMSG", "STATUSLINENC")    = -14
[0x46fd29] strcmp("ERRORMSG", "STATUSLINE")      = -14
[0x46fd29] strcmp("ERRORMSG", "QUESTION")        = -12
[0x46fd29] strcmp("ERRORMSG", "LINENR")          = -7
[0x46fd29] strcmp("ERRORMSG", "MODEMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "MOREMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "SEARCH")          = -14
[0x46fd29] strcmp("ERRORMSG", "INCSEARCH")       = -4
[0x46fd29] strcmp("ERRORMSG", "ERRORMSG")        = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(10)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "IncSearch", 9)   = 0x021defb0
[0x443652] malloc(10)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 10, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("INCSEARCH", "NORMAL")         = -5
[0x46fd29] strcmp("INCSEARCH", "WILDMENU")       = -14
[0x46fd29] strcmp("INCSEARCH", "WARNINGMSG")     = -14
[0x46fd29] strcmp("INCSEARCH", "VISUALNOS")      = -13
[0x46fd29] strcmp("INCSEARCH", "VISUAL")         = -13
[0x46fd29] strcmp("INCSEARCH", "TITLE")          = -11
[0x46fd29] strcmp("INCSEARCH", "STATUSLINENC")   = -10
[0x46fd29] strcmp("INCSEARCH", "STATUSLINE")     = -10
[0x46fd29] strcmp("INCSEARCH", "QUESTION")       = -8
[0x46fd29] strcmp("INCSEARCH", "LINENR")         = -3
[0x46fd29] strcmp("INCSEARCH", "MODEMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "MOREMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "SEARCH")         = -10
[0x46fd29] strcmp("INCSEARCH", "INCSEARCH")      = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(7)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Search", 6)      = 0x021defb0
[0x443652] malloc(7)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 7, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("SEARCH", "NORMAL")            = 5
[0x46fd29] strcmp("SEARCH", "WILDMENU")          = -4
[0x46fd29] strcmp("SEARCH", "WARNINGMSG")        = -4
[0x46fd29] strcmp("SEARCH", "VISUALNOS")         = -3
[0x46fd29] strcmp("SEARCH", "VISUAL")            = -3
[0x46fd29] strcmp("SEARCH", "TITLE")             = -1
[0x46fd29] strcmp("SEARCH", "STATUSLINENC")      = -15
[0x46fd29] strcmp("SEARCH", "STATUSLINE")        = -15
[0x46fd29] strcmp("SEARCH", "QUESTION")          = 2
[0x46fd29] strcmp("SEARCH", "LINENR")            = 7
[0x46fd29] strcmp("SEARCH", "MODEMSG")           = 6
[0x46fd29] strcmp("SEARCH", "MOREMSG")           = 6
[0x46fd29] strcmp("SEARCH", "SEARCH")            = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(8)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "MoreMsg", 7)     = 0x021defb0
[0x443652] malloc(8)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 8, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("MOREMSG", "NORMAL")           = -1
[0x46fd29] strcmp("MOREMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MOREMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MOREMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MOREMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MOREMSG", "TITLE")            = -7
[0x46fd29] strcmp("MOREMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MOREMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MOREMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MOREMSG", "LINENR")           = 1
[0x46fd29] strcmp("MOREMSG", "MODEMSG")          = 14
[0x46fd29] strcmp("MOREMSG", "MOREMSG")          = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(8)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "ModeMsg", 7)     = 0x021defb0
[0x443652] malloc(8)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 8, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("MODEMSG", "NORMAL")           = -1
[0x46fd29] strcmp("MODEMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MODEMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MODEMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MODEMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MODEMSG", "TITLE")            = -7
[0x46fd29] strcmp("MODEMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MODEMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MODEMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MODEMSG", "LINENR")           = 1
[0x46fd29] strcmp("MODEMSG", "MODEMSG")          = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(7)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "LineNr", 6)      = 0x021defb0
[0x443652] malloc(7)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 7, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("LINENR", "NORMAL")            = -2
[0x46fd29] strcmp("LINENR", "WILDMENU")          = -11
[0x46fd29] strcmp("LINENR", "WARNINGMSG")        = -11
[0x46fd29] strcmp("LINENR", "VISUALNOS")         = -10
[0x46fd29] strcmp("LINENR", "VISUAL")            = -10
[0x46fd29] strcmp("LINENR", "TITLE")             = -8
[0x46fd29] strcmp("LINENR", "STATUSLINENC")      = -7
[0x46fd29] strcmp("LINENR", "STATUSLINE")        = -7
[0x46fd29] strcmp("LINENR", "QUESTION")          = -5
[0x46fd29] strcmp("LINENR", "LINENR")            = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(9)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Question", 8)    = 0x021defb0
[0x443652] malloc(9)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 9, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("QUESTION", "NORMAL")          = 3
[0x46fd29] strcmp("QUESTION", "WILDMENU")        = -6
[0x46fd29] strcmp("QUESTION", "WARNINGMSG")      = -6
[0x46fd29] strcmp("QUESTION", "VISUALNOS")       = -5
[0x46fd29] strcmp("QUESTION", "VISUAL")          = -5
[0x46fd29] strcmp("QUESTION", "TITLE")           = -3
[0x46fd29] strcmp("QUESTION", "STATUSLINENC")    = -2
[0x46fd29] strcmp("QUESTION", "STATUSLINE")      = -2
[0x46fd29] strcmp("QUESTION", "QUESTION")        = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(11)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "StatusLine", 10) = 0x021defb0
[0x443652] malloc(11)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 11, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("STATUSLINE", "NORMAL")        = 5
[0x46fd29] strcmp("STATUSLINE", "WILDMENU")      = -4
[0x46fd29] strcmp("STATUSLINE", "WARNINGMSG")    = -4
[0x46fd29] strcmp("STATUSLINE", "VISUALNOS")     = -3
[0x46fd29] strcmp("STATUSLINE", "VISUAL")        = -3
[0x46fd29] strcmp("STATUSLINE", "TITLE")         = -1
[0x46fd29] strcmp("STATUSLINE", "STATUSLINENC")  = -78
[0x46fd29] strcmp("STATUSLINE", "STATUSLINE")    = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(13)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "StatusLineNC", 12) = 0x021defb0
[0x443652] malloc(13)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 13, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("STATUSLINENC", "NORMAL")      = 5
[0x46fd29] strcmp("STATUSLINENC", "WILDMENU")    = -4
[0x46fd29] strcmp("STATUSLINENC", "WARNINGMSG")  = -4
[0x46fd29] strcmp("STATUSLINENC", "VISUALNOS")   = -3
[0x46fd29] strcmp("STATUSLINENC", "VISUAL")      = -3
[0x46fd29] strcmp("STATUSLINENC", "TITLE")       = -1
[0x46fd29] strcmp("STATUSLINENC", "STATUSLINENC") = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(6)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Title", 5)       = 0x021defb0
[0x443652] malloc(6)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 6, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("TITLE", "NORMAL")             = 6
[0x46fd29] strcmp("TITLE", "WILDMENU")           = -3
[0x46fd29] strcmp("TITLE", "WARNINGMSG")         = -3
[0x46fd29] strcmp("TITLE", "VISUALNOS")          = -2
[0x46fd29] strcmp("TITLE", "VISUAL")             = -2
[0x46fd29] strcmp("TITLE", "TITLE")              = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(7)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Visual", 6)      = 0x021defb0
[0x443652] malloc(7)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 7, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("VISUAL", "NORMAL")            = 8
[0x46fd29] strcmp("VISUAL", "WILDMENU")          = -1
[0x46fd29] strcmp("VISUAL", "WARNINGMSG")        = -1
[0x46fd29] strcmp("VISUAL", "VISUALNOS")         = -78
[0x46fd29] strcmp("VISUAL", "VISUAL")            = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(10)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "VisualNOS", 9)   = 0x021defb0
[0x443652] malloc(10)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 10, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("VISUALNOS", "NORMAL")         = 8
[0x46fd29] strcmp("VISUALNOS", "WILDMENU")       = -1
[0x46fd29] strcmp("VISUALNOS", "WARNINGMSG")     = -1
[0x46fd29] strcmp("VISUALNOS", "VISUALNOS")      = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(11)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "WarningMsg", 10) = 0x021defb0
[0x443652] malloc(11)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 11, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("WARNINGMSG", "NORMAL")        = 9
[0x46fd29] strcmp("WARNINGMSG", "WILDMENU")      = -8
[0x46fd29] strcmp("WARNINGMSG", "WARNINGMSG")    = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(9)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "WildMenu", 8)    = 0x021defb0
[0x443652] malloc(9)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 9, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("WILDMENU", "NORMAL")          = 9
[0x46fd29] strcmp("WILDMENU", "WILDMENU")        = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(11)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "SpecialKey", 10) = 0x021defb0
[0x443652] malloc(11)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 11, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("SPECIALKEY", "NORMAL")        = 5
[0x46fd29] strcmp("SPECIALKEY", "WILDMENU")      = -4
[0x46fd29] strcmp("SPECIALKEY", "WARNINGMSG")    = -4
[0x46fd29] strcmp("SPECIALKEY", "VISUALNOS")     = -3
[0x46fd29] strcmp("SPECIALKEY", "VISUAL")        = -3
[0x46fd29] strcmp("SPECIALKEY", "TITLE")         = -1
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINENC")  = -4
[0x46fd29] strcmp("SPECIALKEY", "STATUSLINE")    = -4
[0x46fd29] strcmp("SPECIALKEY", "QUESTION")      = 2
[0x46fd29] strcmp("SPECIALKEY", "LINENR")        = 7
[0x46fd29] strcmp("SPECIALKEY", "MODEMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "MOREMSG")       = 6
[0x46fd29] strcmp("SPECIALKEY", "SEARCH")        = 11
[0x46fd29] strcmp("SPECIALKEY", "INCSEARCH")     = 10
[0x46fd29] strcmp("SPECIALKEY", "ERRORMSG")      = 14
[0x46fd29] strcmp("SPECIALKEY", "DIRECTORY")     = 15
[0x46fd29] strcmp("SPECIALKEY", "NONTEXT")       = 5
[0x46fd29] strcmp("SPECIALKEY", "SPECIALKEY")    = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(8)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "NonText", 7)     = 0x021defb0
[0x443652] malloc(8)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 8, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("NONTEXT", "NORMAL")           = -4
[0x46fd29] strcmp("NONTEXT", "WILDMENU")         = -9
[0x46fd29] strcmp("NONTEXT", "WARNINGMSG")       = -9
[0x46fd29] strcmp("NONTEXT", "VISUALNOS")        = -8
[0x46fd29] strcmp("NONTEXT", "VISUAL")           = -8
[0x46fd29] strcmp("NONTEXT", "TITLE")            = -6
[0x46fd29] strcmp("NONTEXT", "STATUSLINENC")     = -5
[0x46fd29] strcmp("NONTEXT", "STATUSLINE")       = -5
[0x46fd29] strcmp("NONTEXT", "QUESTION")         = -3
[0x46fd29] strcmp("NONTEXT", "LINENR")           = 2
[0x46fd29] strcmp("NONTEXT", "MODEMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "MOREMSG")          = 1
[0x46fd29] strcmp("NONTEXT", "SEARCH")           = -5
[0x46fd29] strcmp("NONTEXT", "INCSEARCH")        = 5
[0x46fd29] strcmp("NONTEXT", "ERRORMSG")         = 9
[0x46fd29] strcmp("NONTEXT", "DIRECTORY")        = 10
[0x46fd29] strcmp("NONTEXT", "NONTEXT")          = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(10)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Directory", 9)   = 0x021defb0
[0x443652] malloc(10)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 10, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("DIRECTORY", "NORMAL")         = -10
[0x46fd29] strcmp("DIRECTORY", "WILDMENU")       = -19
[0x46fd29] strcmp("DIRECTORY", "WARNINGMSG")     = -19
[0x46fd29] strcmp("DIRECTORY", "VISUALNOS")      = -18
[0x46fd29] strcmp("DIRECTORY", "VISUAL")         = -18
[0x46fd29] strcmp("DIRECTORY", "TITLE")          = -16
[0x46fd29] strcmp("DIRECTORY", "STATUSLINENC")   = -15
[0x46fd29] strcmp("DIRECTORY", "STATUSLINE")     = -15
[0x46fd29] strcmp("DIRECTORY", "QUESTION")       = -13
[0x46fd29] strcmp("DIRECTORY", "LINENR")         = -8
[0x46fd29] strcmp("DIRECTORY", "MODEMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "MOREMSG")        = -9
[0x46fd29] strcmp("DIRECTORY", "SEARCH")         = -15
[0x46fd29] strcmp("DIRECTORY", "INCSEARCH")      = -5
[0x46fd29] strcmp("DIRECTORY", "ERRORMSG")       = -1
[0x46fd29] strcmp("DIRECTORY", "DIRECTORY")      = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(9)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "ErrorMsg", 8)    = 0x021defb0
[0x443652] malloc(9)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 9, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("ERRORMSG", "NORMAL")          = -9
[0x46fd29] strcmp("ERRORMSG", "WILDMENU")        = -18
[0x46fd29] strcmp("ERRORMSG", "WARNINGMSG")      = -18
[0x46fd29] strcmp("ERRORMSG", "VISUALNOS")       = -17
[0x46fd29] strcmp("ERRORMSG", "VISUAL")          = -17
[0x46fd29] strcmp("ERRORMSG", "TITLE")           = -15
[0x46fd29] strcmp("ERRORMSG", "STATUSLINENC")    = -14
[0x46fd29] strcmp("ERRORMSG", "STATUSLINE")      = -14
[0x46fd29] strcmp("ERRORMSG", "QUESTION")        = -12
[0x46fd29] strcmp("ERRORMSG", "LINENR")          = -7
[0x46fd29] strcmp("ERRORMSG", "MODEMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "MOREMSG")         = -8
[0x46fd29] strcmp("ERRORMSG", "SEARCH")          = -14
[0x46fd29] strcmp("ERRORMSG", "INCSEARCH")       = -4
[0x46fd29] strcmp("ERRORMSG", "ERRORMSG")        = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(10)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "IncSearch", 9)   = 0x021defb0
[0x443652] malloc(10)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 10, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("INCSEARCH", "NORMAL")         = -5
[0x46fd29] strcmp("INCSEARCH", "WILDMENU")       = -14
[0x46fd29] strcmp("INCSEARCH", "WARNINGMSG")     = -14
[0x46fd29] strcmp("INCSEARCH", "VISUALNOS")      = -13
[0x46fd29] strcmp("INCSEARCH", "VISUAL")         = -13
[0x46fd29] strcmp("INCSEARCH", "TITLE")          = -11
[0x46fd29] strcmp("INCSEARCH", "STATUSLINENC")   = -10
[0x46fd29] strcmp("INCSEARCH", "STATUSLINE")     = -10
[0x46fd29] strcmp("INCSEARCH", "QUESTION")       = -8
[0x46fd29] strcmp("INCSEARCH", "LINENR")         = -3
[0x46fd29] strcmp("INCSEARCH", "MODEMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "MOREMSG")        = -4
[0x46fd29] strcmp("INCSEARCH", "SEARCH")         = -10
[0x46fd29] strcmp("INCSEARCH", "INCSEARCH")      = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(7)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Search", 6)      = 0x021defb0
[0x443652] malloc(7)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 7, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("SEARCH", "NORMAL")            = 5
[0x46fd29] strcmp("SEARCH", "WILDMENU")          = -4
[0x46fd29] strcmp("SEARCH", "WARNINGMSG")        = -4
[0x46fd29] strcmp("SEARCH", "VISUALNOS")         = -3
[0x46fd29] strcmp("SEARCH", "VISUAL")            = -3
[0x46fd29] strcmp("SEARCH", "TITLE")             = -1
[0x46fd29] strcmp("SEARCH", "STATUSLINENC")      = -15
[0x46fd29] strcmp("SEARCH", "STATUSLINE")        = -15
[0x46fd29] strcmp("SEARCH", "QUESTION")          = 2
[0x46fd29] strcmp("SEARCH", "LINENR")            = 7
[0x46fd29] strcmp("SEARCH", "MODEMSG")           = 6
[0x46fd29] strcmp("SEARCH", "MOREMSG")           = 6
[0x46fd29] strcmp("SEARCH", "SEARCH")            = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(8)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "MoreMsg", 7)     = 0x021defb0
[0x443652] malloc(8)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 8, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("MOREMSG", "NORMAL")           = -1
[0x46fd29] strcmp("MOREMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MOREMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MOREMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MOREMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MOREMSG", "TITLE")            = -7
[0x46fd29] strcmp("MOREMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MOREMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MOREMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MOREMSG", "LINENR")           = 1
[0x46fd29] strcmp("MOREMSG", "MODEMSG")          = 14
[0x46fd29] strcmp("MOREMSG", "MOREMSG")          = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(8)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "ModeMsg", 7)     = 0x021defb0
[0x443652] malloc(8)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 8, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("MODEMSG", "NORMAL")           = -1
[0x46fd29] strcmp("MODEMSG", "WILDMENU")         = -10
[0x46fd29] strcmp("MODEMSG", "WARNINGMSG")       = -10
[0x46fd29] strcmp("MODEMSG", "VISUALNOS")        = -9
[0x46fd29] strcmp("MODEMSG", "VISUAL")           = -9
[0x46fd29] strcmp("MODEMSG", "TITLE")            = -7
[0x46fd29] strcmp("MODEMSG", "STATUSLINENC")     = -6
[0x46fd29] strcmp("MODEMSG", "STATUSLINE")       = -6
[0x46fd29] strcmp("MODEMSG", "QUESTION")         = -4
[0x46fd29] strcmp("MODEMSG", "LINENR")           = 1
[0x46fd29] strcmp("MODEMSG", "MODEMSG")          = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(7)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "LineNr", 6)      = 0x021defb0
[0x443652] malloc(7)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 7, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("LINENR", "NORMAL")            = -2
[0x46fd29] strcmp("LINENR", "WILDMENU")          = -11
[0x46fd29] strcmp("LINENR", "WARNINGMSG")        = -11
[0x46fd29] strcmp("LINENR", "VISUALNOS")         = -10
[0x46fd29] strcmp("LINENR", "VISUAL")            = -10
[0x46fd29] strcmp("LINENR", "TITLE")             = -8
[0x46fd29] strcmp("LINENR", "STATUSLINENC")      = -7
[0x46fd29] strcmp("LINENR", "STATUSLINE")        = -7
[0x46fd29] strcmp("LINENR", "QUESTION")          = -5
[0x46fd29] strcmp("LINENR", "LINENR")            = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(9)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Question", 8)    = 0x021defb0
[0x443652] malloc(9)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 9, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("QUESTION", "NORMAL")          = 3
[0x46fd29] strcmp("QUESTION", "WILDMENU")        = -6
[0x46fd29] strcmp("QUESTION", "WARNINGMSG")      = -6
[0x46fd29] strcmp("QUESTION", "VISUALNOS")       = -5
[0x46fd29] strcmp("QUESTION", "VISUAL")          = -5
[0x46fd29] strcmp("QUESTION", "TITLE")           = -3
[0x46fd29] strcmp("QUESTION", "STATUSLINENC")    = -2
[0x46fd29] strcmp("QUESTION", "STATUSLINE")      = -2
[0x46fd29] strcmp("QUESTION", "QUESTION")        = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(11)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "StatusLine", 10) = 0x021defb0
[0x443652] malloc(11)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 11, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("STATUSLINE", "NORMAL")        = 5
[0x46fd29] strcmp("STATUSLINE", "WILDMENU")      = -4
[0x46fd29] strcmp("STATUSLINE", "WARNINGMSG")    = -4
[0x46fd29] strcmp("STATUSLINE", "VISUALNOS")     = -3
[0x46fd29] strcmp("STATUSLINE", "VISUAL")        = -3
[0x46fd29] strcmp("STATUSLINE", "TITLE")         = -1
[0x46fd29] strcmp("STATUSLINE", "STATUSLINENC")  = -78
[0x46fd29] strcmp("STATUSLINE", "STATUSLINE")    = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(13)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "StatusLineNC", 12) = 0x021defb0
[0x443652] malloc(13)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 13, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("STATUSLINENC", "NORMAL")      = 5
[0x46fd29] strcmp("STATUSLINENC", "WILDMENU")    = -4
[0x46fd29] strcmp("STATUSLINENC", "WARNINGMSG")  = -4
[0x46fd29] strcmp("STATUSLINENC", "VISUALNOS")   = -3
[0x46fd29] strcmp("STATUSLINENC", "VISUAL")      = -3
[0x46fd29] strcmp("STATUSLINENC", "TITLE")       = -1
[0x46fd29] strcmp("STATUSLINENC", "STATUSLINENC") = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(6)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Title", 5)       = 0x021defb0
[0x443652] malloc(6)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 6, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("TITLE", "NORMAL")             = 6
[0x46fd29] strcmp("TITLE", "WILDMENU")           = -3
[0x46fd29] strcmp("TITLE", "WARNINGMSG")         = -3
[0x46fd29] strcmp("TITLE", "VISUALNOS")          = -2
[0x46fd29] strcmp("TITLE", "VISUAL")             = -2
[0x46fd29] strcmp("TITLE", "TITLE")              = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(7)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "Visual", 6)      = 0x021defb0
[0x443652] malloc(7)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 7, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("VISUAL", "NORMAL")            = 8
[0x46fd29] strcmp("VISUAL", "WILDMENU")          = -1
[0x46fd29] strcmp("VISUAL", "WARNINGMSG")        = -1
[0x46fd29] strcmp("VISUAL", "VISUALNOS")         = -78
[0x46fd29] strcmp("VISUAL", "VISUAL")            = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(10)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "VisualNOS", 9)   = 0x021defb0
[0x443652] malloc(10)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 10, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("VISUALNOS", "NORMAL")         = 8
[0x46fd29] strcmp("VISUALNOS", "WILDMENU")       = -1
[0x46fd29] strcmp("VISUALNOS", "WARNINGMSG")     = -1
[0x46fd29] strcmp("VISUALNOS", "VISUALNOS")      = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(11)                            = 0x021defb0
[0x4437da] strncpy(0x021defb0, "WarningMsg", 10) = 0x021defb0
[0x443652] malloc(11)                            = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 11, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("WARNINGMSG", "NORMAL")        = 9
[0x46fd29] strcmp("WARNINGMSG", "WILDMENU")      = -8
[0x46fd29] strcmp("WARNINGMSG", "WARNINGMSG")    = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(9)                             = 0x021defb0
[0x4437da] strncpy(0x021defb0, "WildMenu", 8)    = 0x021defb0
[0x443652] malloc(9)                             = 0x021defd0
[0x44378b] memmove(0x21defd0, 0x21defb0, 9, 0x7fc3b3739728, 0) = 0x21defd0
[0x46fd29] strcmp("WILDMENU", "NORMAL")          = 9
[0x46fd29] strcmp("WILDMENU", "WILDMENU")        = 0
[0x443968] free(0x021defd0)                      = <void>
[0x443968] free(0x021defb0)                      = <void>
[0x443652] malloc(2016)                          = 0x021defb0
[0x44371c] memset(0x021defb0, '\000', 2016)      = 0x021defb0
[0x443c2d] memmove(0x21defb0, 0x21d27b0, 1296, -30, 96) = 0x21defb0
[0x443968] free(0x021d27b0)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 1) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 33, 0) = 0x21def20
[0x46fd29] strcmp("USER1", "NORMAL")             = 7
[0x46fd29] strcmp("USER1", "WILDMENU")           = -2
[0x46fd29] strcmp("USER1", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER1", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER1", "VISUAL")             = -1
[0x46fd29] strcmp("USER1", "TITLE")              = 1
[0x46fd29] strcmp("USER1", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER1", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER1", "QUESTION")           = 4
[0x46fd29] strcmp("USER1", "LINENR")             = 9
[0x46fd29] strcmp("USER1", "MODEMSG")            = 8
[0x46fd29] strcmp("USER1", "MOREMSG")            = 8
[0x46fd29] strcmp("USER1", "SEARCH")             = 2
[0x46fd29] strcmp("USER1", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER1", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER1", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER1", "NONTEXT")            = 7
[0x46fd29] strcmp("USER1", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 2) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER2", "NORMAL")             = 7
[0x46fd29] strcmp("USER2", "WILDMENU")           = -2
[0x46fd29] strcmp("USER2", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER2", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER2", "VISUAL")             = -1
[0x46fd29] strcmp("USER2", "TITLE")              = 1
[0x46fd29] strcmp("USER2", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER2", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER2", "QUESTION")           = 4
[0x46fd29] strcmp("USER2", "LINENR")             = 9
[0x46fd29] strcmp("USER2", "MODEMSG")            = 8
[0x46fd29] strcmp("USER2", "MOREMSG")            = 8
[0x46fd29] strcmp("USER2", "SEARCH")             = 2
[0x46fd29] strcmp("USER2", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER2", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER2", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER2", "NONTEXT")            = 7
[0x46fd29] strcmp("USER2", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 3) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER3", "NORMAL")             = 7
[0x46fd29] strcmp("USER3", "WILDMENU")           = -2
[0x46fd29] strcmp("USER3", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER3", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER3", "VISUAL")             = -1
[0x46fd29] strcmp("USER3", "TITLE")              = 1
[0x46fd29] strcmp("USER3", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER3", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER3", "QUESTION")           = 4
[0x46fd29] strcmp("USER3", "LINENR")             = 9
[0x46fd29] strcmp("USER3", "MODEMSG")            = 8
[0x46fd29] strcmp("USER3", "MOREMSG")            = 8
[0x46fd29] strcmp("USER3", "SEARCH")             = 2
[0x46fd29] strcmp("USER3", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER3", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER3", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER3", "NONTEXT")            = 7
[0x46fd29] strcmp("USER3", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 4) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER4", "NORMAL")             = 7
[0x46fd29] strcmp("USER4", "WILDMENU")           = -2
[0x46fd29] strcmp("USER4", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER4", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER4", "VISUAL")             = -1
[0x46fd29] strcmp("USER4", "TITLE")              = 1
[0x46fd29] strcmp("USER4", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER4", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER4", "QUESTION")           = 4
[0x46fd29] strcmp("USER4", "LINENR")             = 9
[0x46fd29] strcmp("USER4", "MODEMSG")            = 8
[0x46fd29] strcmp("USER4", "MOREMSG")            = 8
[0x46fd29] strcmp("USER4", "SEARCH")             = 2
[0x46fd29] strcmp("USER4", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER4", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER4", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER4", "NONTEXT")            = 7
[0x46fd29] strcmp("USER4", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 5) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER5", "NORMAL")             = 7
[0x46fd29] strcmp("USER5", "WILDMENU")           = -2
[0x46fd29] strcmp("USER5", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER5", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER5", "VISUAL")             = -1
[0x46fd29] strcmp("USER5", "TITLE")              = 1
[0x46fd29] strcmp("USER5", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER5", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER5", "QUESTION")           = 4
[0x46fd29] strcmp("USER5", "LINENR")             = 9
[0x46fd29] strcmp("USER5", "MODEMSG")            = 8
[0x46fd29] strcmp("USER5", "MOREMSG")            = 8
[0x46fd29] strcmp("USER5", "SEARCH")             = 2
[0x46fd29] strcmp("USER5", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER5", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER5", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER5", "NONTEXT")            = 7
[0x46fd29] strcmp("USER5", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 6) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER6", "NORMAL")             = 7
[0x46fd29] strcmp("USER6", "WILDMENU")           = -2
[0x46fd29] strcmp("USER6", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER6", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER6", "VISUAL")             = -1
[0x46fd29] strcmp("USER6", "TITLE")              = 1
[0x46fd29] strcmp("USER6", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER6", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER6", "QUESTION")           = 4
[0x46fd29] strcmp("USER6", "LINENR")             = 9
[0x46fd29] strcmp("USER6", "MODEMSG")            = 8
[0x46fd29] strcmp("USER6", "MOREMSG")            = 8
[0x46fd29] strcmp("USER6", "SEARCH")             = 2
[0x46fd29] strcmp("USER6", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER6", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER6", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER6", "NONTEXT")            = 7
[0x46fd29] strcmp("USER6", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 7) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER7", "NORMAL")             = 7
[0x46fd29] strcmp("USER7", "WILDMENU")           = -2
[0x46fd29] strcmp("USER7", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER7", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER7", "VISUAL")             = -1
[0x46fd29] strcmp("USER7", "TITLE")              = 1
[0x46fd29] strcmp("USER7", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER7", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER7", "QUESTION")           = 4
[0x46fd29] strcmp("USER7", "LINENR")             = 9
[0x46fd29] strcmp("USER7", "MODEMSG")            = 8
[0x46fd29] strcmp("USER7", "MOREMSG")            = 8
[0x46fd29] strcmp("USER7", "SEARCH")             = 2
[0x46fd29] strcmp("USER7", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER7", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER7", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER7", "NONTEXT")            = 7
[0x46fd29] strcmp("USER7", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 8) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER8", "NORMAL")             = 7
[0x46fd29] strcmp("USER8", "WILDMENU")           = -2
[0x46fd29] strcmp("USER8", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER8", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER8", "VISUAL")             = -1
[0x46fd29] strcmp("USER8", "TITLE")              = 1
[0x46fd29] strcmp("USER8", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER8", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER8", "QUESTION")           = 4
[0x46fd29] strcmp("USER8", "LINENR")             = 9
[0x46fd29] strcmp("USER8", "MODEMSG")            = 8
[0x46fd29] strcmp("USER8", "MOREMSG")            = 8
[0x46fd29] strcmp("USER8", "SEARCH")             = 2
[0x46fd29] strcmp("USER8", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER8", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER8", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER8", "NONTEXT")            = 7
[0x46fd29] strcmp("USER8", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x474b56] __sprintf_chk(0x7ffff30fc840, 1, 10, 0x48c492, 9) = 5
[0x443652] malloc(6)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x7ffff30fc840, 6, 0x7fc3b3739728, 0) = 0x21def20
[0x46fd29] strcmp("USER9", "NORMAL")             = 7
[0x46fd29] strcmp("USER9", "WILDMENU")           = -2
[0x46fd29] strcmp("USER9", "WARNINGMSG")         = -2
[0x46fd29] strcmp("USER9", "VISUALNOS")          = -1
[0x46fd29] strcmp("USER9", "VISUAL")             = -1
[0x46fd29] strcmp("USER9", "TITLE")              = 1
[0x46fd29] strcmp("USER9", "STATUSLINENC")       = 2
[0x46fd29] strcmp("USER9", "STATUSLINE")         = 2
[0x46fd29] strcmp("USER9", "QUESTION")           = 4
[0x46fd29] strcmp("USER9", "LINENR")             = 9
[0x46fd29] strcmp("USER9", "MODEMSG")            = 8
[0x46fd29] strcmp("USER9", "MOREMSG")            = 8
[0x46fd29] strcmp("USER9", "SEARCH")             = 2
[0x46fd29] strcmp("USER9", "INCSEARCH")          = 12
[0x46fd29] strcmp("USER9", "ERRORMSG")           = 16
[0x46fd29] strcmp("USER9", "DIRECTORY")          = 17
[0x46fd29] strcmp("USER9", "NONTEXT")            = 7
[0x46fd29] strcmp("USER9", "SPECIALKEY")         = 2
[0x443968] free(0x021def20)                      = <void>
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 97, 0) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 107, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 2)    = "\033[3;1H"
[0x47849c] tputs("\033[3;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 3)    = "\033[4;1H"
[0x47849c] tputs("\033[4;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 4)    = "\033[5;1H"
[0x47849c] tputs("\033[5;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 5)    = "\033[6;1H"
[0x47849c] tputs("\033[6;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 97, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 99, 25) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 8, 12)   = "\033[13;9H"
[0x47849c] tputs("\033[13;9H", 1, 0x004783ae)    = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 102, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 115, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 106, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 100, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 101, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x21d39d2)   = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x21d39d2)    = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x457e93] write(1, "\033[1;1HDSARITA ma\r\na;lkdjf ;lajd "..., 562) = 562
[0x457c43] __fdelt_chk(0, 4000, 16, 0, 0x7ffff30fc720) = 0
[0x457c6b] __fdelt_chk(0, 4000, 1, 0, 0x7ffff30fc720) = 0
[0x457c9f] select(1, 0x7ffff30fc500, 0, 0x7ffff30fc580, 0x7ffff30fc600) = 1
[0x457c43] __fdelt_chk(0, -1, 16, 0, 0x7ffff30fc600) = 0
[0x457c6b] __fdelt_chk(0, -1, 1, 0, 0x7ffff30fc600) = 0
[0x457c9f] select(1, 0x7ffff30fc500, 0, 0x7ffff30fc580, 0) = 1
[0x47b0c9] read(0, ":se lines=24\r:se columns=80\r:red"..., 250) = 70
[0x47b219] memmove(0x6a7280, 0x6aa5e0, 70, -1, 0) = 0x6a7280
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0)            = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x443652] malloc(100)                           = 0x021d27b0
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x47849c] tputs("\033[K", 1, 0x004783ae)        = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 1)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 1)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b1, 0x21d27b0, 0, 1, 0x6a7280) = 0x21d27b1
[0x42318f] memmove(0x21d27b0, 0x21cffe0, 1, 1, 0x6a7280) = 0x21d27b0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 2)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 2)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b2, 0x21d27b1, 0, 2, 0x6a7280) = 0x21d27b2
[0x42318f] memmove(0x21d27b1, 0x21cffe0, 1, 2, 0x6a7280) = 0x21d27b1
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b3, 0x21d27b2, 0, 3, 0x6a7280) = 0x21d27b3
[0x42318f] memmove(0x21d27b2, 0x21cffe0, 1, 3, 0x6a7280) = 0x21d27b2
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b4, 0x21d27b3, 0, 4, 0x6a7280) = 0x21d27b4
[0x42318f] memmove(0x21d27b3, 0x21cffe0, 1, 4, 0x6a7280) = 0x21d27b3
[0x457c43] __fdelt_chk(0, 0, 16, 0, 5)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 5)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b5, 0x21d27b4, 0, 5, 0x6a7280) = 0x21d27b5
[0x42318f] memmove(0x21d27b4, 0x21cffe0, 1, 5, 0x6a7280) = 0x21d27b4
[0x457c43] __fdelt_chk(0, 0, 16, 0, 6)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 6)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b6, 0x21d27b5, 0, 6, 0x6a7280) = 0x21d27b6
[0x42318f] memmove(0x21d27b5, 0x21cffe0, 1, 6, 0x6a7280) = 0x21d27b5
[0x457c43] __fdelt_chk(0, 0, 16, 0, 7)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 7)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b7, 0x21d27b6, 0, 7, 0x6a7280) = 0x21d27b7
[0x42318f] memmove(0x21d27b6, 0x21cffe0, 1, 7, 0x6a7280) = 0x21d27b6
[0x457c43] __fdelt_chk(0, 0, 16, 0, 8)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 8)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b8, 0x21d27b7, 0, 8, 0x6a7280) = 0x21d27b8
[0x42318f] memmove(0x21d27b7, 0x21cffe0, 1, 8, 0x6a7280) = 0x21d27b7
[0x457c43] __fdelt_chk(0, 0, 16, 0, 9)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 9)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b9, 0x21d27b8, 0, 9, 0x6a7280) = 0x21d27b9
[0x42318f] memmove(0x21d27b8, 0x21cffe0, 1, 9, 0x6a7280) = 0x21d27b8
[0x457c43] __fdelt_chk(0, 0, 16, 0, 10)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 10)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27ba, 0x21d27b9, 0, 10, 0x6a7280) = 0x21d27ba
[0x42318f] memmove(0x21d27b9, 0x21cffe0, 1, 10, 0x6a7280) = 0x21d27b9
[0x457c43] __fdelt_chk(0, 0, 16, 0, 11)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 11)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bb, 0x21d27ba, 0, 11, 0x6a7280) = 0x21d27bb
[0x42318f] memmove(0x21d27ba, 0x21cffe0, 1, 11, 0x6a7280) = 0x21d27ba
[0x457c43] __fdelt_chk(0, 0, 16, 0, 12)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 12)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x457e93] write(1, "\033[?25l\033[24;1H\033[K\033[24;1H:se lines"..., 36) = 36
[0x443652] malloc(12)                            = 0x021def20
[0x44378b] memmove(0x21def20, 0x21d27b0, 12, 0x7fc3b3739728, 0) = 0x21def20
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("substitute", "se lines=24", 2) = 16
[0x41d6e6] strncmp("sNext", "se lines=24", 2)    = -23
[0x41d6e6] strncmp("sargument", "se lines=24", 2) = -4
[0x41d6e6] strncmp("sall", "se lines=24", 2)     = -4
[0x41d6e6] strncmp("sbuffer", "se lines=24", 2)  = -3
[0x41d6e6] strncmp("sbNext", "se lines=24", 2)   = -3
[0x41d6e6] strncmp("sball", "se lines=24", 2)    = -3
[0x41d6e6] strncmp("sblast", "se lines=24", 2)   = -3
[0x41d6e6] strncmp("sbmodified", "se lines=24", 2) = -3
[0x41d6e6] strncmp("sbnext", "se lines=24", 2)   = -3
[0x41d6e6] strncmp("sbprevious", "se lines=24", 2) = -3
[0x41d6e6] strncmp("sbrewind", "se lines=24", 2) = -3
[0x41d6e6] strncmp("set", "se lines=24", 2)      = 0
[0x455e15] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4521b8] strcmp("lines", "langmap")            = 8
[0x4521b8] strcmp("lines", "laststatus")         = 8
[0x4521b8] strcmp("lines", "lazyredraw")         = 8
[0x4521b8] strcmp("lines", "linebreak")          = 17
[0x4521b8] strcmp("lines", "lines")              = 0
[0x456391] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4563c7] strtol(0x21d27b9, 0, 0, 61, 0)        = 24
[0x4563fe] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x443968] free(0x021d27b0)                      = <void>
[0x47849c] tputs("\033[H\033[2J", 1, 0x004783ae) = 0
[0x45f6d2] memset(0x021d7c00, ' ', 80)           = 0x021d7c00
[0x45f6e7] memset(0x021d7c50, '\000', 80)        = 0x021d7c50
[0x45f6d2] memset(0x021d7ca0, ' ', 80)           = 0x021d7ca0
[0x45f6e7] memset(0x021d7cf0, '\000', 80)        = 0x021d7cf0
[0x45f6d2] memset(0x021d7d40, ' ', 80)           = 0x021d7d40
[0x45f6e7] memset(0x021d7d90, '\000', 80)        = 0x021d7d90
[0x45f6d2] memset(0x021d7de0, ' ', 80)           = 0x021d7de0
[0x45f6e7] memset(0x021d7e30, '\000', 80)        = 0x021d7e30
[0x45f6d2] memset(0x021d7e80, ' ', 80)           = 0x021d7e80
[0x45f6e7] memset(0x021d7ed0, '\000', 80)        = 0x021d7ed0
[0x45f6d2] memset(0x021d7f20, ' ', 80)           = 0x021d7f20
[0x45f6e7] memset(0x021d7f70, '\000', 80)        = 0x021d7f70
[0x45f6d2] memset(0x021d7fc0, ' ', 80)           = 0x021d7fc0
[0x45f6e7] memset(0x021d8010, '\000', 80)        = 0x021d8010
[0x45f6d2] memset(0x021d8060, ' ', 80)           = 0x021d8060
[0x45f6e7] memset(0x021d80b0, '\000', 80)        = 0x021d80b0
[0x45f6d2] memset(0x021d8100, ' ', 80)           = 0x021d8100
[0x45f6e7] memset(0x021d8150, '\000', 80)        = 0x021d8150
[0x45f6d2] memset(0x021d81a0, ' ', 80)           = 0x021d81a0
[0x45f6e7] memset(0x021d81f0, '\000', 80)        = 0x021d81f0
[0x45f6d2] memset(0x021d8240, ' ', 80)           = 0x021d8240
[0x45f6e7] memset(0x021d8290, '\000', 80)        = 0x021d8290
[0x45f6d2] memset(0x021d82e0, ' ', 80)           = 0x021d82e0
[0x45f6e7] memset(0x021d8330, '\000', 80)        = 0x021d8330
[0x45f6d2] memset(0x021d8380, ' ', 80)           = 0x021d8380
[0x45f6e7] memset(0x021d83d0, '\000', 80)        = 0x021d83d0
[0x45f6d2] memset(0x021d8420, ' ', 80)           = 0x021d8420
[0x45f6e7] memset(0x021d8470, '\000', 80)        = 0x021d8470
[0x45f6d2] memset(0x021d84c0, ' ', 80)           = 0x021d84c0
[0x45f6e7] memset(0x021d8510, '\000', 80)        = 0x021d8510
[0x45f6d2] memset(0x021d8560, ' ', 80)           = 0x021d8560
[0x45f6e7] memset(0x021d85b0, '\000', 80)        = 0x021d85b0
[0x45f6d2] memset(0x021d8600, ' ', 80)           = 0x021d8600
[0x45f6e7] memset(0x021d8650, '\000', 80)        = 0x021d8650
[0x45f6d2] memset(0x021d86a0, ' ', 80)           = 0x021d86a0
[0x45f6e7] memset(0x021d86f0, '\000', 80)        = 0x021d86f0
[0x45f6d2] memset(0x021d8740, ' ', 80)           = 0x021d8740
[0x45f6e7] memset(0x021d8790, '\000', 80)        = 0x021d8790
[0x45f6d2] memset(0x021d87e0, ' ', 80)           = 0x021d87e0
[0x45f6e7] memset(0x021d8830, '\000', 80)        = 0x021d8830
[0x45f6d2] memset(0x021d8880, ' ', 80)           = 0x021d8880
[0x45f6e7] memset(0x021d88d0, '\000', 80)        = 0x021d88d0
[0x45f6d2] memset(0x021d8920, ' ', 80)           = 0x021d8920
[0x45f6e7] memset(0x021d8970, '\000', 80)        = 0x021d8970
[0x45f6d2] memset(0x021d89c0, ' ', 80)           = 0x021d89c0
[0x45f6e7] memset(0x021d8a10, '\000', 80)        = 0x021d8a10
[0x45f6d2] memset(0x021d8a60, ' ', 80)           = 0x021d8a60
[0x45f6e7] memset(0x021d8ab0, '\000', 80)        = 0x021d8ab0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 97, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 107, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 2)    = "\033[3;1H"
[0x47849c] tputs("\033[3;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 3)    = "\033[4;1H"
[0x47849c] tputs("\033[4;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 4)    = "\033[5;1H"
[0x47849c] tputs("\033[5;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 5)    = "\033[6;1H"
[0x47849c] tputs("\033[6;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 97, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 99, 25) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 8, 12)   = "\033[13;9H"
[0x47849c] tputs("\033[13;9H", 1, 0x004783ae)    = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 102, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 115, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 106, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 100, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 101, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x21d39d2)   = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x21d39d2)    = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x443652] malloc(100)                           = 0x021d27b0
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 1)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 1)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b1, 0x21d27b0, 0, 1, 0x6a7280) = 0x21d27b1
[0x42318f] memmove(0x21d27b0, 0x21cffe0, 1, 1, 0x6a7280) = 0x21d27b0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 2)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 2)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b2, 0x21d27b1, 0, 2, 0x6a7280) = 0x21d27b2
[0x42318f] memmove(0x21d27b1, 0x21cffe0, 1, 2, 0x6a7280) = 0x21d27b1
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b3, 0x21d27b2, 0, 3, 0x6a7280) = 0x21d27b3
[0x42318f] memmove(0x21d27b2, 0x21cffe0, 1, 3, 0x6a7280) = 0x21d27b2
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b4, 0x21d27b3, 0, 4, 0x6a7280) = 0x21d27b4
[0x42318f] memmove(0x21d27b3, 0x21cffe0, 1, 4, 0x6a7280) = 0x21d27b3
[0x457c43] __fdelt_chk(0, 0, 16, 0, 5)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 5)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b5, 0x21d27b4, 0, 5, 0x6a7280) = 0x21d27b5
[0x42318f] memmove(0x21d27b4, 0x21cffe0, 1, 5, 0x6a7280) = 0x21d27b4
[0x457c43] __fdelt_chk(0, 0, 16, 0, 6)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 6)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b6, 0x21d27b5, 0, 6, 0x6a7280) = 0x21d27b6
[0x42318f] memmove(0x21d27b5, 0x21cffe0, 1, 6, 0x6a7280) = 0x21d27b5
[0x457c43] __fdelt_chk(0, 0, 16, 0, 7)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 7)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b7, 0x21d27b6, 0, 7, 0x6a7280) = 0x21d27b7
[0x42318f] memmove(0x21d27b6, 0x21cffe0, 1, 7, 0x6a7280) = 0x21d27b6
[0x457c43] __fdelt_chk(0, 0, 16, 0, 8)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 8)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b8, 0x21d27b7, 0, 8, 0x6a7280) = 0x21d27b8
[0x42318f] memmove(0x21d27b7, 0x21cffe0, 1, 8, 0x6a7280) = 0x21d27b7
[0x457c43] __fdelt_chk(0, 0, 16, 0, 9)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 9)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b9, 0x21d27b8, 0, 9, 0x6a7280) = 0x21d27b9
[0x42318f] memmove(0x21d27b8, 0x21cffe0, 1, 9, 0x6a7280) = 0x21d27b8
[0x457c43] __fdelt_chk(0, 0, 16, 0, 10)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 10)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27ba, 0x21d27b9, 0, 10, 0x6a7280) = 0x21d27ba
[0x42318f] memmove(0x21d27b9, 0x21cffe0, 1, 10, 0x6a7280) = 0x21d27b9
[0x457c43] __fdelt_chk(0, 0, 16, 0, 11)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 11)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bb, 0x21d27ba, 0, 11, 0x6a7280) = 0x21d27bb
[0x42318f] memmove(0x21d27ba, 0x21cffe0, 1, 11, 0x6a7280) = 0x21d27ba
[0x457c43] __fdelt_chk(0, 0, 16, 0, 12)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 12)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bc, 0x21d27bb, 0, 12, 0x6a7280) = 0x21d27bc
[0x42318f] memmove(0x21d27bb, 0x21cffe0, 1, 12, 0x6a7280) = 0x21d27bb
[0x457c43] __fdelt_chk(0, 0, 16, 0, 13)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 13)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bd, 0x21d27bc, 0, 13, 0x6a7280) = 0x21d27bd
[0x42318f] memmove(0x21d27bc, 0x21cffe0, 1, 13, 0x6a7280) = 0x21d27bc
[0x457c43] __fdelt_chk(0, 0, 16, 0, 14)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 14)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x457e93] write(1, "\033[H\033[2J\033[1;1HDSARITA ma\r\na;lkdjf"..., 597) = 597
[0x443652] malloc(14)                            = 0x021def40
[0x44378b] memmove(0x21def40, 0x21d27b0, 14, -15, 2) = 0x21def40
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("substitute", "se columns=80", 2) = 16
[0x41d6e6] strncmp("sNext", "se columns=80", 2)  = -23
[0x41d6e6] strncmp("sargument", "se columns=80", 2) = -4
[0x41d6e6] strncmp("sall", "se columns=80", 2)   = -4
[0x41d6e6] strncmp("sbuffer", "se columns=80", 2) = -3
[0x41d6e6] strncmp("sbNext", "se columns=80", 2) = -3
[0x41d6e6] strncmp("sball", "se columns=80", 2)  = -3
[0x41d6e6] strncmp("sblast", "se columns=80", 2) = -3
[0x41d6e6] strncmp("sbmodified", "se columns=80", 2) = -3
[0x41d6e6] strncmp("sbnext", "se columns=80", 2) = -3
[0x41d6e6] strncmp("sbprevious", "se columns=80", 2) = -3
[0x41d6e6] strncmp("sbrewind", "se columns=80", 2) = -3
[0x41d6e6] strncmp("set", "se columns=80", 2)    = 0
[0x455e15] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4521b8] strcmp("columns", "cindent")          = 6
[0x4521b8] strcmp("columns", "cinkeys")          = 6
[0x4521b8] strcmp("columns", "cinoptions")       = 6
[0x4521b8] strcmp("columns", "cinwords")         = 6
[0x4521b8] strcmp("columns", "clipboard")        = 3
[0x4521b8] strcmp("columns", "cmdheight")        = 2
[0x4521b8] strcmp("columns", "columns")          = 0
[0x456391] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4563c7] strtol(0x21d27bb, 0, 0, 61, 0)        = 80
[0x4563fe] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x443968] free(0x021d27b0)                      = <void>
[0x443968] free(0x021def20)                      = <void>
[0x47849c] tputs("\033[H\033[2J", 1, 0x004783ae) = 0
[0x45f6d2] memset(0x021d7c00, ' ', 80)           = 0x021d7c00
[0x45f6e7] memset(0x021d7c50, '\000', 80)        = 0x021d7c50
[0x45f6d2] memset(0x021d7ca0, ' ', 80)           = 0x021d7ca0
[0x45f6e7] memset(0x021d7cf0, '\000', 80)        = 0x021d7cf0
[0x45f6d2] memset(0x021d7d40, ' ', 80)           = 0x021d7d40
[0x45f6e7] memset(0x021d7d90, '\000', 80)        = 0x021d7d90
[0x45f6d2] memset(0x021d7de0, ' ', 80)           = 0x021d7de0
[0x45f6e7] memset(0x021d7e30, '\000', 80)        = 0x021d7e30
[0x45f6d2] memset(0x021d7e80, ' ', 80)           = 0x021d7e80
[0x45f6e7] memset(0x021d7ed0, '\000', 80)        = 0x021d7ed0
[0x45f6d2] memset(0x021d7f20, ' ', 80)           = 0x021d7f20
[0x45f6e7] memset(0x021d7f70, '\000', 80)        = 0x021d7f70
[0x45f6d2] memset(0x021d7fc0, ' ', 80)           = 0x021d7fc0
[0x45f6e7] memset(0x021d8010, '\000', 80)        = 0x021d8010
[0x45f6d2] memset(0x021d8060, ' ', 80)           = 0x021d8060
[0x45f6e7] memset(0x021d80b0, '\000', 80)        = 0x021d80b0
[0x45f6d2] memset(0x021d8100, ' ', 80)           = 0x021d8100
[0x45f6e7] memset(0x021d8150, '\000', 80)        = 0x021d8150
[0x45f6d2] memset(0x021d81a0, ' ', 80)           = 0x021d81a0
[0x45f6e7] memset(0x021d81f0, '\000', 80)        = 0x021d81f0
[0x45f6d2] memset(0x021d8240, ' ', 80)           = 0x021d8240
[0x45f6e7] memset(0x021d8290, '\000', 80)        = 0x021d8290
[0x45f6d2] memset(0x021d82e0, ' ', 80)           = 0x021d82e0
[0x45f6e7] memset(0x021d8330, '\000', 80)        = 0x021d8330
[0x45f6d2] memset(0x021d8380, ' ', 80)           = 0x021d8380
[0x45f6e7] memset(0x021d83d0, '\000', 80)        = 0x021d83d0
[0x45f6d2] memset(0x021d8420, ' ', 80)           = 0x021d8420
[0x45f6e7] memset(0x021d8470, '\000', 80)        = 0x021d8470
[0x45f6d2] memset(0x021d84c0, ' ', 80)           = 0x021d84c0
[0x45f6e7] memset(0x021d8510, '\000', 80)        = 0x021d8510
[0x45f6d2] memset(0x021d8560, ' ', 80)           = 0x021d8560
[0x45f6e7] memset(0x021d85b0, '\000', 80)        = 0x021d85b0
[0x45f6d2] memset(0x021d8600, ' ', 80)           = 0x021d8600
[0x45f6e7] memset(0x021d8650, '\000', 80)        = 0x021d8650
[0x45f6d2] memset(0x021d86a0, ' ', 80)           = 0x021d86a0
[0x45f6e7] memset(0x021d86f0, '\000', 80)        = 0x021d86f0
[0x45f6d2] memset(0x021d8740, ' ', 80)           = 0x021d8740
[0x45f6e7] memset(0x021d8790, '\000', 80)        = 0x021d8790
[0x45f6d2] memset(0x021d87e0, ' ', 80)           = 0x021d87e0
[0x45f6e7] memset(0x021d8830, '\000', 80)        = 0x021d8830
[0x45f6d2] memset(0x021d8880, ' ', 80)           = 0x021d8880
[0x45f6e7] memset(0x021d88d0, '\000', 80)        = 0x021d88d0
[0x45f6d2] memset(0x021d8920, ' ', 80)           = 0x021d8920
[0x45f6e7] memset(0x021d8970, '\000', 80)        = 0x021d8970
[0x45f6d2] memset(0x021d89c0, ' ', 80)           = 0x021d89c0
[0x45f6e7] memset(0x021d8a10, '\000', 80)        = 0x021d8a10
[0x45f6d2] memset(0x021d8a60, ' ', 80)           = 0x021d8a60
[0x45f6e7] memset(0x021d8ab0, '\000', 80)        = 0x021d8ab0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 97, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 107, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 2)    = "\033[3;1H"
[0x47849c] tputs("\033[3;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 3)    = "\033[4;1H"
[0x47849c] tputs("\033[4;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 4)    = "\033[5;1H"
[0x47849c] tputs("\033[5;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 25, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 26, 26) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 27, 27) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 28, 28) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 29, 29) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 30, 30) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 31, 31) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 32, 32) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 33, 33) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 34, 34) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 35, 35) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 36, 36) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 37, 37) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 38, 38) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 39, 39) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 40, 40) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 41, 41) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 42, 42) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 43, 43) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 44, 44) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 45, 45) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 46) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 47, 47) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 48, 48) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 49) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 50, 50) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 51, 51) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 52, 52) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 53, 53) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 54, 54) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 55, 55) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 56, 56) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 57, 57) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 58, 58) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 59, 59) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 60, 60) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 61, 61) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 62, 62) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 63, 63) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 64, 64) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 65) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 66, 66) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 67, 67) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 68, 68) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 69, 69) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 70, 70) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 71, 71) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 72, 72) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 73, 73) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 74, 74) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 75, 75) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 76, 76) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 77, 77) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 78, 78) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 80) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 5)    = "\033[6;1H"
[0x47849c] tputs("\033[6;1H", 1, 0x004783ae)     = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 12, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 13) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 15, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 16, 16) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 25) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 97, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 46, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 10, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 11) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 12) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 14) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 11, 15) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 17, 17) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 18, 18) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 19, 19) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 20, 20) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 21, 21) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 22, 22) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 23, 23) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 24, 24) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 99, 25) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 8, 12)   = "\033[13;9H"
[0x47849c] tputs("\033[13;9H", 1, 0x004783ae)    = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0x21d39d2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 13, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 14, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 102, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 49, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 115, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 106, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 100, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 8, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 9, 9) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 108, 10) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 4, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 5, 5) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 6, 6) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 7, 7) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 101, 8) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 3, 3) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 65, 4) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 0, 0) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 1, 1) = 0
[0x458367] strncasecmp(0x21d1e60, 0x48e550, 5, 2, 2) = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x21d39d2)   = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x21d39d2)    = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x443652] malloc(100)                           = 0x021d27b0
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 1)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 1)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b1, 0x21d27b0, 0, 1, 0x6a7280) = 0x21d27b1
[0x42318f] memmove(0x21d27b0, 0x21cffe0, 1, 1, 0x6a7280) = 0x21d27b0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 2)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 2)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b2, 0x21d27b1, 0, 2, 0x6a7280) = 0x21d27b2
[0x42318f] memmove(0x21d27b1, 0x21cffe0, 1, 2, 0x6a7280) = 0x21d27b1
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b3, 0x21d27b2, 0, 3, 0x6a7280) = 0x21d27b3
[0x42318f] memmove(0x21d27b2, 0x21cffe0, 1, 3, 0x6a7280) = 0x21d27b2
[0x457c43] __fdelt_chk(0, 0, 16, 0, 4)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 4)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b4, 0x21d27b3, 0, 4, 0x6a7280) = 0x21d27b4
[0x42318f] memmove(0x21d27b3, 0x21cffe0, 1, 4, 0x6a7280) = 0x21d27b3
[0x457c43] __fdelt_chk(0, 0, 16, 0, 5)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 5)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b5, 0x21d27b4, 0, 5, 0x6a7280) = 0x21d27b5
[0x42318f] memmove(0x21d27b4, 0x21cffe0, 1, 5, 0x6a7280) = 0x21d27b4
[0x457c43] __fdelt_chk(0, 0, 16, 0, 6)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 6)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b6, 0x21d27b5, 0, 6, 0x6a7280) = 0x21d27b6
[0x42318f] memmove(0x21d27b5, 0x21cffe0, 1, 6, 0x6a7280) = 0x21d27b5
[0x457c43] __fdelt_chk(0, 0, 16, 0, 6)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 6)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b7, 0x21d27b6, 0, 7, 0x6a7280) = 0x21d27b7
[0x42318f] memmove(0x21d27b6, 0x21cffe0, 1, 7, 0x6a7280) = 0x21d27b6
[0x457c43] __fdelt_chk(0, 0, 16, 0, 8)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 8)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b8, 0x21d27b7, 0, 8, 0x6a7280) = 0x21d27b8
[0x42318f] memmove(0x21d27b7, 0x21cffe0, 1, 8, 0x6a7280) = 0x21d27b7
[0x457c43] __fdelt_chk(0, 0, 16, 0, 9)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 9)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27b9, 0x21d27b8, 0, 9, 0x6a7280) = 0x21d27b9
[0x42318f] memmove(0x21d27b8, 0x21cffe0, 1, 9, 0x6a7280) = 0x21d27b8
[0x457c43] __fdelt_chk(0, 0, 16, 0, 9)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 9)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27ba, 0x21d27b9, 0, 10, 0x6a7280) = 0x21d27ba
[0x42318f] memmove(0x21d27b9, 0x21cffe0, 1, 10, 0x6a7280) = 0x21d27b9
[0x457c43] __fdelt_chk(0, 0, 16, 0, 11)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 11)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bb, 0x21d27ba, 0, 11, 0x6a7280) = 0x21d27bb
[0x42318f] memmove(0x21d27ba, 0x21cffe0, 1, 11, 0x6a7280) = 0x21d27ba
[0x457c43] __fdelt_chk(0, 0, 16, 0, 12)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 12)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bc, 0x21d27bb, 0, 12, 0x6a7280) = 0x21d27bc
[0x42318f] memmove(0x21d27bb, 0x21cffe0, 1, 12, 0x6a7280) = 0x21d27bb
[0x457c43] __fdelt_chk(0, 0, 16, 0, 13)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 13)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bd, 0x21d27bc, 0, 13, 0x6a7280) = 0x21d27bd
[0x42318f] memmove(0x21d27bc, 0x21cffe0, 1, 13, 0x6a7280) = 0x21d27bc
[0x457c43] __fdelt_chk(0, 0, 16, 0, 14)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 14)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27be, 0x21d27bd, 0, 14, 0x6a7280) = 0x21d27be
[0x42318f] memmove(0x21d27bd, 0x21cffe0, 1, 14, 0x6a7280) = 0x21d27bd
[0x457c43] __fdelt_chk(0, 0, 16, 0, 15)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 15)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27bf, 0x21d27be, 0, 15, 0x6a7280) = 0x21d27bf
[0x42318f] memmove(0x21d27be, 0x21cffe0, 1, 15, 0x6a7280) = 0x21d27be
[0x457c43] __fdelt_chk(0, 0, 16, 0, 16)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 16)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c0, 0x21d27bf, 0, 16, 0x6a7280) = 0x21d27c0
[0x42318f] memmove(0x21d27bf, 0x21cffe0, 1, 16, 0x6a7280) = 0x21d27bf
[0x457c43] __fdelt_chk(0, 0, 16, 0, 17)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 17)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c1, 0x21d27c0, 0, 17, 0x6a7280) = 0x21d27c1
[0x42318f] memmove(0x21d27c0, 0x21cffe0, 1, 17, 0x6a7280) = 0x21d27c0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 18)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 18)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c2, 0x21d27c1, 0, 18, 0x6a7280) = 0x21d27c2
[0x42318f] memmove(0x21d27c1, 0x21cffe0, 1, 18, 0x6a7280) = 0x21d27c1
[0x457c43] __fdelt_chk(0, 0, 16, 0, 19)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 19)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c3, 0x21d27c2, 0, 19, 0x6a7280) = 0x21d27c3
[0x42318f] memmove(0x21d27c2, 0x21cffe0, 1, 19, 0x6a7280) = 0x21d27c2
[0x457c43] __fdelt_chk(0, 0, 16, 0, 20)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 20)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c4, 0x21d27c3, 0, 20, 0x6a7280) = 0x21d27c4
[0x42318f] memmove(0x21d27c3, 0x21cffe0, 1, 20, 0x6a7280) = 0x21d27c3
[0x457c43] __fdelt_chk(0, 0, 16, 0, 21)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 21)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c5, 0x21d27c4, 0, 21, 0x6a7280) = 0x21d27c5
[0x42318f] memmove(0x21d27c4, 0x21cffe0, 1, 21, 0x6a7280) = 0x21d27c4
[0x457c43] __fdelt_chk(0, 0, 16, 0, 22)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 22)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c6, 0x21d27c5, 0, 22, 0x6a7280) = 0x21d27c6
[0x42318f] memmove(0x21d27c5, 0x21cffe0, 1, 22, 0x6a7280) = 0x21d27c5
[0x457c43] __fdelt_chk(0, 0, 16, 0, 23)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 23)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d27c7, 0x21d27c6, 0, 23, 0x6a7280) = 0x21d27c7
[0x42318f] memmove(0x21d27c6, 0x21cffe0, 1, 23, 0x6a7280) = 0x21d27c6
[0x457c43] __fdelt_chk(0, 0, 16, 0, 24)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 24)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x457e93] write(1, "\033[H\033[2J\033[1;1HDSARITA ma\r\na;lkdjf"..., 607) = 607
[0x443652] malloc(24)                            = 0x021def20
[0x44378b] memmove(0x21def20, 0x21d27b0, 24, 0x7fc3b3739728, 0) = 0x21def20
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("read", "redir >> move_4.1.1.out", 5) = -3
[0x41d6e6] strncmp("recover", "redir >> move_4.1.1.out", 5) = -1
[0x41d6e6] strncmp("redo", "redir >> move_4.1.1.out", 5) = 6
[0x41d6e6] strncmp("redir", "redir >> move_4.1.1.out", 5) = 0
[0x41fb94] strcasecmp(">> move_4.1.1.out", "END") = -39
[0x45890d] __xstat(1, "move_4.1.1.out", 0x7ffff30fc460) = -1
[0x419d4d] fopen("move_4.1.1.out", "a")          = 0x21d2820
[0x443968] free(0x021d27b0)                      = <void>
[0x443968] free(0x021def40)                      = <void>
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x21d39d2)   = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x21d39d2)    = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0)            = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x443652] malloc(1025)                          = 0x021d2a60
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x40431b] __sprintf_chk(0x21d2a7d, 1, -1, 0x47f48c, 0x487d86) = 2
[0x404406] __sprintf_chk(0x21d2a7f, 1, -1, 0x47f4ae, 1) = 24
[0x403b46] __sprintf_chk(0x21d2a97, 1, -1, 0x47f59b, 1) = 1
[0x443652] malloc(57)                            = 0x021d27b0
[0x44378b] memmove(0x21d27b0, 0x21d2a60, 57, 33, 0) = 0x21d27b0
[0x443652] malloc(24)                            = 0x021def40
[0x443652] malloc(57)                            = 0x021d2e70
[0x4437da] strncpy(0x021d2e70, ""~/Downloads/vim/inputs/copy1" l"..., 56) = 0x021d2e70
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x43aa3b] fputs("\n", 0x21d2820)                = 1
[0x43aa3b] fputs(""", 0x21d2820)                 = 1
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x43aa3b] fputs("~", 0x21d2820)                 = 1
[0x43aa3b] fputs("/", 0x21d2820)                 = 1
[0x43aa3b] fputs("D", 0x21d2820)                 = 1
[0x43aa3b] fputs("o", 0x21d2820)                 = 1
[0x43aa3b] fputs("w", 0x21d2820)                 = 1
[0x43aa3b] fputs("n", 0x21d2820)                 = 1
[0x43aa3b] fputs("l", 0x21d2820)                 = 1
[0x43aa3b] fputs("o", 0x21d2820)                 = 1
[0x43aa3b] fputs("a", 0x21d2820)                 = 1
[0x43aa3b] fputs("d", 0x21d2820)                 = 1
[0x43aa3b] fputs("s", 0x21d2820)                 = 1
[0x43aa3b] fputs("/", 0x21d2820)                 = 1
[0x43aa3b] fputs("v", 0x21d2820)                 = 1
[0x43aa3b] fputs("i", 0x21d2820)                 = 1
[0x43aa3b] fputs("m", 0x21d2820)                 = 1
[0x43aa3b] fputs("/", 0x21d2820)                 = 1
[0x43aa3b] fputs("i", 0x21d2820)                 = 1
[0x43aa3b] fputs("n", 0x21d2820)                 = 1
[0x43aa3b] fputs("p", 0x21d2820)                 = 1
[0x43aa3b] fputs("u", 0x21d2820)                 = 1
[0x43aa3b] fputs("t", 0x21d2820)                 = 1
[0x43aa3b] fputs("s", 0x21d2820)                 = 1
[0x43aa3b] fputs("/", 0x21d2820)                 = 1
[0x43aa3b] fputs("c", 0x21d2820)                 = 1
[0x43aa3b] fputs("o", 0x21d2820)                 = 1
[0x43aa3b] fputs("p", 0x21d2820)                 = 1
[0x43aa3b] fputs("y", 0x21d2820)                 = 1
[0x43aa3b] fputs("1", 0x21d2820)                 = 1
[0x43aa3b] fputs(""", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("l", 0x21d2820)                 = 1
[0x43aa3b] fputs("i", 0x21d2820)                 = 1
[0x43aa3b] fputs("n", 0x21d2820)                 = 1
[0x43aa3b] fputs("e", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("1", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("o", 0x21d2820)                 = 1
[0x43aa3b] fputs("f", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("7", 0x21d2820)                 = 1
[0x43aa3b] fputs("8", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("-", 0x21d2820)                 = 1
[0x43aa3b] fputs("-", 0x21d2820)                 = 1
[0x43aa3b] fputs("1", 0x21d2820)                 = 1
[0x43aa3b] fputs("%", 0x21d2820)                 = 1
[0x43aa3b] fputs("-", 0x21d2820)                 = 1
[0x43aa3b] fputs("-", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("c", 0x21d2820)                 = 1
[0x43aa3b] fputs("o", 0x21d2820)                 = 1
[0x43aa3b] fputs("l", 0x21d2820)                 = 1
[0x43aa3b] fputs(" ", 0x21d2820)                 = 1
[0x43aa3b] fputs("1", 0x21d2820)                 = 1
[0x457e93] write(1, "\033[1;1H\033[?12l\033[?25h\007\033[?25l\033[24;1H"..., 88) = 88
[0x443968] free(0x021d2a60)                      = <void>
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x21d39d2)   = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x21d39d2)    = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x443652] malloc(100)                           = 0x021d2ec0
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x47849c] tputs("\033[K", 1, 0x004783ae)        = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 1)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 1)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec1, 0x21d2ec0, 0, 1, 0x6a7280) = 0x21d2ec1
[0x42318f] memmove(0x21d2ec0, 0x21cffe0, 1, 1, 0x6a7280) = 0x21d2ec0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 2)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 2)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec2, 0x21d2ec1, 0, 2, 0x6a7280) = 0x21d2ec2
[0x42318f] memmove(0x21d2ec1, 0x21cffe0, 1, 2, 0x6a7280) = 0x21d2ec1
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec3, 0x21d2ec2, 0, 3, 0x6a7280) = 0x21d2ec3
[0x42318f] memmove(0x21d2ec2, 0x21cffe0, 1, 3, 0x6a7280) = 0x21d2ec2
[0x457c43] __fdelt_chk(0, 0, 16, 0, 4)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 4)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec4, 0x21d2ec3, 0, 4, 0x6a7280) = 0x21d2ec4
[0x42318f] memmove(0x21d2ec3, 0x21cffe0, 1, 4, 0x6a7280) = 0x21d2ec3
[0x457c43] __fdelt_chk(0, 0, 16, 0, 5)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 5)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec5, 0x21d2ec4, 0, 5, 0x6a7280) = 0x21d2ec5
[0x42318f] memmove(0x21d2ec4, 0x21cffe0, 1, 5, 0x6a7280) = 0x21d2ec4
[0x457c43] __fdelt_chk(0, 0, 16, 0, 6)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 6)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec6, 0x21d2ec5, 0, 6, 0x6a7280) = 0x21d2ec6
[0x42318f] memmove(0x21d2ec5, 0x21cffe0, 1, 6, 0x6a7280) = 0x21d2ec5
[0x457c43] __fdelt_chk(0, 0, 16, 0, 6)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 6)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec7, 0x21d2ec6, 0, 7, 0x6a7280) = 0x21d2ec7
[0x42318f] memmove(0x21d2ec6, 0x21cffe0, 1, 7, 0x6a7280) = 0x21d2ec6
[0x457c43] __fdelt_chk(0, 0, 16, 0, 8)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 8)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec8, 0x21d2ec7, 0, 8, 0x6a7280) = 0x21d2ec8
[0x42318f] memmove(0x21d2ec7, 0x21cffe0, 1, 8, 0x6a7280) = 0x21d2ec7
[0x457c43] __fdelt_chk(0, 0, 16, 0, 9)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 9)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec9, 0x21d2ec8, 0, 9, 0x6a7280) = 0x21d2ec9
[0x42318f] memmove(0x21d2ec8, 0x21cffe0, 1, 9, 0x6a7280) = 0x21d2ec8
[0x457c43] __fdelt_chk(0, 0, 16, 0, 10)          = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 10)           = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x457e93] write(1, "\033[1;1H\033[?12l\033[?25h\033[?25l\033[24;1H\033"..., 52) = 52
[0x443652] malloc(10)                            = 0x021d2800
[0x44378b] memmove(0x21d2800, 0x21d2ec0, 10, -11, 2) = 0x21d2800
[0x43aa3b] fputs("\n", 0x21d2820)                = 1
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("read", "redir END", 5)       = -3
[0x41d6e6] strncmp("recover", "redir END", 5)    = -1
[0x41d6e6] strncmp("redo", "redir END", 5)       = 6
[0x41d6e6] strncmp("redir", "redir END", 5)      = 0
[0x41fb94] strcasecmp("END", "END")              = 0
[0x41953a] fclose(0x21d2820)                     = 0
[0x443968] free(0x021d2ec0)                      = <void>
[0x443968] free(0x021def20)                      = <void>
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 0)    = "\033[1;1H"
[0x47849c] tputs("\033[1;1H", 1, 0x004783ae)     = 0
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 0x21d39d2)   = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 0x21d39d2)    = 0
[0x457c9f] select(1, 0x7ffff30fc620, 0, 0x7ffff30fc6a0, 0x7ffff30fc720) = 0
[0x443652] malloc(100)                           = 0x021d2ec0
[0x47849c] tputs("\033[?25l", 1, 0x004783ae)     = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x47849c] tputs("\033[K", 1, 0x004783ae)        = 0
[0x4785eb] tgoto("\033[%i%p1%d;%p2%dH", 0, 23)   = "\033[24;1H"
[0x47849c] tputs("\033[24;1H", 1, 0x004783ae)    = 0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 1)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 1)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec1, 0x21d2ec0, 0, 1, 0x6a7280) = 0x21d2ec1
[0x42318f] memmove(0x21d2ec0, 0x21cffe0, 1, 1, 0x6a7280) = 0x21d2ec0
[0x457c43] __fdelt_chk(0, 0, 16, 0, 2)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 2)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x423151] memmove(0x21d2ec2, 0x21d2ec1, 0, 2, 0x6a7280) = 0x21d2ec2
[0x42318f] memmove(0x21d2ec1, 0x21cffe0, 1, 2, 0x6a7280) = 0x21d2ec1
[0x457c43] __fdelt_chk(0, 0, 16, 0, 3)           = 0
[0x457c6b] __fdelt_chk(0, 0, 1, 0, 3)            = 0
[0x457c9f] select(1, 0x7ffff30fc210, 0, 0x7ffff30fc290, 0x7ffff30fc310) = 0
[0x457e93] write(1, "\033[1;1H\033[?12l\033[?25h\033[?25l\033[24;1H\033"..., 45) = 45
[0x443652] malloc(3)                             = 0x021def20
[0x44378b] memmove(0x21def20, 0x21d2ec0, 3, 0x7fc3b3739728, 0) = 0x21def20
[0x419875] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x4198b5] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d5ee] __ctype_b_loc()                       = 0x7fc3b3b606b8
[0x41d6e6] strncmp("write", "wq", 2)             = 1
[0x41d6e6] strncmp("wNext", "wq", 2)             = -35
[0x41d6e6] strncmp("wall", "wq", 2)              = -16
[0x41d6e6] strncmp("while", "wq", 2)             = -9
[0x41d6e6] strncmp("winsize", "wq", 2)           = -8
[0x41d6e6] strncmp("winpos", "wq", 2)            = -8
[0x41d6e6] strncmp("wnext", "wq", 2)             = -3
[0x41d6e6] strncmp("wprevious", "wq", 2)         = -1
[0x41d6e6] strncmp("wq", "wq", 2)                = 0
[0x429867] strcmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri/Downloads/vim/inpu"...) = 0
[0x458a88] tcsetattr(0, 0, 0x7ffff30fa130)       = 0
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x427fb3] strcat(""~/Downloads/vim/inputs/copy1" ", "") = ""~/Downloads/vim/inputs/copy1" "
[0x457e93] write(1, ""~/Downloads/vim/inputs/copy1"", 30) = 30
[0x443652] malloc(8192)                          = 0x021df7a0
[0x429b76] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fa230) = 0
[0x429c89] open("/home/almohri/Downloads/vim/inpu"..., 0, 00) = 3
[0x443652] malloc(41)                            = 0x021d8fe0
[0x44378b] memmove(0x21d8fe0, 0x21d8fa0, 41, -42, 4) = 0x21d8fe0
[0x443652] malloc(44)                            = 0x021d2820
[0x428284] strcpy(0x021d2820, "/home/almohri/Downloads/vim/inpu"...) = 0x021d2820
[0x4283db] strcpy(0x021d2848, "~")               = 0x021d2848
[0x42842b] strcmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri/Downloads/vim/inpu"...) = -126
[0x429d73] __xstat(1, "/home/almohri/Downloads/vim/inpu"..., 0x7ffff30fa2c0) = -1
[0x443968] free(0x021d8fe0)                      = <void>
[0x42ab3a] unlink("/home/almohri/Downloads/vim/inpu"...) = -1
[0x42ab53] open("/home/almohri/Downloads/vim/inpu"..., 193, 0666) = 7
[0x4588dd] chmod("/home/almohri/Downloads/vim/inpu"..., 0700) = 0
[0x429ecc] fchown(7, 0xffffffff, 1000, -1, 0)    = 0
[0x429f2f] read(3, "DSARITA ma\na;lkdjf ;lajd ;adkfj "..., 8192) = 1364
[0x427d27] write(7, "DSARITA ma\na;lkdjf ;lajd ;adkfj "..., 1364) = 1364
[0x429f2f] read(3, "", 8192)                     = 0
[0x429f4a] close(7)                              = 0
[0x427e40] utime(0x21d2820, 0x7ffff30fa180, 0x53b60d31, -1, 0) = 0
[0x429f89] close(3)                              = 0
[0x402c3e] strcmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri/Downloads/vim/inpu"...) = 0
[0x42a21d] open("/home/almohri/Downloads/vim/inpu"..., 577, 0666) = 3
[0x427d27] write(3, "DSARITA ma\na;lkdjf ;lajd ;adkfj "..., 1364) = 1364
[0x42a578] close(3)                              = 0
[0x4588dd] chmod("/home/almohri/Downloads/vim/inpu"..., 0100700) = 0
[0x44037c] getenv("HOME")                        = "/home/almohri"
[0x4403db] strncmp("/home/almohri/Downloads/vim/inpu"..., "/home/almohri", 13) = 0
[0x427e12] __sprintf_chk(0x21cffff, 1, -1, 0x4853b5, 78) = 25
[0x42a784] strcat(""~/Downloads/vim/inputs/copy1" 7"..., " written") = ""~/Downloads/vim/inputs/copy1" 7"...
[0x443652] malloc(24)                            = 0x021d2f30
[0x443652] malloc(65)                            = 0x021d2860
[0x4437da] strncpy(0x021d2860, ""~/Downloads/vim/inputs/copy1" 7"..., 64) = 0x021d2860
[0x457e93] write(1, " 78 lines, 1364 characters writt"..., 34) = 34
[0x42a905] unlink("/home/almohri/Downloads/vim/inpu"...) = 0
[0x443968] free(0x021d2820)                      = <void>
[0x443968] free(0x021df7a0)                      = <void>
[0x47849c] tputs("\033[?1l\033>", 1, 0x004783ae) = 0
[0x457e93] write(1, "\r\033[?1l\033>", 8)        = 8
[0x47849c] tputs("\033[?12l\033[?25h", 1, 0x004783ae) = 0
[0x47849c] tputs("\033[?1049l", 1, 0x004783ae)   = 0
[0x457e93] write(1, "\033[?12l\033[?25h\033[?1049l", 20) = 20
[0x47849c] tputs("\033[J", 1, 0x004783ae)        = 0
[0x457e93] write(1, "\033[J", 3)                 = 3
[0x433c68] close(6)                              = 0
[0x433c88] unlink("/home/almohri/Downloads/vim/inpu"...) = 0
[0x443968] free(0x021ddea0)                      = <void>
[0x443968] free(0x021dde60)                      = <void>
[0x443968] free(0x021dce50)                      = <void>
[0x443968] free(0x021dce10)                      = <void>
[0x443968] free(0x021d99a0)                      = <void>
[0x443968] free(0x021d9640)                      = <void>
[0x443968] free(0x021deeb0)                      = <void>
[0x443968] free(0x021d91d0)                      = <void>
[0x443968] free(0x021eef70)                      = <void>
[0x443968] free(0x021ef020)                      = <void>
[0x4589af] exit(0 <unfinished ...>
[0xffffffffffffffff] +++ exited (status 0) +++
